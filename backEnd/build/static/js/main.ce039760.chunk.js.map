{"version":3,"sources":["assets/constant/constants.js","assets/screens/LoginScreen.js","assets/components/Event.js","assets/components/AddButton.jsx","assets/screens/AdminScreen.js","assets/components/AboutCard.jsx","assets/components/AboutForm.js","assets/components/XlsxConverter.js","assets/components/DeleteButton.jsx","assets/components/ParticipantsCard.jsx","assets/components/SortButton.jsx","assets/components/ParticipantsForm.js","assets/components/ProgrammeCard.js","assets/components/ProgrammeForm.js","assets/components/SpeakerCard.jsx","assets/components/SpeakersForm.js","assets/components/SponsorCard.jsx","assets/components/SponsorsForm.js","assets/components/VenueCard.jsx","assets/components/VenueTabForm.js","assets/components/MapMarkerCard.jsx","assets/components/MapMakerForm.js","assets/components/GeneralCard.jsx","assets/components/CreateEventForm.js","App.js","serviceWorker.js","index.js"],"names":["LoginScreen","props","useState","form","setForm","localStorage","setItem","Details","setDetails","baseURL","Constants","canLogin","updateField","e","target","name","value","Container","Row","Col","style","display","flexDirection","justifyContent","alignItems","Card","className","autoComplete","Group","Label","Control","type","onChange","Text","Button","onClick","a","async","preventDefault","axios","post","un","pw","then","response","visibility","data","token","changeContent","return","EventID","catch","error","toString","includes","Event","imgsrc","clickHandler","window","confirm","delet","id","edit","img","width","backgroundColor","Img","variant","src","border","color","Body","Title","Link","href","DeleteButton","AdminScreen","LoginVisibility","setLoginVisibility","EventList","setEventList","EventObject","setEventObject","Search","findMetadata","req","get","headers","Authorization","readSession","res","console","log","findEvent","eventId","deleteEvent","pageLoad","useEffect","listObjects","slice","reverse","map","item","index","metadata","eventName","key","_id","colorScheme","nid","changeID","eventImage","scrollTo","AboutModal","setAboutModal","Modal","show","onHide","Header","closeButton","Footer","position","left","Image","right","changeSession","alignContent","result","length","alignSelf","justifySelf","cont","sess","location","reload","AboutCard","FormLabel","FormGroup","FormControl","as","size","defaultValue","bodyText1","bodyText2","bodyText3","bodyText4","placeName","placeAddress","placeEmail","OverlayTrigger","placement","delay","hide","overlay","Tooltip","placePhone","MiWebsite","MiOrg","MiEmail","disclaimer1","disclaimer2","AboutForm","editForm","FO","xlsxToJson","f","Promise","file","files","reader","FileReader","onload","xlsxBin","xlsx","read","wsName","SheetNames","ws","Sheets","jsonData","utils","sheet_to_json","header","check","i","splice","readAsBinaryString","SponsorCard","formObject","changeHandler","ImageID","ID","FirstName","LastName","Email","Phone","Company","Country","SortButton","content","ParticipantsForm","subForm","Form","dataContainer","setSearch","cardHandler","forceCheck","height","fileToUpload","flex","htmlFor","push","document","getElementById","reset","download","marginRight","marginLeft","flexWrap","marginBottom","InputGroup","borderRadius","padding","onKeyDown","keyCode","parentNode","childNodes","currentTarget","list","sortedList","sort","b","sortParticipants","ProgrammeCard","PdfIconElement","match","Pdf","counter","day","NameOfSpeaker","TitleOfSpeaker","SpecialTitleOfSpeaker","CompanyOfSpeaker","Time","Location","rows","Description","fileHandler","ProgrammeForm","FormToData","Data","setData","ActiveDay","setActiveDay","getTime","obj","time","split","parseFloat","convertToMinutes","dataToForm","found","fix","newForm","replace","j","clickEmpty","getHighestDay","parseInt","dayHandler","highest","loop","dayButtons","takenDays","buttonNum","disabled","min","placeholder","ButtonGroup","vertical","marginTop","temp","sortAlgorithm","SpeakerCard","speakerImgsrc","Speaker","SpecialTitle","fluid","roundedCircle","URL","createObjectURL","changeImage","SpeakersForm","EditID","sortSpeakers","sponsorImgsrc","CompanyName","CompanyUrl","SponsorsForm","sortSponsors","VenueCard","image","venueImgsrc","title","VenueTabForm","unsortedList","sortVenue","MapMarkerCard","markerImgsrc","formElement","ErrorMsg","setErrorMsg","markerType","description","category","sm","rating","webURL","address","FormText","query","apiurl","lat","lon","long","MapMarkerForm","restaurants","hotels","others","formToData","ActiveCat","setActiveCat","catHandler","newObj","destination","GeneralCard","generalImgsrc","eventPass","latlongForm","maxLength","eventColor","Check","label","checked","onError","CreateEventForm","container","ActiveForm","setActiveForm","setEditID","Files","setFiles","ToastShow","setToastShow","ToastHeader","setToastHeader","ToastBody","setToastBody","ModalShow","setModalShow","ModalText","setModalText","ModalAuth","setModalAuth","Changes","setChanges","eventWebUrl","eventTitle","participants","programme","speakers","sponsors","mapmarkers","venue","bodyText","disclaimer","FormObjects","setFormObjects","parseEventData","getEventData","getPassData","pass","about","eventPlace","phone","email","moreInformation","eventWebsite","organizer","mapData","selectForm","appendForm","bodyTexts","disclaimers","finalForm","createEventPost","route","adminToken","getItem","toast","retry","uploadFile","uploadFiles","message","status","cat","fd","FormData","append","bound","body","backdrop","keyboard","Spinner","animation","top","zIndex","Navbar","expand","paddingLeft","paddingRight","Brand","Toast","onClose","autohide","App","Content","setContent","input","clear","Boolean","hostname","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ijBAAe,EACF,wBC8GEA,EAjGK,SAACC,GAAW,IAAD,EACHC,mBAAS,IADN,mBACpBC,EADoB,KACdC,EADc,KAE3BC,aAAaC,QAAQ,OAAQH,GAFF,MAGGD,mBAAS,IAHZ,mBAGpBK,EAHoB,KAGXC,EAHW,KAIrBC,EAAUC,EAEZC,GAAW,EASTC,EAAc,SAAAC,GAChBT,EAAQ,eACDD,EADA,eAEFU,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAuDlC,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,MAAO,CAACC,QAAS,OAAQC,cAAe,SAAUC,eAAe,SAAUC,WAAY,WACxF,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,UAAU,cAAcC,aAAa,OACvC,kBAAC,IAAKC,MAAN,KACI,kBAAC,IAAKC,MAAN,iBACA,kBAAC,IAAKC,QAAN,CAAcC,KAAK,OAAOhB,KAAK,KAAKiB,SAAUpB,KAElD,kBAAC,IAAKgB,MAAN,KACI,kBAAC,IAAKC,MAAN,iBACA,kBAAC,IAAKC,QAAN,CAAcC,KAAK,WAAWhB,KAAK,KAAKiB,SAAUpB,IAClD,kBAAC,IAAKqB,KAAN,CAAWP,UAAU,eAAenB,IAExC,kBAAC2B,EAAA,EAAD,CAAQC,QAnEhC,SAA4BtB,GAA5B,SAAAuB,EAAAC,OAAA,oDAEO1B,EAFP,oBAGQE,EAAEyB,mBACC,OAAQnC,GAAQ,OAAQA,GAJnC,wBAKYQ,GAAW,EACXH,EAAW,kBANvB,WAAA4B,EAAA,MAQkBG,IAAMC,KAAK/B,EAAQ,cAAc,CACnC,SAAYN,EAAKsC,GACjB,SAAYtC,EAAKuC,KAEpBC,MAAK,SAAUC,GAEZjC,GAAW,EACXH,EAAW,WAKXP,EAAM4C,YAAW,GAEjBxC,aAAaC,QAAQ,UAAWsC,EAASE,KAAKC,OAC9C9C,EAAM+C,cAAc,eAEpB/C,EAAMgD,OAAOhD,EAAMiD,YAEtBC,OAAM,SAAUC,GAEbzC,GAAW,EAIRyC,EAAMC,WAAWC,SAAS,QAEzB9C,EAAW,0CAnC/B,OAsCYG,GAAW,EAtCvB,wBA0CYH,EAAW,sCA1CvB,wCAmEwB,eCpDb+C,EAxCD,SAACtD,GACX,IACIuD,EASJ,SAAeC,EAAa5C,GAA5B,SAAAuB,EAAAC,OAAA,gDAEyB,WAAlBxB,EAAEC,OAAOC,KACL2C,OAAOC,QAAP,iDAAyD1D,EAAMc,KAA/D,QACCd,EAAM2D,MAAM3D,EAAM4D,IAIA,SAAlBhD,EAAEC,OAAOC,MAEbd,EAAM6D,KAAK7D,EAAM4D,IAVzB,qCAcA,OApBIL,EADDvD,EAAM8D,IAAIT,SAAS,SACTrD,EAAM8D,IAJL,wBAOO,WAAD,OAAY9D,EAAM4D,GAAlB,YAAwB5D,EAAM8D,KAkB9C,kBAACtC,EAAA,EAAD,CAAML,MAAO,CAAE4C,MAAO,QAASC,gBAAgB,GAAD,OAAyB,YAArBhE,EAAM4C,WAA2B,QAAU,aACxF5C,EAAM8D,IAAM,kBAACtC,EAAA,EAAKyC,IAAN,CAAUxC,UAAU,eAAeyC,QAAQ,MAAMC,IAAKZ,EAAQpC,MAAO,CAACiD,OAAO,aAAD,OAAcpE,EAAMqE,UAAc,KAC3H,kBAAC7C,EAAA,EAAK8C,KAAN,KACI,kBAAC9C,EAAA,EAAK+C,MAAN,KAAavE,EAAMc,MAEnB,kBAACU,EAAA,EAAKgD,KAAN,CAAWC,KAAK,IAAI3D,KAAK,OAAOW,UAAU,iBAAiBS,QAASsB,GAApE,QACA,kBAAChC,EAAA,EAAKgD,KAAN,CAAWC,KAAK,IAAI3D,KAAK,SAASW,UAAU,cAAcS,QAASsB,GAAnE,a,QC5BDkB,G,OAVM,SAAA1E,GACnB,OACI,kBAACiC,EAAA,EAAD,CAAQR,UAAU,YAAYmC,GAAI5D,EAAM4D,GAAI9C,KAAMd,EAAMc,KAAMoB,QAASlC,EAAMkC,QAASf,MAAOnB,EAAMmB,OACjG,yBAAKM,UAAU,0BACb,uBAAGA,UAAU,gBAAgBmC,GAAI5D,EAAM4D,GAAI9C,KAAMd,EAAMc,MAAvD,S,QC0QK6D,EA5PK,SAAC3E,GAAW,IAAD,EACmBC,oBAAS,GAD5B,mBACpB2E,EADoB,KACHC,EADG,KAErBrE,EAAUC,EAFW,EAGOR,mBAAS,IAHhB,mBAGpB6E,EAHoB,KAGTC,EAHS,OAIW9E,mBAAS,IAJpB,mBAIpB+E,EAJoB,KAIPC,EAJO,OAKChF,mBAAS,IALV,mBAKpBiF,EALoB,UAyE3B,SAAeC,IAAf,eAAAhD,EAAAC,OAAA,uDACUgD,EAAM9C,IAAM+C,IAAI7E,EAAQ,mBAAoB,CAC9C8E,QAAQ,CACNC,cAAe,UAAUvF,EAAMwF,iBAHzC,kBAMWJ,EACF1C,MAAK,SAAU+C,GAEhB,OADaA,EAAI5C,QAGhBK,OAAM,SAAUC,GAGjB,OADA0B,GAAmB,GACZ,OAdf,qCAlE2B,OAAxB7E,EAAMwF,gBACLE,QAAQC,IAAI,gCACZ3F,EAAM+C,cAAc,gBAkFxB,IAAM6C,EAAY,SAASC,GASvB,OARYvD,IAAMC,KAAK/B,EAAQ,aAAa,CACxCoD,GAAIiC,GAER,CACIP,QAAQ,CACNC,cAAe,UAAUvF,EAAMwF,iBAIpC9C,MAAK,SAAU+C,GACZ,OAAOA,EAAI5C,QAEdK,OAAM,SAAUC,QAwBf2C,EAAc,SAASD,GASzB,OARYvD,IAAMC,KAAK/B,EAAQ,eAAe,CAC1CoD,GAAIiC,GAER,CACIP,QAAQ,CACNC,cAAe,UAAUvF,EAAMwF,iBAIpC9C,MAAK,SAAU+C,GAEZ,OADAM,IACON,EAAI5C,QAEdK,OAAM,SAAUC,GAEb0B,GAAmB,GACnBE,EAAa,QAmCrB,SAAegB,IAAf,SAAA5D,EAAAC,OAAA,4DAEI2C,EAFJ,WAAA5C,EAAA,MAEuBgD,KAFvB,uEA9BAa,qBAAU,WACN,IAAIC,EAAcnB,EAAUoB,MAAM,GAAGC,UAAUC,KAAI,SAACC,EAAMC,GAEtD,OAAGD,EAAKE,SAASC,UAAUnD,SAAS6B,GAMzB,yBAAKuB,IAAKH,GACT,kBAAC,EAAD,CAAOxF,KAAMuF,EAAKE,SAASC,UACvB5C,GAAIyC,EAAKK,IACTrC,MAAOgC,EAAKE,SAASI,YACrB/D,WAAYyD,EAAKE,SAAS3D,WAC1Be,MAAOmC,EACPjC,KAAM,SAAC+C,GAAO5G,EAAM6G,SAASD,IAC7B9C,IAAKuC,EAAKE,SAASO,cAIxB,QAGf7B,EAAegB,KAEhB,CAACnB,IASJkB,qBAAU,WACND,MAED,CAACb,IACJc,qBAAU,WAEND,IACAtC,OAAOsD,SAAS,EAAG,KAEpB,IAjMwB,MAmMS9G,oBAAS,GAnMlB,mBAmMpB+G,EAnMoB,KAmMRC,EAnMQ,KAqM3B,OACI,oCACA,kBAACC,EAAA,EAAD,CAAOC,KAAMH,EAAYI,OAAQ,WAAKH,GAAc,KAChD,kBAACC,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACrB,kBAACJ,EAAA,EAAM3C,MAAP,6BAEJ,kBAAC2C,EAAA,EAAM5C,KAAP,KACI,8NAIJ,kBAAC4C,EAAA,EAAMK,OAAP,KACI,sEACA,kBAACtF,EAAA,EAAD,CAAQC,QAAS,WAAK+E,GAAc,IAAS/C,QAAQ,WAArD,WAGR,yBAAK/C,MAAO,CAACC,QAAQ,OAAQC,cAAc,MAAOC,eAAe,SAAUC,WAAW,WAClF,kBAACU,EAAA,EAAD,CAAQC,QAAS,WAAK+E,GAAc,IAAQ9F,MAAO,CAACqG,SAAS,WAAWC,KAAK,QAASvD,QAAQ,mBAA9F,SACA,kBAACwD,EAAA,EAAD,CAAOvD,IAAI,2EAA2EJ,MAAM,QAC5F,kBAAC9B,EAAA,EAAD,CAAQd,MAAO,CAACqG,SAAS,WAAWG,MAAM,QAASzD,QAAQ,kBAAkBhC,QAAS,WAClFlC,EAAM4H,cAAc,IACpB5H,EAAM+C,cAAc,iBAFxB,WAiBJ,yBAAK5B,MAAO,CAACC,QAAS,OAAQC,cAAc,SAAUC,eAAe,SAAUuG,aAAc,WACzF,kBAAC,EAAD,CAAWjE,GAAG,IAAI1B,QAAS,SAACtB,GAAD,OA9NnC,SAA4BA,GAA5B,SAAAuB,EAAAC,OAAA,mDAGuB,MAAhBxB,EAAEC,OAAO+C,GAHhB,4BAIQmB,EAJR,WAAA5C,EAAA,MAI2BgD,KAJ3B,4DAM4B,MAAhBvE,EAAEC,OAAO+C,GANrB,iBAOQiB,GAAmB,GAP3B,2BAS4B,MAAhBjE,EAAEC,OAAO+C,GATrB,iBAWQ5D,EAAM+C,cAAc,eAX5B,2BAa4B,MAAhBnC,EAAEC,OAAO+C,GAbrB,oCAAAzB,EAAA,MAecG,IAAMC,KAAK/B,EAAQ,aAAa,CAClCoD,GAAI,4BAEN,CACE0B,QAAQ,CACNC,cAAe,UAAUvF,EAAMwF,iBAIpC9C,MAAK,SAAU+C,OAIfvC,OAAM,SAAUC,QA5BzB,mCAiC4B,MAAhBvC,EAAEC,OAAO+C,GAjCrB,iBAkCqBuB,IACRzC,MAAK,SAASoF,OAGlB5E,OAAM,SAAUC,OAtCzB,2BA0C4B,MAAhBvC,EAAEC,OAAO+C,GA1CrB,iBA2CqBgC,EAAU,4BAClBlD,MAAK,SAASoF,OAGlB5E,OAAM,SAAUC,OA/CzB,2BAmD4B,MAAhBvC,EAAEC,OAAO+C,GAnDrB,oCAAAzB,EAAA,MAqDcnC,EAAM6G,SAAS,OArD7B,2BAAA1E,EAAA,MAsDcnC,EAAM+C,cAAc,iBAtDlC,gCAwDanC,EAAEC,OAAO+C,GAxDtB,sCA8N0CJ,CAAa5C,MAC9CoE,EAAY+C,OAAS,EAAI/C,EAAc,uBAAG7D,MAAO,CAAC6G,UAAU,SAAUC,YAAY,WAA3C,iCAE3CrD,EACG,kBAACpD,EAAA,EAAD,CAAMoC,GAAG,SAASzC,MAAO,CAACC,QAAQ,OAAQE,eAAe,SAAUC,WAAW,WAC1E,uBAAGqC,GAAG,cAAN,oDACA,kBAAC,EAAD,CACAb,cAAe,SAACmF,GAAUlI,EAAM+C,cAAcmF,IAC9C1C,YAAa,WAAOxF,EAAMwF,eAC1BoC,cAAe,SAACO,GAAUnI,EAAM4H,cAAcO,IAC9CvF,WAAYiC,EACZ7B,OAAQ,WAAKS,OAAO2E,SAASC,aACvB,O,mDCpHPC,EAjJG,SAAAtI,GAChB,IAAIE,EAAOF,EAAME,KAgBjB,OAdA8F,qBAAU,WAGR9F,EAAOF,EAAME,QAYb,kBAAC,IAAD,CAAM6B,SAAU,SAACnB,GAAD,OAAMZ,EAAM+B,SAASnB,KACnC,kBAACY,EAAA,EAAD,KACE,yBAAKC,UAAU,UACb,kBAAC8G,EAAA,EAAD,qBACA,kBAACtH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,kBACA,kBAACE,EAAA,EAAD,CAAaC,GAAG,WAAWC,KAAK,KAAK7H,KAAK,YAAY8H,aAAc1I,EAAK2I,eAI/E,kBAAC5H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,kBACA,kBAACE,EAAA,EAAD,CAAaC,GAAG,WAAWC,KAAK,KAAK7H,KAAK,YAAY8H,aAAc1I,EAAK4I,eAI/E,kBAAC7H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,kBACA,kBAACE,EAAA,EAAD,CAAaC,GAAG,WAAWC,KAAK,KAAK7H,KAAK,YAAY8H,aAAc1I,EAAK6I,eAI/E,kBAAC9H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,kBACA,kBAACE,EAAA,EAAD,CAAaC,GAAG,WAAWC,KAAK,KAAK7H,KAAK,YAAY8H,aAAc1I,EAAK8I,iBAMnF,kBAACxH,EAAA,EAAD,KACE,yBAAKC,UAAU,UACb,kBAAC8G,EAAA,EAAD,0BACA,kBAACtH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,0BACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK7H,KAAK,YAAY8H,aAAc1I,EAAK+I,cAG/D,kBAAC/H,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,6BACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK7H,KAAK,eAAe8H,aAAc1I,EAAKgJ,kBAIpE,kBAACjI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,2BACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK7H,KAAK,aAAa8H,aAAc1I,EAAKiJ,eAGhE,kBAACjI,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,2BACA,kBAACa,EAAA,EAAD,CACAC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,qDAET,kBAAChB,EAAA,EAAD,CAAaE,KAAK,KAAK7H,KAAK,aAAa8H,aAAc1I,EAAKwJ,mBAOtE,kBAAClI,EAAA,EAAD,KACE,yBAAKC,UAAU,UACb,kBAAC8G,EAAA,EAAD,yBACA,kBAACtH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,sBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK7H,KAAK,YAAY8H,aAAc1I,EAAKyJ,cAG/D,kBAACzI,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,wBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK7H,KAAK,QAAQ8H,aAAc1I,EAAK0J,WAI7D,kBAAC3I,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,+BACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK7H,KAAK,UAAU8H,aAAc1I,EAAK2J,eAMnE,kBAACrI,EAAA,EAAD,KACE,yBAAKC,UAAU,UACb,kBAACR,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,oBACA,kBAACE,EAAA,EAAD,CAAaC,GAAG,WAAWC,KAAK,KAAK7H,KAAK,cAAc8H,aAAc1I,EAAK4J,iBAIjF,kBAAC7I,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,GAAG,WAAWC,KAAK,KAAK7H,KAAK,cAAc8H,aAAc1I,EAAK6J,qBCuD5EC,EAvLG,SAAChK,GAiEf,OAkHI,kBAAC,EAAD,CAAW+B,SAAU,SAACnB,GAAKZ,EAAMiK,SAASrJ,IAAKV,KAAMF,EAAMkK,M,iBC7LpD,SAASC,EAAWC,GAC/B,OAAO,IAAIC,SAAQ,SAAC5E,GAEhB,IAAI6E,EAAOF,EAAEG,MAAM,GACnB,GAAGD,GAAsB,sEAAdA,EAAKxI,KAA6E,CACzF,IAAI0I,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAS9J,GACrB,IAAIiC,EAAOjC,EAAEC,OAAOiH,OAChB6C,EAAUC,IAAKC,KAAKhI,EAAM,CAACf,KAAK,WAC9BgJ,EAASH,EAAQI,WAAW,GAC5BC,EAAKL,EAAQM,OAAOH,GAEpBI,EAAWN,IAAKO,MAAMC,cAAcJ,EAAG,CAACK,OAAO,IACrD3F,QAAQC,IAAIuF,GAEZ,IADA,IAAII,GAAQ,EACNA,GAASJ,EAASnD,OAAS,GAC7B,IAAI,IAAIwD,KAAKL,EAAS,CAClB,IAAIA,EAASK,GAAGxD,OAAS,EAAE,CACvBmD,EAASM,OAAOD,EAAE,GAClBD,GAAQ,EACR,MAGAA,GAAQ,EAKpB7F,EAAIyF,IAERV,EAAOiB,mBAAmBnB,QAG1B5E,QAAQC,IAAI,sBACbF,EAAI,S,WCxBAf,EAVM,SAAA1E,GACnB,OACI,kBAACiC,EAAA,EAAD,CAAQ2B,GAAI5D,EAAM4D,GAAI9C,KAAMd,EAAMc,KAAMW,UAAU,eAAeS,QAASlC,EAAMkC,QAASf,MAAOnB,EAAMmB,OACpG,yBAAKM,UAAU,6BACb,uBAAGmC,GAAI5D,EAAM4D,GAAI9C,KAAMd,EAAMc,MAA7B,QC2FK4K,G,OA3FK,SAAA1L,GAElB,IAAI2L,EAAa3L,EAAME,KAUvB,SAAS0L,EAAchL,GACrB,IAAIiC,EAAO7C,EAAM6C,MACjBA,EAAOA,EAAKqD,MAAM,GAAGC,WAChBnG,EAAMsG,OAAO1F,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAC5C8B,EAAOA,EAAKqD,MAAM,GAAGC,UACrBnG,EAAMiK,SAASpH,GASjB,OAtBG8I,EAAWE,SAAW7L,EAAM8L,KAC7BH,EAAWpI,OAAX,uCAAoDvD,EAAM8L,GAA1D,YAAgEH,EAAWE,UAE7E7F,qBAAU,WAGR2F,EAAa3L,EAAME,QAiBnB,kBAACsB,EAAA,EAAD,KACE,yBAAKC,UAAU,UACb,kBAAC,IAAD,KACE,kBAACR,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,mBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWI,UAAWhK,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,gBAGlG,kBAACI,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,kBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWK,SAAUjK,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,gBAInG,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,cACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWM,MAAOlK,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,YAG9F,kBAACI,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,cACA,kBAACa,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,qDAET,kBAAChB,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWO,MAAOnK,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,cAKlG,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,gBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWQ,QAASpK,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,cAGhG,kBAACI,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,yBACA,kBAACa,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,mCAET,kBAAChB,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWS,QAASrK,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,kBAOxG,kBAAC,EAAD,CAAcoB,QAnElB,WACE,IAAIW,EAAO7C,EAAM6C,MACjBA,EAAOA,EAAKqD,MAAM,GAAGC,WAChBqF,OAAOxL,EAAMsG,MAAO,GACzBzD,EAAOA,EAAKqD,MAAM,GAAGC,UACrBnG,EAAMiK,SAASpH,SClBJwJ,G,OAVI,SAAArM,GACjB,OACE,yBAAKyB,UAAU,qBACb,kBAACQ,EAAA,EAAD,CAAQR,UAAU,aAAamC,GAAI5D,EAAM4D,GAAI9C,KAAMd,EAAMc,KAAMoB,QAASlC,EAAMkC,QAASf,MAAOnB,EAAMmB,OACjGnB,EAAMsM,Y,0BC2MAC,EAnLU,SAACvM,GAAW,IAAD,EACRC,mBAASD,EAAMwM,SADP,mBACzBC,EADyB,KACnBtM,EADmB,SA8D5BuM,EA9D4B,EAwDJzM,mBAAS,IAxDL,mBAwDzBiF,EAxDyB,KAwDjByH,EAxDiB,KA+DhC,SAASC,EAAYhM,GAIjBT,EAAQS,GACRZ,EAAMiK,SAAS,eAAgBrJ,GAuDnC,OAlEAoF,qBAAU,WACQ,KAAXd,GACC2H,yBAEL,CAAC3H,IAuBJwH,EAAgBD,EAAKvG,MAAM,GAAGC,UAAUC,KAAI,SAACC,EAAMC,GAC/C,OAAID,EAAK8F,QAAS9I,SAAS6B,IACtBmB,EAAK+F,QAAS/I,SAAS6B,IACvBmB,EAAK4F,MAAO5I,SAAS6B,IACrBmB,EAAK0F,UAAW1I,SAAS6B,IACzBmB,EAAK2F,SAAU3I,SAAS6B,IACxBmB,EAAK6F,MAAO7I,SAAS6B,IACX,KAAXA,EAEI,kBAAC,IAAD,CAAUuB,IAAKH,EAAOwG,OAAQ,KAC1B,kBAAC,EAAD,CACIrG,IAAKH,EACLA,MAAOA,EACPpG,KAAMmG,EACNxD,KAAM4J,EACNxC,SAAU2C,EACVG,aAAc,SAACnM,GAAD,OAAKZ,EAAM+M,aAAanM,OAM3C,QAkBX,oCACA,yBAAKO,MAAO,CAAC2L,OAAO,OAAO1L,QAAQ,OAAOE,eAAe,SAASuG,aAAa,SAASxG,cAAc,QACtG,0BAAMuC,GAAG,WAAWzC,MAAO,CAACC,QAAQ,OAAO4L,KAAK,IAAI1L,eAAe,WAAWuG,aAAa,WACvF,2BAAOoF,QAAQ,eAAexL,UAAU,eAAxC,qBACA,2BAAOmC,GAAG,eAAe9B,KAAK,OAAOL,UAAU,SAASM,SAhGhE,SAA2BnB,GAA3B,mBAAAuB,EAAAC,OAAA,uDACIxB,EAAEyB,iBADN,WAAAF,EAAA,MAEyBgI,EAAWvJ,EAAEC,SAFtC,OAKI,IAAQ0K,KAHJL,EAFR,OAGIxF,QAAQC,IAAIuF,GACRhL,EAAO,GACEgL,EACTxF,QAAQC,IAAIuF,EAASK,IAClBA,EAAI,GACHrL,EAAKgN,KACD,CACId,QAASlB,EAASK,GAAG,GACrBQ,UAAWb,EAASK,GAAG,GACvBS,SAAUd,EAASK,GAAG,GACtBU,MAAOf,EAASK,GAAG,GACnBW,MAAOhB,EAASK,GAAG,GACnBY,QAASjB,EAASK,GAAG,KAKrCpL,EAAQD,GACRF,EAAMiK,SAAS,eAAgBwC,GAC/BU,SAASC,eAAe,YAAYC,QAtBxC,0CAkGI,yBAAKlM,MAAO,CAACC,QAAQ,OAAO4L,KAAK,IAAI1L,eAAe,aAAauG,aAAa,WAC1E,uBAAGpG,UAAU,cAAcgD,KAAK,2BAA2B6I,UAAQ,GAAnE,6BAGJ,yBAAKnM,MACD,CACIoM,YAAY,OAAQC,WAAW,OAAQpM,QAAQ,OAAOE,eAAe,SACrEC,WAAW,SAAUF,cAAc,SAAUoM,SAAS,SAQ1D,yBAAKtM,MAAO,CAACC,QAAQ,OAAQC,cAAe,MAAOqM,aAAa,OAAQpM,eAAgB,SAAUC,WAAW,WACrG,kBAACoM,EAAA,EAAD,CAAYxM,MAAO,CAACC,QAAQ,OAAQE,eAAe,SAAUC,WAAW,SAAUqM,aAAa,MAAOxJ,OAAO,wBAAyByJ,QAAQ,MAAON,YAAa,SAC9J,kBAAC9E,EAAA,EAAD,CAAahH,UAAU,WAAWqM,UAAW,SAAClN,GAAsB,KAAdA,EAAEmN,SAAgBpB,EAAU/L,EAAEC,OAAOE,WAE/F,kBAACkB,EAAA,EAAD,CAAQR,UAAU,eAAeS,QAAS,SAACtB,GAAKA,EAAEC,OAAOmN,WAAWC,WAAW,GAAGA,WAAW,GAAGlN,MAAQ,GAAI4L,EAAU,MAAtH,SACJ,kBAAC1K,EAAA,EAAD,CAAQR,UAAU,eAAeS,QAAS,SAACtB,GAAK+L,EAAU/L,EAAEsN,cAAcF,WAAWC,WAAW,GAAGA,WAAW,GAAGlN,SAAjH,YAGR,0BAAMW,aAAa,MAAMkC,GAAG,QAQxB,kBAAC,EAAD,CAAW1B,QA/InB,SAAoBtB,GAChBA,EAAEyB,iBACF,IAAInC,EAAOuM,EACXvM,EAAKgN,KAAK,CACNd,QAAS,GACTL,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,QAAS,KAEbhM,EAAQD,GACRF,EAAMiK,SAAS,eAAgBwC,OAqI/B,kBAAC,EAAD,CAAYH,QAAQ,OAAOpK,QAAS,YA5FxC,SAA2BiM,GACvB,IACIC,EADeD,EACWE,MAAK,SAAClM,EAAGmM,GAAJ,OAClCnM,EAAE6J,SAAWsC,EAAEtC,SACd,EACD7J,EAAE6J,WAAasC,EAAEtC,UAEhB7J,EAAE4J,UAAYuC,EAAEvC,UAAa,GAAW,KAC1C5L,EAAQiO,GACRpO,EAAMiK,SAAS,eAAgBmE,GAC/B1I,QAAQC,IAAIyI,GAkF+BG,CAAiB9B,MAC5D,yBAAKhL,UAAU,QACViL,K,2CC1DE8B,EA/HO,SAAAxO,GAClB,IA4BIyO,EA5BA9C,EAAa3L,EAAME,KAKvB,SAAS0L,EAAchL,GACnB,IAAIiC,EAAO7C,EAAM6C,KACjBA,EAAOA,EAAKqD,MAAM,GAAGC,UACA,SAAlBvF,EAAEC,OAAOiB,KACRe,EAAK7C,EAAMsG,OAAO1F,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAAM2N,MAAM,YAAY,GAGpE7L,EAAK7C,EAAMsG,OAAO1F,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAEhD8B,EAAOA,EAAKqD,MAAM,GAAGC,UACrBnG,EAAMiK,SAASpH,GAdnBmD,qBAAU,WAEN2F,EAAa3L,EAAME,QA2BnBuO,EADAzO,EAAME,KAAKyO,IACM,kBAAC,IAAD,CAASlN,UAAU,UAAUN,MAAO,CAACkD,MAAO,aAG5C,kBAAC,IAAD,CAAW5C,UAAU,YAI1C,IADA,IAAImN,EAAU,EACNrD,EAAI,EAAGA,EAAIvL,EAAM6C,KAAKkF,OAAQwD,IAC/BvL,EAAM6C,KAAK0I,GAAGsD,MAAQlD,EAAWkD,KAChCD,IAIR,OACI,6BACQ,kBAACpN,EAAA,EAAD,KACQ,yBAAKC,UAAU,WACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,KACI,kBAACR,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACsH,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,4BACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5G,SAAU6J,EAAe9K,KAAK,gBAAgBC,MAAO4K,EAAWmD,kBAG/F,kBAAC5N,EAAA,EAAD,KACI,kBAACsH,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,6BACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5G,SAAU6J,EAAe9K,KAAK,iBAAiBC,MAAO4K,EAAWoD,mBAGhG,kBAAC7N,EAAA,EAAD,KACI,kBAACsH,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,qCACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5G,SAAU6J,EAAe9K,KAAK,wBAAwBC,MAAO4K,EAAWqD,0BAGvG,kBAAC9N,EAAA,EAAD,KACI,kBAACsH,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,+BACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5G,SAAU6J,EAAe9K,KAAK,mBAAmBC,MAAO4K,EAAWsD,sBAItG,kBAAChO,EAAA,EAAD,KAOI,kBAACC,EAAA,EAAD,KACI,kBAACsH,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,aACA,kBAACa,EAAA,EAAD,CACAC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,+BAET,kBAAChB,EAAA,EAAD,CAAaE,KAAK,KAAK7H,KAAK,OAAOiB,SAAU6J,EAAe7K,MAAO4K,EAAWuD,UAItF,kBAAChO,EAAA,EAAD,KACI,kBAACsH,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,iBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK7H,KAAK,WAAWiB,SAAU6J,EAAe7K,MAAO4K,EAAWwD,aAG1F,kBAACjO,EAAA,EAAD,KACI,kBAACsH,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,oBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK7H,KAAK,cAAc4H,GAAG,WAAW0G,KAAK,IAAIrO,MAAO4K,EAAW0D,YAAatN,SAAU6J,SAM9H,yBAAKnK,UAAU,YAEC,kBAAC8G,EAAA,EAAD,KAAYkG,GACZ,2BAAOxB,QAAS,UAAUjN,EAAMsG,MAAO7E,UAAU,iBAAiBN,MAAO,CAAC4C,MAAO,aAAjF,cACA,kBAAC0E,EAAA,EAAD,CAAaE,KAAK,KAAK5G,SAAU,SAACnB,GAAKgL,EAAchL,GAzF7F,SAAqBA,GACjBZ,EAAM+M,aAAanM,GAwF0E0O,CAAY1O,GAAIA,EAAEC,OAAOE,MAAQ,MAAOU,UAAU,SAASX,KAAK,MAAMgB,KAAK,OAAO8B,GAAI,UAAU5D,EAAMsG,UAOlLsI,EAAU,EAAI,kBAAC,EAAD,CAAc1M,QAvGjD,WACI,IAAIW,EAAO7C,EAAM6C,MACjBA,EAAOA,EAAKqD,MAAM,GAAGC,WAChBqF,OAAOxL,EAAMsG,MAAO,GACzBzD,EAAOA,EAAKqD,MAAM,GAAGC,UACrBnG,EAAMiK,SAASpH,MAkG0D,Q,QCyWlE0M,EApbO,SAACvP,GAAW,IAAD,EACLC,mBAASD,EAAMwM,SADV,mBACtBC,EADsB,KAChBtM,EADgB,OAELF,mBAASuP,EAAW/C,IAFf,mBAEtBgD,EAFsB,KAEhBC,EAFgB,OAGKzP,mBAAS,KAHd,mBAGtB0P,EAHsB,KAGXC,EAHW,KAqB7B,SAASC,EAAQC,GACb,IAAIC,EAAQD,EAAIZ,KAAKc,MAAM,KAAM,GAAGA,MAAM,KAI1C,OAHAD,EAAK,GAAKE,WAAWF,EAAK,IAC1BA,EAAK,GAAKE,WAAWF,EAAK,IAC1BA,EAAK7C,KAAK+C,WAAWH,EAAIjB,MAClBkB,EAEX,SAASG,EAAiBhB,GACtB,OAAiB,GAAVA,EAAK,GAAUA,EAAK,GAAe,KAAVA,EAAK,GAgCzC,SAASiB,EAAWtN,GAGhB,IAAI3C,EAAO,GACX,IAAI,IAAIuG,KAAO5D,EAAK,CAChB,IAAI0I,OAAC,EACD6E,GAAQ,EACZ,IAAI7E,EAAI,EAAGA,EAAIrL,EAAK6H,OAAQwD,IACxB,GAAG,QAASrL,EAAKqL,IACVrL,EAAKqL,GAAGsD,MAAQ,OAAOhM,EAAK4D,GAAKoI,IAAI,CACpCuB,GAAQ,EACR,MAITA,EACClQ,EAAKqL,GAAGe,QAAQY,KACZ,CACIgC,KAAMrM,EAAK4D,GAAKyI,KAChBC,SAAUtM,EAAK4D,GAAK0I,SACpBE,YAAaxM,EAAK4D,GAAK4I,YACvBP,cAAejM,EAAK4D,GAAKqI,cACzBC,eAAgBlM,EAAK4D,GAAKsI,eAC1BC,sBAAuBnM,EAAK4D,GAAKuI,sBACjCC,iBAAkBpM,EAAK4D,GAAKwI,iBAC5BN,IAAK9L,EAAK4D,GAAKkI,MAKvBzO,EAAKgN,KACD,CACI2B,IAAK,OAAOhM,EAAK4D,GAAKoI,IACtBvC,QAAS,CACL,CACI4C,KAAMrM,EAAK4D,GAAKyI,KAChBC,SAAUtM,EAAK4D,GAAK0I,SACpBE,YAAaxM,EAAK4D,GAAK4I,YACvBP,cAAejM,EAAK4D,GAAKqI,cACzBC,eAAgBlM,EAAK4D,GAAKsI,eAC1BC,sBAAuBnM,EAAK4D,GAAKuI,sBACjCC,iBAAkBpM,EAAK4D,GAAKwI,iBAC5BN,IAAK9L,EAAK4D,GAAKkI,QAOvC,IAAI0B,GAAM,EACV,IAAI,IAAI9E,KAAK1I,EAAK,CACd,GAAG8M,IAAc9M,EAAK0I,GAAGsD,IAAI,CACzBwB,GAAM,EACN,MAEJA,GAAM,EAEPA,GACCT,EAAa,KAEjBzP,EAAQD,GACRwP,EAAQF,EAAWtP,IAIvB,SAASsP,EAAWtP,GAChB,IAAIoQ,EAAU,GACd,IAAI,IAAI/E,KAAKrL,EAAK,CACd,IAAI2O,EAAM3O,EAAKqL,GAAGsD,IAClBA,EAAMA,EAAI0B,QAAQ,OAAQ,IAC1B,IAAIjE,EAAUpM,EAAKqL,GAAGe,QAEtB,IAAI,IAAIkE,KAAKlE,EACTgE,EAAQpD,KACR,CACI2B,IAAKA,EACLK,KAAM5C,EAAQkE,GAAGtB,KACjBC,SAAU7C,EAAQkE,GAAGrB,SACrBE,YAAa/C,EAAQkE,GAAGnB,YACxBP,cAAexC,EAAQkE,GAAG1B,cAC1BC,eAAgBzC,EAAQkE,GAAGzB,eAC3BC,sBAAuB1C,EAAQkE,GAAGxB,sBAClCC,iBAAkB3C,EAAQkE,GAAGvB,iBAC7BN,IAAKrC,EAAQkE,GAAG7B,MAK5B,OAAO2B,EAEX,SAASG,EAAW7P,EAAGiO,GACnBjO,EAAEyB,iBACF,IACIkJ,EADArL,EAAOuM,EAEP2D,GAAQ,EACZ,IAAI7E,EAAI,EAAGA,EAAIrL,EAAK6H,OAAQwD,IACxB,GAAG,QAASrL,EAAKqL,IACVrL,EAAKqL,GAAGsD,MAAQ,OAAOA,EAAI,CAC1BuB,GAAQ,EACR,MAITA,EACClQ,EAAKqL,GAAGe,QAAQY,KACZ,CACIgC,KAAM,GACNC,SAAU,GACVE,YAAa,GACbP,cAAe,GACfC,eAAgB,GAChBC,sBAAuB,GACvBC,iBAAkB,GAClBN,IAAK,KAKbzO,EAAKgN,KACD,CACI2B,IAAK,OAAOA,EACZvC,QAAS,CACL,CACI4C,KAAM,GACNC,SAAU,GACVE,YAAa,GACbP,cAAe,GACfC,eAAgB,GAChBC,sBAAuB,GACvBC,iBAAkB,GAClBN,IAAK,OAOzBxO,EAAQD,GACRF,EAAMiK,SAAS,YAAa/J,GAC5BwP,EAAQF,EAAWtP,IAgFvB,SAASwQ,IACL,IAAI7N,EAAO4M,EACPZ,EAAM,EACV,IAAI,IAAItD,KAAK1I,EACNA,EAAK0I,GAAGsD,IAAMA,IACbA,EAAM8B,SAAS9N,EAAK0I,GAAGsD,MAG/B,OAAOA,EAEX,SAAS+B,EAAWhQ,GAChB,GAAqB,SAAlBA,EAAEC,OAAOC,KACR2P,EAAW7P,EAAG8P,IAAgB,QAE7B,GAAqB,UAAlB9P,EAAEC,OAAOC,KAAiB,CAI9B,IAHA,IAAI+B,EAAO4M,EACPoB,EAAUH,IACVI,GAAO,EACLA,GAEF,IAAI,IAAIvF,KADRuF,GAAO,EACMjO,EACT,GAAG8N,SAAS9N,EAAK0I,GAAGsD,OAASgC,EAAQ,CACjChO,EAAK2I,OAAOD,EAAE,GACduF,GAAO,EACP,MAIZX,EAAWtN,OAEW,QAAlBjC,EAAEC,OAAOC,KACb8O,EAAahP,EAAEC,OAAO+C,IAGtB6M,EAAW7P,EAAG+O,GAtTtB3J,qBAAU,WACNhG,EAAMiK,SAAS,YAAawC,KAE7B,CAACA,IAuTJ,IAAIsE,EAgBArE,EAfAsE,EAAY,GACZC,EAAY,EA8BhB,OA7BAF,EAAatB,EAAKrJ,KAAI,SAACC,EAAMC,GAGzB,OAAI0K,EAAU3N,SAASgD,EAAKwI,KAMjB,MALPmC,EAAU9D,KAAK7G,EAAKwI,KACpBoC,IACO,kBAAChP,EAAA,EAAD,CAAQwE,IAAKH,EAAOxF,KAAK,MAAM8C,GAAIyC,EAAKwI,IAAK3M,QAAS0O,EAAYnP,UAAWkO,IAActJ,EAAKwI,IAAM,SAAW,WAAYqC,SAAUvB,IAActJ,EAAKwI,KAA1J,OAAmLxI,EAAKwI,SAQvMnC,EAAgB+C,EAAKvJ,MAAM,GAAGC,UAAUC,KAAI,SAACC,EAAMC,GAE/C,OAAGmG,EAAK1E,OAAS,IACV1B,EAAKwI,MAAQc,GAA0B,MAAbA,GAClB,kBAAC,EAAD,CAAelJ,IAAKH,EAAOA,MAAOA,EAAOpG,KAAMmG,EAAMxD,KAAM4M,EAAMxF,SAAU,SAACpH,GAAD,OAAUsN,EAAWtN,IAAOkK,aAAc,SAACnM,GAAD,OAAKZ,EAAM+M,aAAanM,MAOjJ,QAKX,oCACA,yBAAKO,MAAO,CAAC2L,OAAO,OAAO1L,QAAQ,OAAOE,eAAe,SAASuG,aAAa,SAASxG,cAAc,QACtG,0BAAMuC,GAAG,WAAWzC,MAAO,CAACC,QAAQ,OAAO4L,KAAK,IAAI1L,eAAe,WAAWuG,aAAa,WACvF,2BAAOoF,QAAQ,eAAexL,UAAU,eAAxC,qBACA,2BAAOmC,GAAG,eAAe9B,KAAK,OAAOL,UAAU,SAASM,SApGhE,SAA2BnB,GAA3B,mBAAAuB,EAAAC,OAAA,kEAAAD,EAAA,MACyBgI,EAAWvJ,EAAEC,SADtC,OAII,IAAQ0K,KAHJL,EADR,OAGQiD,EAAO,GACEjD,EACNK,EAAI,GACH4C,EAAKjB,KACD,CACI2B,IAAK3D,EAASK,GAAG,GACjB2D,KAAMhE,EAASK,GAAG,GAClB4D,SAAUjE,EAASK,GAAG,GACtB8D,YAAanE,EAASK,GAAG,GACzBuD,cAAe5D,EAASK,GAAG,GAC3BwD,eAAgB7D,EAASK,GAAG,GAC5ByD,sBAAuB9D,EAASK,GAAG,GACnC0D,iBAAkB/D,EAASK,GAAG,GAC9BoD,IAAKzD,EAASK,GAAG,KAKjC4E,EAAWhC,GACXhB,SAASC,eAAe,YAAYC,QAtBxC,yCAsGI,yBAAKlM,MAAO,CAACC,QAAQ,OAAO4L,KAAK,IAAI1L,eAAe,aAAauG,aAAa,WAC1E,uBAAGpG,UAAU,cAAcgD,KAAK,wBAAwB6I,UAAQ,GAAhE,6BAGJ,0BAAM5L,aAAa,MAAMkC,GAAG,OAAOzC,MAAO,CAACC,QAAQ,SAC/C,uCACA,2BAAOU,KAAK,SAAShB,KAAK,OAAOqQ,IAAI,IAAIvI,aAAa,MACtD,2BAAO9G,KAAK,OAAOhB,KAAK,OAAOsQ,YAAY,SAC3C,2BAAOtP,KAAK,OAAOhB,KAAK,WAAWsQ,YAAY,mBAE/C,8BAAUtQ,KAAK,cAAcsQ,YAAY,sBACzC,2BAAQtP,KAAK,OAAOhB,KAAK,cAAcsQ,YAAY,iBACnD,2BAAQtP,KAAK,OAAOhB,KAAK,eAAesQ,YAAY,kBACpD,2BAAQtP,KAAK,OAAOhB,KAAK,sBAAsBsQ,YAAY,0BAC3D,2BAAQtP,KAAK,OAAOhB,KAAK,iBAAiBsQ,YAAY,oBACtD,2BAAQtP,KAAK,OAAOhB,KAAK,OAAO8C,GAAG,OACnC7B,SAAU,SAACnB,GAAKZ,EAAM+M,aAAanM,MACnC,4BAAQsB,QA5KhB,SAAsBtB,GAClBA,EAAEyB,iBACF,IAEIkJ,EAFArL,EAAOuM,EAGP2D,GAAQ,EACZ,IAAI7E,EAAI,EAAGA,EAAIrL,EAAK6H,OAAQwD,IACxB,GAAG,QAASrL,EAAKqL,IACVrL,EAAKqL,GAAGsD,MAAQ,OAAOjO,EAAEC,OAAOX,KAAK,GAAGa,MAAM,CAC7CqP,GAAQ,EACR,MAITA,EACClQ,EAAKqL,GAAGe,QAAQY,KACZ,CACIgC,KAAMtO,EAAEC,OAAOX,KAAK,GAAGa,MACvBoO,SAAUvO,EAAEC,OAAOX,KAAK,GAAGa,MAC3BsO,YAAazO,EAAEC,OAAOX,KAAK,GAAGa,MAC9B+N,cAAelO,EAAEC,OAAOX,KAAK,GAAGa,MAChCgO,eAAgBnO,EAAEC,OAAOX,KAAK,GAAGa,MACjCiO,sBAAuBpO,EAAEC,OAAOX,KAAK,GAAGa,MACxCkO,iBAAkBrO,EAAEC,OAAOX,KAAK,GAAGa,MACnC4N,IAAM/N,EAAEC,OAAOX,KAAK,GAAGa,MAAO2N,MAAM,YAAY,KAKxDxO,EAAKgN,KACD,CACI2B,IAAK,OAAOjO,EAAEC,OAAOX,KAAK,GAAGa,MAC7BuL,QAAS,CACL,CACI4C,KAAMtO,EAAEC,OAAOX,KAAK,GAAGa,MACvBoO,SAAUvO,EAAEC,OAAOX,KAAK,GAAGa,MAC3BsO,YAAazO,EAAEC,OAAOX,KAAK,GAAGa,MAC9B+N,cAAelO,EAAEC,OAAOX,KAAK,GAAGa,MAChCgO,eAAgBnO,EAAEC,OAAOX,KAAK,GAAGa,MACjCiO,sBAAuBpO,EAAEC,OAAOX,KAAK,GAAGa,MACxCkO,iBAAkBrO,EAAEC,OAAOX,KAAK,GAAGa,MACnC4N,IAAM/N,EAAEC,OAAOX,KAAK,GAAGa,MAAO2N,MAAM,YAAY,OAMpEvB,SAASC,eAAe,QAAQC,QAChClN,EAAQD,GACRF,EAAMiK,SAAS,YAAa/J,GAC5BwP,EAAQF,EAAWtP,MA0Hf,kBAkBJ,yBAAKiB,MAAO,CAACC,QAAQ,OAAQC,cAAc,MAAOC,eAAe,SAAUC,WAAW,WAClF,6BACI,kBAAC8P,EAAA,EAAD,CAAa5P,UAAU,iBAClBsP,IAMT,6BACI,kBAACM,EAAA,EAAD,CAAaC,UAAQ,EAACnQ,MAAO,CAACC,QAAQ,OAAQC,cAAc,SAAUE,WAAW,SAAUD,eAAe,WACtG,kBAACW,EAAA,EAAD,CAAQR,UAAU,eAAeX,KAAK,OAAOoB,QAAS0O,EAAYM,SAAUD,GAAa,GAAzF,KACA,kBAAC7H,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,kFAEb,kBAACxH,EAAA,EAAD,CAAQR,UAAU,kBAAkBX,KAAK,QAAQoB,QAAS0O,GAA1D,SAMZ,6BACKnE,EAAK1E,OAAS,EAAI,kBAAC,EAAD,CAAW7F,QAAS0O,IAAgB,MAI3D,yBAAKzP,MAAO,CAACoQ,UAAW,OAAQnQ,QAAS,OAAQE,eAAe,SAAUC,WAAW,YAGrF,kBAAC,EAAD,CAAY+K,QAAQ,OAAOpK,QAAS,YA/XxC,SAAuBW,GACnB,IAAI,IAAI0I,EAAI,EAAGA,EAAI1I,EAAKkF,OAAO,EAAGwD,IAAI,CAElC,IADA,IAAI4F,EAAM5F,EACFiF,EAAIjF,EAAE,EAAGiF,EAAI3N,EAAKkF,OAAQyI,IAZrBrO,EAeMU,EAAK2N,GAfTlC,EAeYzL,EAAKsO,GAdpChP,EAAI0N,EAAQ1N,GACZmM,EAAIuB,EAAQvB,IAEZnM,EAAI+N,EAAiB/N,KACrBmM,EAAI4B,EAAiB5B,MAWT6C,EAAMX,GAId,GAAGW,IAAQ5F,EAAE,CAET,IAAIiG,EAAO3O,EAAK0I,GAChB1I,EAAK0I,GAAK1I,EAAKsO,GACftO,EAAKsO,GAAOK,GAxBxB,IAAqBrP,EAAEmM,EA4BnB6B,EAAWtN,GA4W8B4O,CAAchC,MACtDA,EAAK1H,OAAS,EAAI2E,EAAgB,OC5W5BgF,G,OA9GK,SAAA1R,GAClB,IAAI2L,EAAa3L,EAAME,KACnB4L,EAAK9L,EAAM8L,GASf,SAASF,EAAchL,GACrB,IAAIiC,EAAO7C,EAAM6C,KACjBA,EAAOA,EAAKqD,MAAM,GAAGC,UACA,SAAlBvF,EAAEC,OAAOiB,KACVe,EAAK7C,EAAMsG,OAAO1F,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAAM2N,MAAM,YAAY,GAGpE7L,EAAK7C,EAAMsG,OAAO1F,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAE9C8B,EAAOA,EAAKqD,MAAM,GAAGC,UACrBnG,EAAMiK,SAASpH,GAmBjB,OArCG8I,EAAWE,SAAWC,IAAOH,EAAWgG,gBACzChG,EAAWgG,cAAX,uCAA2D7F,EAA3D,YAAiEH,EAAWE,UAE9E7F,qBAAU,WAGR2F,EAAa3L,EAAME,QAgCnB,kBAACsB,EAAA,EAAD,KACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,UACb,kBAAC,IAAD,KACE,kBAACR,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,4BACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWiG,QAAS7P,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,cAGhG,kBAACI,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,6BACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWpH,MAAOxC,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,aAIhG,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,qCACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWkG,aAAc9P,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,mBAGrG,kBAACI,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,+BACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWQ,QAASpK,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,eAIlG,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,oBACE,kBAACa,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,kDAEX,kBAAChB,EAAA,EAAD,CAAaC,GAAG,WAAWC,KAAK,KAAK5H,MAAO4K,EAAW0D,YAAatN,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,sBAO1H,yBAAKW,UAAU,YACb,kBAAC8G,EAAA,EAAD,KAAW,kBAACb,EAAA,EAAD,CAAOjG,UAAU,WAAW0C,IAAKwH,EAAWgG,cAAeG,OAAK,EAACC,eAAa,KACzF,kBAAC3I,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,4BAEX,2BAAOwD,QAAS,UAAUjN,EAAMsG,MAAO7E,UAAU,kBAAjD,iBAEA,kBAACgH,EAAA,EAAD,CAAaE,KAAK,KAAK5G,SAAU,SAACnB,GAAOgL,EAAchL,GApE/D,SAAqBA,GACnBZ,EAAM+M,aAAanM,GAmE8C0O,CAAY1O,GAjE/E,SAAqBA,GACfA,EAAEC,OAAO0J,OAAS3J,EAAEC,OAAO0J,MAAM,KAEnCoB,EAAU,cAAoBqG,IAAIC,gBAAgBrR,EAAEC,OAAO0J,MAAM,KA8Dc2H,CAAYtR,GAAIA,EAAEC,OAAOE,MAAQ,MAAO6C,GAAI,UAAU5D,EAAMsG,MAAO7E,UAAU,SAASK,KAAK,OAAOhB,KAAK,cAOtL,kBAAC,EAAD,CAAcoB,QAlFlB,WACE,IAAIW,EAAO7C,EAAM6C,MACjBA,EAAOA,EAAKqD,MAAM,GAAGC,WAChBqF,OAAOxL,EAAMsG,MAAO,GACzBzD,EAAOA,EAAKqD,MAAM,GAAGC,UACrBnG,EAAMiK,SAASpH,SC+FJsP,EA9GM,SAACnS,GAAW,IAoDzB0M,EApDwB,EACJzM,mBAASD,EAAMwM,SADX,mBACrBC,EADqB,KACftM,EADe,KAqD5B,SAASyM,EAAYhM,GACjBT,EAAQS,GACRZ,EAAMiK,SAAS,WAAYrJ,GA4B/B,OAZA8L,EAAgBD,EAAKvG,MAAM,GAAGC,UAAUC,KAAI,SAACC,EAAMC,GAC/C,OACA,kBAAC,EAAD,CACIG,IAAKH,EACLA,MAAOA,EACPpG,KAAMmG,EACNxD,KAAM4J,EACNxC,SAAU2C,EACVd,GAAI9L,EAAMoS,OACVrF,aAAc,SAACnM,GAAD,OAAKZ,EAAM+M,aAAanM,SAI1C,oCACA,yBAAKO,MAAO,CAAC2L,OAAO,OAAO1L,QAAQ,OAAOE,eAAe,SAASC,WAAW,SAASF,cAAc,QACpG,yBAAKuC,GAAG,WAAWzC,MAAO,CAACC,QAAQ,OAAQ4L,KAAK,IAAK1L,eAAe,WAAWuG,aAAa,WACxF,2BAAOoF,QAAQ,eAAexL,UAAU,eAAxC,qBACA,2BAAOmC,GAAG,eAAe9B,KAAK,OAAOL,UAAU,SAASM,SA1DhE,SAA2BnB,GAA3B,mBAAAuB,EAAAC,OAAA,kEAAAD,EAAA,MACyBgI,EAAWvJ,EAAEC,SADtC,OAGI,IAAQ0K,KAFJL,EADR,OAEQhL,EAAO,GACEgL,EAENK,EAAI,GACHrL,EAAKgN,KACD,CACI0E,QAAS1G,EAASK,GAAG,GACrBhH,MAAO2G,EAASK,GAAG,GACnBsG,aAAc3G,EAASK,GAAG,GAC1BY,QAASjB,EAASK,GAAG,GACrBM,QAASX,EAASK,GAAG,GACrB8D,YAAanE,EAASK,GAAG,KAKzCpL,EAAQD,GACRF,EAAMiK,SAAS,WAAYwC,GAC3BU,SAASC,eAAe,YAAYC,QApBxC,yCA4DI,yBAAKlM,MAAO,CAACC,QAAQ,OAAO4L,KAAK,IAAI1L,eAAe,aAAauG,aAAa,WAC1E,uBAAGpG,UAAU,cAAcgD,KAAK,uBAAuB6I,UAAQ,GAA/D,6BAGJ,0BAAM5L,aAAa,MAAMkC,GAAG,QACxB,2BAAOzC,MAAO,CAACC,QAAS,QAASU,KAAK,OAAOhB,KAAK,UAAUsQ,YAAY,YACxE,2BAAOjQ,MAAO,CAACC,QAAS,QAASU,KAAK,OAAOhB,KAAK,eAAesQ,YAAY,kBAC7E,2BAAOjQ,MAAO,CAACC,QAAS,QAASU,KAAK,OAAOhB,KAAK,sBAAsBsQ,YAAY,0BACpF,2BAAOjQ,MAAO,CAACC,QAAS,QAASU,KAAK,OAAOhB,KAAK,kBAAkBsQ,YAAY,qBAChF,2BAAOjQ,MAAO,CAACC,QAAS,QAASU,KAAK,OAAOhB,KAAK,eAAe8C,GAAG,OACpE7B,SAAU,SAACnB,GAAKZ,EAAM+M,aAAanM,MACnC,4BAAQO,MAAO,CAACC,QAAS,QAASc,QAnG1C,SAAsBtB,GAClBA,EAAEyB,iBACF,IAAInC,EAAOuM,EACXvM,EAAKgN,KAAK,CACN0E,QAAShR,EAAEC,OAAOX,KAAK,GAAGa,MAC1BwD,MAAO3D,EAAEC,OAAOX,KAAK,GAAGa,MACxB8Q,aAAcjR,EAAEC,OAAOX,KAAK,GAAGa,MAC/BoL,QAASvL,EAAEC,OAAOX,KAAK,GAAGa,MAC1B8K,QAAUjL,EAAEC,OAAOX,KAAK,GAAGa,MAAO2N,MAAM,YAAY,KAExDvB,SAASC,eAAe,QAAQC,QAChClN,EAAQD,GACRF,EAAMiK,SAAS,WAAYwC,KAuFvB,eACA,kBAAC,EAAD,CAAWvK,QAtFnB,SAAoBtB,GAChBA,EAAEyB,iBACF,IAAInC,EAAOuM,EACXvM,EAAKgN,KAAK,CACN0E,QAAS,GACTrN,MAAO,GACPsN,aAAc,GACd1F,QAAS,GACTN,QAAS,GACTwD,YAAa,KAEjBlP,EAAQD,GACRF,EAAMiK,SAAS,WAAYwC,OA4E3B,kBAAC,EAAD,CAAYH,QAAQ,OAAOpK,QAAS,YA9CxC,SAAuBiM,GACnB,IACIC,EADeD,EACWE,MAAK,SAAClM,EAAGmM,GAAJ,OACjCnM,EAAEyP,QAAQ5B,MAAM,KAAM,GAAM1B,EAAEsD,QAAQ5B,MAAM,KAAM,GAClD,EACA7N,EAAEyP,QAAQ5B,MAAM,KAAM,KAAQ1B,EAAEsD,QAAQ5B,MAAM,KAAM,IAEnD7N,EAAEyP,QAAQ5B,MAAM,KAAM,GAAM1B,EAAEsD,QAAQ5B,MAAM,KAAM,GAAM,GAAW,KACtE7P,EAAQiO,GACRpO,EAAMiK,SAAS,WAAYmE,GAC3B1I,QAAQC,IAAIyI,GAoC+BiE,CAAa5F,MACvDC,ICrCMhB,G,OA/EK,SAAA1L,GAClB,IAAI2L,EAAa3L,EAAME,KAUvB,SAAS0L,EAAchL,GACrB,IAAIiC,EAAO7C,EAAM6C,KACjBA,EAAOA,EAAKqD,MAAM,GAAGC,UACA,SAAlBvF,EAAEC,OAAOiB,KACVe,EAAK7C,EAAMsG,OAAO1F,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAAM2N,MAAM,YAAY,GAGpE7L,EAAK7C,EAAMsG,OAAO1F,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAE9C8B,EAAOA,EAAKqD,MAAM,GAAGC,UACrBnG,EAAMiK,SAASpH,GAkBjB,OApCG8I,EAAWE,SAAW7L,EAAM8L,KAAOH,EAAW2G,gBAC/C3G,EAAW2G,cAAX,uCAA2DtS,EAAM8L,GAAjE,YAAuEH,EAAWE,UAEpF7F,qBAAU,WAGR2F,EAAa3L,EAAME,QA+BnB,kBAACsB,EAAA,EAAD,KACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,UACb,kBAAC,IAAD,KACE,kBAACR,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,4BACA,kBAACE,EAAA,EAAD,CAAa1H,MAAO4K,EAAW4G,YAAazR,KAAK,cAAciB,SAAU,SAACnB,GAAD,OAAOgL,EAAchL,IAAIwQ,YAAY,uBAIpH,kBAACnQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,2BACA,kBAACE,EAAA,EAAD,CAAa1H,MAAO4K,EAAW6G,WAAY1R,KAAK,aAAaiB,SAAU,SAACnB,GAAD,OAAOgL,EAAchL,IAAIwQ,YAAY,wBAMtH,yBAAK3P,UAAU,YACb,kBAAC8G,EAAA,EAAD,KAAW,kBAACb,EAAA,EAAD,CAAOjG,UAAU,WAAW0C,IAAKwH,EAAW2G,cAAeR,OAAK,KAC3E,kBAAC1I,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,4BAEX,2BAAOwD,QAAS,UAAUjN,EAAMsG,MAAO7E,UAAU,kBAAjD,iBAEA,kBAACgH,EAAA,EAAD,CAAahH,UAAU,SAASX,KAAK,UAAUiB,SAAU,SAACnB,GAAOgL,EAAchL,GAzCvF,SAAqBA,GACnBZ,EAAM+M,aAAanM,GAwCsE0O,CAAY1O,GAtCvG,SAAqBA,GACfA,EAAEC,OAAO0J,OAAS3J,EAAEC,OAAO0J,MAAM,KAEnCoB,EAAU,cAAoBqG,IAAIC,gBAAgBrR,EAAEC,OAAO0J,MAAM,KAmCsC2H,CAAYtR,GAAIA,EAAEC,OAAOE,MAAQ,MAAOe,KAAK,OAAO8B,GAAI,UAAU5D,EAAMsG,UAG/K,kBAAC,EAAD,CAAcpE,QAnDlB,WACE,IAAIW,EAAO7C,EAAM6C,MACjBA,EAAOA,EAAKqD,MAAM,GAAGC,WAChBqF,OAAOxL,EAAMsG,MAAO,GACzBzD,EAAOA,EAAKqD,MAAM,GAAGC,UACrBnG,EAAMiK,SAASpH,SCqDJ4P,EA1EM,SAACzS,GAAW,IA0BzB0M,EA1BwB,EACJzM,mBAASD,EAAMwM,SADX,mBACrBC,EADqB,KACftM,EADe,KA2B5B,SAASyM,EAAYhM,GACjBT,EAAQS,GACRZ,EAAMiK,SAAS,WAAYrJ,GA4B/B,OAZA8L,EAAgBD,EAAKvG,MAAM,GAAGC,UAAUC,KAAI,SAACC,EAAMC,GAC/C,OACA,kBAAC,EAAD,CACIG,IAAKH,EACLA,MAAOA,EACPpG,KAAMmG,EACNxD,KAAM4J,EACNxC,SAAU2C,EACVd,GAAI9L,EAAMoS,OACVrF,aAAc,SAACnM,GAAD,OAAKZ,EAAM+M,aAAanM,SAI1C,oCACA,0BAAMc,aAAa,MAAMkC,GAAG,QACxB,2BAAOzC,MAAO,CAACC,QAAS,QAASU,KAAK,OAAOhB,KAAK,iBAAiBsQ,YAAY,iBAC/E,2BAAOjQ,MAAO,CAACC,QAAS,QAASU,KAAK,OAAOhB,KAAK,aAAasQ,YAAY,gBAC3E,2BAAOjQ,MAAO,CAACC,QAAS,QAASU,KAAK,OAAOhB,KAAK,aAAa8C,GAAG,OAClE7B,SAAU,SAACnB,GAAKZ,EAAM+M,aAAanM,MACnC,4BAAQO,MAAO,CAACC,QAAS,QAASc,QA9D1C,SAAsBtB,GAClBA,EAAEyB,iBACF,IAAInC,EAAOuM,EACXvM,EAAKgN,KAAK,CACNqF,YAAa3R,EAAEC,OAAOX,KAAK,GAAGa,MAC9ByR,WAAY5R,EAAEC,OAAOX,KAAK,GAAGa,MAC7B8K,QAAUjL,EAAEC,OAAOX,KAAK,GAAGa,MAAO2N,MAAM,YAAY,KAExDvB,SAASC,eAAe,QAAQC,QAChClN,EAAQD,GACRF,EAAMiK,SAAS,WAAYwC,KAoDvB,eACA,kBAAC,EAAD,CAAWvK,QAnDnB,SAAoBtB,GAChBA,EAAEyB,iBACF,IAAInC,EAAOuM,EACXvM,EAAKgN,KAAK,CACNqF,YAAa,GACbC,WAAY,GACZ3G,QAAS,KAEbsB,SAASC,eAAe,QAAQC,QAChClN,EAAQD,GACRF,EAAMiK,SAAS,WAAYwC,OA2C3B,kBAAC,EAAD,CAAYH,QAAQ,OAAOpK,QAAS,YAnCxC,SAAuBiM,GACnB,IACIC,EADeD,EACWE,MAAK,SAAClM,EAAGmM,GAAJ,OAClCnM,EAAEoQ,YAAcjE,EAAEiE,YACjB,EACDpQ,EAAEoQ,cAAgBjE,EAAEiE,aAEnBpQ,EAAEyP,QAAUtD,EAAEiE,YAAe,GAAW,KAC1CpS,EAAQiO,GACRpO,EAAMiK,SAAS,WAAYmE,GAC3B1I,QAAQC,IAAIyI,GAyB+BsE,CAAajG,MACvDC,ICMMiG,I,OAnFG,SAAA3S,GAChB,IAAI2L,EAAa3L,EAAME,KAUvB,SAAS0L,EAAchL,GACrB,IAAIiC,EAAO7C,EAAM6C,KACjBA,EAAOA,EAAKqD,MAAM,GAAGC,UACA,SAAlBvF,EAAEC,OAAOiB,KACVe,EAAK7C,EAAMsG,OAAO1F,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAAM2N,MAAM,YAAY,GAGpE7L,EAAK7C,EAAMsG,OAAO1F,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAE9C8B,EAAOA,EAAKqD,MAAM,GAAGC,UACrBnG,EAAMiK,SAASpH,GAmBjB,OArCG8I,EAAWiH,OAAS5S,EAAM8L,KAAOH,EAAWkH,cAC7ClH,EAAWkH,YAAX,uCAAyD7S,EAAM8L,GAA/D,YAAqEH,EAAWiH,QAElF5M,qBAAU,WAGR2F,EAAa3L,EAAME,QAiCnB,kBAACsB,EAAA,EAAD,KACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,UACb,kBAAC,IAAD,KACE,kBAACR,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,yBACA,kBAACa,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,iEAEX,kBAAChB,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWmH,MAAO/Q,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,gBAOpG,yBAAKW,UAAU,YACb,kBAAC8G,EAAA,EAAD,KAAW,kBAACb,EAAA,EAAD,CAAOjG,UAAU,WAAW0C,IAAKwH,EAAWkH,YAAaf,OAAK,KACzE,kBAAC1I,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,4BAEX,2BAAOwD,QAAS,UAAUjN,EAAMsG,MAAO7E,UAAU,kBAAjD,iBAEA,kBAACgH,EAAA,EAAD,CAAaE,KAAK,KAAK5G,SAAU,SAACnB,GAAOgL,EAAchL,GAzC/D,SAAqBA,GACnBZ,EAAM+M,aAAanM,GAwC8C0O,CAAY1O,GAtC/E,SAAqBA,GACfA,EAAEC,OAAO0J,OAAS3J,EAAEC,OAAO0J,MAAM,KAEnCoB,EAAU,YAAkBqG,IAAIC,gBAAgBrR,EAAEC,OAAO0J,MAAM,KAmCgB2H,CAAYtR,GAAIA,EAAEC,OAAOE,MAAQ,MAAO6C,GAAI,UAAU5D,EAAMsG,MAAO7E,UAAU,SAASK,KAAK,OAAOhB,KAAK,YAOtL,kBAAC,EAAD,CAAcoB,QAvDlB,WACE,IAAIW,EAAO7C,EAAM6C,MACjBA,EAAOA,EAAKqD,MAAM,GAAGC,WAChBqF,OAAOxL,EAAMsG,MAAO,GACzBzD,EAAOA,EAAKqD,MAAM,GAAGC,UACrBnG,EAAMiK,SAASpH,SC+CJkQ,GAzEM,SAAC/S,GAAW,IAwCzB0M,EAxCwB,EACJzM,mBAASD,EAAMwM,SADX,mBACrBC,EADqB,KACftM,EADe,KAyC5B,SAASyM,EAAYhM,GACjBT,EAAQS,GACRZ,EAAMiK,SAAS,QAASrJ,GAc5B,OAZA8L,EAAgBD,EAAKvG,MAAM,GAAGC,UAAUC,KAAI,SAACC,EAAMC,GAC/C,OACA,kBAAC,GAAD,CACIG,IAAKH,EACLA,MAAOA,EACPpG,KAAMmG,EACNxD,KAAM4J,EACNxC,SAAU2C,EACVd,GAAI9L,EAAMoS,OACVrF,aAAc,SAACnM,GAAD,OAAKZ,EAAM+M,aAAanM,SAI1C,oCACA,0BAAMc,aAAa,MAAMkC,GAAG,QACxB,2BAAOzC,MAAO,CAACC,QAAS,QAASU,KAAK,OAAOhB,KAAK,QAAQsQ,YAAY,gBACtE,2BAAOjQ,MAAO,CAACC,QAAS,QAASU,KAAK,OAAOhB,KAAK,WAAW8C,GAAG,OAChE7B,SAAU,SAACnB,GAAKZ,EAAM+M,aAAanM,MACnC,4BAAQO,MAAO,CAACC,QAAS,QAASc,QA5D1C,SAAsBtB,GAClBA,EAAEyB,iBACF,IAAInC,EAAOuM,EACXvM,EAAKgN,KAAK,CACN4F,MAAOlS,EAAEC,OAAOX,KAAK,GAAGa,MACxB6R,MAAQhS,EAAEC,OAAOX,KAAK,GAAGa,MAAO2N,MAAM,YAAY,KAEtDvB,SAASC,eAAe,QAAQC,QAChClN,EAAQD,GACRF,EAAMiK,SAAS,QAASwC,KAmDpB,aACA,kBAAC,EAAD,CAAWvK,QAlDnB,SAAoBtB,GAChBA,EAAEyB,iBACF,IAAInC,EAAOuM,EACXvM,EAAKgN,KAAK,CACN4F,MAAO,GACPF,MAAO,KAEXzF,SAASC,eAAe,QAAQC,QAChClN,EAAQD,GACRF,EAAMiK,SAAS,QAASwC,OA2CxB,kBAAC,EAAD,CAAYH,QAAQ,OAAOpK,QAAS,YAxCxC,SAAoBiM,GAChB,IAAI6E,EAAe7E,EACnBzI,QAAQC,IAAIqN,GACZ,IAAI5E,EAAa4E,EAAa3E,MAAK,SAAClM,EAAGmM,GAAJ,OAClCnM,EAAE2Q,MAAQxE,EAAEwE,MACX,EACD3Q,EAAE2Q,QAAUxE,EAAEwE,OAEb3Q,EAAE2Q,MAAQxE,EAAEwE,MAAS,GAAW,KAClC3S,EAAQiO,GACRpO,EAAMiK,SAAS,QAASmE,GACxB1I,QAAQC,IAAIyI,GA6B+B6E,CAAUxG,MACpDC,I,sCCyLMwG,GA1PO,SAAAlT,GACpB,IAAI2L,EAAa3L,EAAME,KACnB4L,EAAK9L,EAAM8L,GAaf,SAASF,EAAchL,GACrB,IAAIiC,EAAO7C,EAAM6C,KAEI,SAAlBjC,EAAEC,OAAOiB,KACVe,EAAK7C,EAAMsG,OAAO1F,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAAM2N,MAAM,YAAY,GAGpE7L,EAAK7C,EAAMsG,OAAO1F,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MAG9Cf,EAAMiK,SAASpH,GArBd8I,EAAWiH,OAAS9G,IAAOH,EAAWwH,eACvCxH,EAAWwH,aAAX,uCAA0DrH,EAA1D,YAAgEH,EAAWiH,OACvEjH,EAAWiH,MAAOvP,SAAS,cAC7BsI,EAAWwH,aAAexH,EAAWiH,QAGzC5M,qBAAU,WAGR2F,EAAa3L,EAAME,QAbQ,IAgEzBkT,EAhEyB,EA2CGnT,qBA3CH,mBA2CtBoT,EA3CsB,KA2CZC,EA3CY,KA+K7B,MA9GyB,gBAArBtT,EAAMuT,WACRH,EACE,kBAACnS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,oBACA,kBAACE,EAAA,EAAD,CAAaC,GAAG,WAAWC,KAAK,KAAK5H,MAAO4K,EAAW6H,YAAazR,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,kBAGlH,kBAACI,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,iBACA,kBAACa,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,uEAEX,kBAAChB,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAW8H,SAAU1R,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,gBAIjG,kBAACI,EAAA,EAAD,CAAKwS,GAAI,IAET,kBAACxS,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,eACA,kBAACa,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,mBAEX,kBAAChB,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWgI,OAAQ5R,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,cAI/F,kBAACI,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,gBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWiI,OAAQ7R,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,cAKvE,WAArBd,EAAMuT,WACbH,EACA,kBAACnS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,oBACA,kBAACE,EAAA,EAAD,CAAaC,GAAG,WAAWC,KAAK,KAAK5H,MAAO4K,EAAW6H,YAAazR,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,kBAGlH,kBAACI,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,eACA,kBAACa,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,mBAEb,kBAAChB,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWgI,OAAQ5R,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,cAI/F,kBAACI,EAAA,EAAD,CAAKwS,GAAI,IAET,kBAACxS,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,gBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWiI,OAAQ7R,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,aAG/F,kBAACI,EAAA,EAAD,OAI0B,WAArBlB,EAAMuT,aACbH,EACA,kBAACnS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,oBACA,kBAACE,EAAA,EAAD,CAAaC,GAAG,WAAWC,KAAK,KAAK5H,MAAO4K,EAAW6H,YAAazR,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,kBAGlH,kBAACI,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,iBACA,kBAACa,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,iEAEb,kBAAChB,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAW8H,SAAU1R,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,gBAIjG,kBAACI,EAAA,EAAD,CAAKwS,GAAI,IAET,kBAACxS,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,gBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWiI,OAAQ7R,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,aAG/F,kBAACI,EAAA,EAAD,QAMF,kBAACM,EAAA,EAAD,KACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,UACS,gBAArBzB,EAAMuT,WAA+B,yCAAmB,KACnC,WAArBvT,EAAMuT,WAA0B,oCAAe,KAC1B,WAArBvT,EAAMuT,WAA0B,oCAAe,KAChD,kBAAC,IAAD,KACE,kBAACtS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,aACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAW7K,KAAMiB,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,WAG7F,kBAACI,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,gBACA,kBAACa,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,oFAEX,kBAAChB,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWkI,QAAS9R,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,aAE5F,kBAACgT,GAAA,EAAD,CAAUrS,UAAU,eAAe4R,KAGvC,kBAACnS,EAAA,EAAD,CAAKwS,GAAI,GACP,6BACA,kBAACtK,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,oDAEX,kBAACxH,EAAA,EAAD,CAAQR,UAAU,iBAAiBS,QAtKjD,8BAAAC,EAAAC,OAAA,mDACMS,EAAO7C,EAAM6C,KACjByQ,EAAY,KACT3H,EAAWkI,QAHhB,uBAIQE,EAASpI,EAAWkI,QAAStD,QAAQ,IAAK,OAC1CyD,EALR,qDAK+DD,EAL/D,mCAAA5R,EAAA,MAMUG,IAAM+C,IAAI2O,GACftR,MAAK,SAAU+C,GACd5C,EAAK7C,EAAMsG,OAAX,IAA2Bb,EAAI5C,KAAK,GAAGoR,IACvCpR,EAAK7C,EAAMsG,OAAX,KAA4Bb,EAAI5C,KAAK,GAAGqR,OAEzChR,OAAM,SAAUC,GACfuC,QAAQC,IAAIxC,GACZmQ,EAAY,+BAblB,OAkBEtT,EAAMiK,SAASpH,GAlBjB,uCAsK0E,kBAAC,KAAD,SAG9D,kBAAC3B,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,iBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWsI,IAAKlS,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,QACxF,kBAACgT,GAAA,EAAD,mBAGJ,kBAAC5S,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,kBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK5H,MAAO4K,EAAWwI,KAAMpS,SAAU,SAACnB,GAAOgL,EAAchL,IAAKE,KAAK,SACzF,kBAACgT,GAAA,EAAD,qBAKPV,GAEH,yBAAK3R,UAAU,YACb,kBAAC8G,EAAA,EAAD,KAAW,kBAACb,EAAA,EAAD,CAAOjG,UAAU,WAAW0C,IAAKwH,EAAWwH,aAAcrB,OAAK,KAC1E,kBAAC1I,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,4BAEX,2BAAOwD,QAAS,UAAUjN,EAAMsG,MAAO7E,UAAU,kBAAjD,iBAEA,kBAACgH,EAAA,EAAD,CAAaE,KAAK,KAAK5G,SAAU,SAACnB,IA3M1C,SAAqBA,GACfA,EAAEC,OAAO0J,OAAS3J,EAAEC,OAAO0J,MAAM,KAEnCoB,EAAU,aAAmBqG,IAAIC,gBAAgBrR,EAAEC,OAAO0J,MAAM,KAwMnB2H,CAAYtR,GAAGgL,EAAchL,GA9M9E,SAAqBA,GACnBZ,EAAM+M,aAAanM,GA6M6D0O,CAAY1O,GAAIA,EAAEC,OAAOE,MAAQ,MAAO6C,GAAI,UAAU5D,EAAMsG,MAAO7E,UAAU,SAASK,KAAK,OAAOhB,KAAK,YAIrL,4GACA,kBAAC,EAAD,CAAcoB,QA1NlB,WACE,IAAIW,EAAO7C,EAAM6C,KAEjBA,EAAK2I,OAAOxL,EAAMsG,MAAO,GAEzBtG,EAAMiK,SAASpH,QCyTJuR,GAzSO,SAACpU,GAAU,IAAD,EACJC,mBAASD,EAAMwM,QAAUxM,EAAMwM,QACnD,CACI6H,YAAa,GACbC,OAAQ,GACRC,OAAQ,KALY,mBACrB9H,EADqB,KACftM,EADe,OAOJF,mBAASuU,EAAW/H,IAPhB,mBAOrBgD,EAPqB,KAOfC,EAPe,KAgC5B,SAAS8E,EAAWtU,GAChB,IAAI2C,EAAO,GAEX,IAAI,IAAI4D,KAAOvG,EACX,IAAI,IAAIqL,KAAKrL,EAAKuG,GAAK,CAEnB,IAAIJ,EAAOnG,EAAKuG,GAAK8E,GACrBlF,EAAI,IAAUI,EACd5D,EAAKqK,KAAK7G,GAIlB,OAAOxD,EA5CiB,MA6FM5C,mBAAS,eA7Ff,mBA6FrBwU,EA7FqB,KA6FVC,EA7FU,KA8F5B,SAASC,EAAW/T,GAChBA,EAAEyB,iBACCoS,IAAc7T,EAAEC,OAAOC,KACtB4T,EAAa9T,EAAEC,OAAOC,MAGtB4T,EAAa,MAIrB,IAAIhI,EAAgB,KAuBpB,OAtBG+C,IACC/C,EAAgB+C,EAAKrJ,KAAI,SAACC,EAAMC,GAE5B,OAAGD,EAAKI,MAAQgO,GAA2B,OAAdA,EAEzB,kBAAC,GAAD,CACIhO,IAAKH,EACLA,MAAOA,EACPpG,KAAMmG,EACNxD,KAAM4M,EACNxF,SAAU,SAACpH,GAAD,OA1G1B,SAAoBA,GAChB,IAAIyN,EAAU,CACV+D,YAAa,GACbC,OAAQ,GACRC,OAAQ,IAEZ,IAAI,IAAIlO,KAAQxD,EAAK,CACjB,IAAI+R,EAAS,GACTC,OAAW,EACf,IAAI,IAAIpO,KAAO5D,EAAKwD,GACL,QAARI,EACCoO,EAAchS,EAAKwD,GAAMI,GAGzBmO,EAAOnO,GAAO5D,EAAKwD,GAAMI,GAIjC6J,EAAQuE,GAAa3H,KAAK0H,GAE9BzU,EAAQmQ,GACRtQ,EAAMiK,SAAS,aAAcqG,GAqFCH,CAAWtN,IAC7BiJ,GAAI9L,EAAMoS,OACVmB,WAAYlN,EAAKI,IACjBsG,aAAc,SAACnM,GAAD,OAAKZ,EAAM+M,aAAanM,MAInC,SAMf,oCAkBA,kBAACK,EAAA,EAAD,KACI,kBAACO,EAAA,EAAD,CAAMC,UAAU,cAAcN,MAAO,CAAC4C,MAAO,QAAS3C,QAAQ,OAAQC,cAAc,SAAUC,eAAe,SAAUC,WAAW,WAC9H,+CACA,kBAACN,EAAA,EAAD,CAAKE,MAAO,CAACuM,aAAc,SACvB,kBAAC2D,EAAA,EAAD,CAAa5P,UAAU,iBACnB,kBAACQ,EAAA,EAAD,CAAQnB,KAAK,cAAcoB,QAASyS,EAAYlT,UAAyB,gBAAdgT,EAA8B,SAAW,WAAYvD,SAAwB,gBAAduD,GAA1H,eACA,kBAACxS,EAAA,EAAD,CAAQnB,KAAK,SAASoB,QAASyS,EAAYlT,UAAyB,WAAdgT,EAAyB,SAAW,WAAYvD,SAAwB,WAAduD,GAAhH,UACA,kBAACxS,EAAA,EAAD,CAAQnB,KAAK,SAASoB,QAASyS,EAAYlT,UAAyB,WAAdgT,EAAyB,SAAW,WAAYvD,SAAwB,WAAduD,GAAhH,YAGR,kBAACxT,EAAA,EAAD,KACI,kBAACoQ,EAAA,EAAD,CAAalQ,MAAO,CAACC,QAAS,UAI1B,kBAACa,EAAA,EAAD,CAAQR,UAAU,eAAeX,KAAoB,gBAAd2T,EAA8B,aAA6B,WAAdA,EAAyB,QAAU,QAASvS,QAAS,SAACtB,IAnH9J,SAAsBA,GAClB8E,QAAQC,IAAI/E,EAAEC,QACd,IAAIyP,EAAU7D,EACO,eAAlB7L,EAAEC,OAAOC,KACRwP,EAAQ+D,YAAYnH,KAAK,CACrB+G,IAAK,GACLE,KAAM,GACNrT,KAAM,GACN+S,QAAS,GACTL,YAAa,GACbC,SAAU,GACVE,OAAQ,GACRC,OAAQ,GACRhB,MAAO,KAGW,UAAlBhS,EAAEC,OAAOC,KACbwP,EAAQgE,OAAOpH,KAAK,CAChB+G,IAAK,GACLE,KAAM,GACNrT,KAAM,GACN+S,QAAS,GACTL,YAAa,GACbG,OAAQ,GACRC,OAAQ,GACRhB,MAAO,KAGW,UAAlBhS,EAAEC,OAAOC,MACbwP,EAAQiE,OAAOrH,KAAK,CAChB+G,IAAK,GACLE,KAAM,GACNrT,KAAM,GACN+S,QAAS,GACTL,YAAa,GACbC,SAAU,GACVG,OAAQ,GACRhB,MAAO,KAMfzS,EAAQmQ,GACRZ,EAAQ8E,EAAWlE,IAuE4I9M,CAAa5C,KAA5J,UAAuL,gBAAd6T,EAA8B,aAA6B,WAAdA,EAAyB,QAAU,aAezQ,kBAACvT,EAAA,EAAD,KACKwL,K,SC9EEoI,I,OAtJK,SAAA9U,GAClB,IAAI2L,EAAa3L,EAAMkK,GAEpByB,EAAW7E,YAAc9G,EAAM8L,KAAOH,EAAWoJ,gBAClDpJ,EAAWoJ,cAAX,uCAA2D/U,EAAM8L,GAAjE,YAAuEH,EAAW7E,YAC9E6E,EAAW7E,WAAYzD,SAAS,cAClCsI,EAAWoJ,cAAgBpJ,EAAW7E,aAG1Cd,qBAAU,WAGR2F,EAAa3L,EAAME,QAZM,MA6BKD,mBAAS,IA7Bd,mBA6BpBoT,EA7BoB,KA6BVC,EA7BU,KAkD3B,OACE,kBAAC9R,EAAA,EAAD,KACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,UACb,kBAAC,IAAD,CAAMM,SAAU,SAACnB,GAAD,OAAMZ,EAAMiK,SAASrJ,KACnC,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,mBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK7H,KAAK,YAAY8H,aAAc+C,EAAWnF,YACjE,kBAACsN,GAAA,EAAD,mBAGJ,kBAAC5S,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,uBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAK7H,KAAK,YAAY8H,aAAc+C,EAAWqJ,YACjE,kBAAClB,GAAA,EAAD,oBAIN,kBAAC7S,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,gBACA,kBAACa,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,oFAEX,kBAAChB,EAAA,EAAD,CAAaE,KAAK,KAAKC,aAAc+C,EAAWkI,QAAS9R,SAAU,SAACnB,GAAD,OAAMZ,EAAMiK,SAASrJ,IAAIE,KAAK,aAEjG,kBAACgT,GAAA,EAAD,CAAUrS,UAAU,eAAe4R,KAGvC,kBAACnS,EAAA,EAAD,CAAKwS,GAAI,GACP,6BACA,kBAACtK,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,oDAEX,kBAACxH,EAAA,EAAD,CAAQR,UAAU,iBAAiBS,QA9DjD,4BAAAC,EAAAC,OAAA,mDACEkR,EAAY,KACTtT,EAAMkK,KAAMlK,EAAMkK,GAAG2J,QAF1B,uBAGQE,EAAS/T,EAAMkK,GAAG2J,QAASzQ,WAAWmN,QAAQ,IAAK,OACnDyD,EAJR,qDAI+DD,EAJ/D,mCAAA5R,EAAA,MAKUG,IAAM+C,IAAI2O,GACftR,MAAK,SAAU+C,GAKdzF,EAAMiV,YAAYxP,EAAI5C,KAAK,GAAGoR,IAAKxO,EAAI5C,KAAK,GAAGqR,QAEhDhR,OAAM,SAAUC,GACfuC,QAAQC,IAAIxC,GACZmQ,EAAY,mCAflB,uCA8D0E,kBAAC,KAAD,SAG9D,kBAACpS,EAAA,EAAD,CAAKwS,GAAI,GACP,kBAAClL,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,iBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAKC,aAAc+C,EAAWsI,IAAKlS,SAAU,SAACnB,GAAD,OAAMZ,EAAMiK,SAASrJ,IAAIE,KAAK,QAC7F,kBAACgT,GAAA,EAAD,mBAGJ,kBAAC5S,EAAA,EAAD,CAAKwS,GAAI,GACP,kBAAClL,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,kBACA,kBAACE,EAAA,EAAD,CAAaE,KAAK,KAAKC,aAAc+C,EAAWwI,KAAMpS,SAAU,SAACnB,GAAD,OAAMZ,EAAMiK,SAASrJ,IAAIE,KAAK,SAC9F,kBAACgT,GAAA,EAAD,oBAIN,kBAAC7S,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,2BACA,kBAACa,EAAA,EAAD,CACAC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,+CAEP,kBAAChB,EAAA,EAAD,CAAaE,KAAK,KAAKuM,UAAU,IAAIpU,KAAK,aAAa8H,aAAc+C,EAAWwJ,gBAItF,kBAACjU,EAAA,EAAD,KACE,kBAAC,IAAKS,MAAN,KACE,kBAAC,IAAKC,MAAN,wBACA,kBAAC,IAAKwT,MAAN,CAAY3T,UAAU,WAAWK,KAAM,QAAShB,KAAK,aAAauU,MAAO,UAAWtU,MAAM,UAAUgB,SAAU,aAAQuT,QAAgC,WAAvBtV,EAAMkK,GAAGtH,aAF1I,IAGE,kBAAC,IAAKwS,MAAN,CAAY3T,UAAU,WAAWK,KAAM,QAAShB,KAAK,aAAauU,MAAO,SAAUtU,MAAM,SAASgB,SAAU,aAAQuT,QAAgC,UAAvBtV,EAAMkK,GAAGtH,aAHxI,SASR,yBAAKnB,UAAU,YACX,kBAAC8G,EAAA,EAAD,KAAW,kBAACb,EAAA,EAAD,CAAOjG,UAAU,WAAW0C,IAAKwH,EAAWoJ,cAAejD,OAAK,EAACyD,QA7GtF,SAAsB3U,GACpB8E,QAAQC,IAAI/E,OA6GF,kBAACwI,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAACnC,KAAM,IAAKoC,KAAM,KACzBC,QAAS,kBAACC,EAAA,EAAD,4BAEX,2BAAOwD,QAAS,SAAUxL,UAAU,kBAApC,iBAEF,kBAACgH,EAAA,EAAD,CAAaE,KAAK,KAAK5G,SAAU,SAACnB,IAhI5C,SAAqBA,GACnBZ,EAAM+M,aAAanM,GA+H4B0O,CAAY1O,GA7H7D,SAAqBA,GACnB+K,EAAa3L,EAAMkK,GAEftJ,EAAEC,OAAO0J,OAAS3J,EAAEC,OAAO0J,MAAM,KAEnCoB,EAAU,cAAoBqG,IAAIC,gBAAgBrR,EAAEC,OAAO0J,MAAM,KAwHJ2H,CAAYtR,GAAIZ,EAAMiK,SAASrJ,IAAMgD,GAAI,SAAUnC,UAAU,SAASK,KAAK,OAAOhB,KAAK,iBAGpJ,+G,2BCieS0U,GA3lBS,SAACxV,GACrB,IAMIyV,EANEjV,EAAUC,EADe,EAIKR,mBAAS,eAJd,mBAIxByV,EAJwB,KAIZC,EAJY,OAKH1V,mBAASD,EAAM4D,IALZ,mBAKxBwO,EALwB,KAKhBwD,EALgB,OAML3V,mBAAS,IANJ,mBAMxB4V,EANwB,KAMjBC,EANiB,OASG7V,oBAAS,GATZ,mBASxB8V,EATwB,KASbC,EATa,OAUO/V,mBAAS,IAVhB,mBAUxBgW,EAVwB,KAUXC,EAVW,OAWGjW,mBAAS,IAXZ,mBAWxBkW,EAXwB,KAWbC,EAXa,OAaGnW,oBAAS,GAbZ,mBAaxBoW,EAbwB,KAabC,EAba,OAcGrW,qBAdH,mBAcxBsW,EAdwB,KAcbC,GAda,QAgBGvW,oBAAS,GAhBZ,qBAgBxBwW,GAhBwB,MAgBbC,GAhBa,SAiBDzW,oBAAS,GAjBR,qBAiBxB0W,GAjBwB,MAiBfC,GAjBe,SAmBO3W,mBAAS,CAE3C+U,UAAW,GACXxO,UAAW,GACX5D,WAAY,SACZiR,QAAS,GACTI,IAAK,GACLE,KAAM,GACNgB,WAAY,GACZrO,WAAY,GACZ+P,YAAa,GACbhO,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXc,YAAa,GACbC,YAAa,GACbd,UAAW,GACXC,aAAc,GACdQ,WAAY,GACZP,WAAY,GACZ2N,WAAY,GACZnN,UAAW,GACXC,MAAO,GACPC,QAAS,GAETkN,aAAc,GACdC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,WAAY,CACR9C,YAAa,GACbC,OAAQ,GACRC,OAAQ,IAEZ6C,MAAO,GAEPC,SAAU,GACVC,WAAY,KAzDe,qBAmBxBC,GAnBwB,MAmBXC,GAnBW,MA6D/B,SAAeC,GAAe7T,GAA9B,iBAAAzB,EAAAC,OAAA,oDACOuU,GADP,yCAEe,MAFf,yBAAAxU,EAAA,MAIqBuV,GAAa9T,IAJlC,UAKgB,QADRf,EAJR,iDAMe,MANf,yBAAAV,EAAA,MAQqBwV,GAAY9U,EAAOA,EAAK0D,SAASC,UAAY,OARlE,OAQQoR,EARR,OAUO/U,GACC2U,GAAe,CAEXxC,UAAU,GAAD,OAAK4C,GACdpR,UAAU,GAAD,OAAK3D,EAAK0D,SAASC,WAC5BM,WAAW,GAAD,OAAKjE,EAAK0D,SAASO,YAC7BqO,WAAW,GAAD,OAAKtS,EAAK0D,SAASI,aAC7B/D,WAAW,GAAD,OAAKC,EAAK0D,SAAS3D,YAC7BiR,QAAQ,GAAD,OAAKhR,EAAK0D,SAASsN,SAC1BI,IAAI,GAAD,OAAKpR,EAAK0D,SAAS0N,KACtBE,KAAK,GAAD,OAAKtR,EAAK0D,SAAS4N,MACvB0C,YAAY,GAAD,OAAKhU,EAAKgV,MAAMhB,aAC3BhO,UAAU,GAAD,OAAKhG,EAAKgV,MAAMhP,WACzBC,UAAU,GAAD,OAAKjG,EAAKgV,MAAM/O,WACzBC,UAAU,GAAD,OAAKlG,EAAKgV,MAAM9O,WACzBC,UAAU,GAAD,OAAKnG,EAAKgV,MAAM7O,WACzBc,YAAY,GAAD,OAAKjH,EAAKgV,MAAM/N,aAC3BC,YAAY,GAAD,OAAKlH,EAAKgV,MAAM9N,aAC3Bd,UAAU,GAAD,OAAKpG,EAAKgV,MAAMC,WAAWhX,MACpCoI,aAAa,GAAD,OAAKrG,EAAKgV,MAAMC,WAAWjE,SACvCnK,WAAW,GAAD,OAAK7G,EAAKgV,MAAMC,WAAWC,OACrC5O,WAAW,GAAD,OAAKtG,EAAKgV,MAAMC,WAAWE,OACrClB,WAAW,GAAD,OAAKjU,EAAKgV,MAAM/E,OAC1BnJ,UAAU,GAAD,OAAK9G,EAAKgV,MAAMI,gBAAgBC,cACzCtO,MAAM,GAAD,OAAK/G,EAAKgV,MAAMI,gBAAgBE,WACrCtO,QAAQ,GAAD,OAAKhH,EAAKgV,MAAMI,gBAAgBD,OACvCjB,aAAclU,EAAKkU,aACnBC,UAAWnU,EAAKmU,UAChBC,SAAUpU,EAAKoU,SACfC,SAAUrU,EAAKqU,SACfG,SAAUxU,EAAKgV,MAAMR,SACrBC,WAAYzU,EAAKgV,MAAMP,WACvBF,MAAOvU,EAAKuU,MACZD,WAAYtU,EAAKuV,UA3C7B,sCA8DA,SAASC,GAAWzX,GAChB+U,EAAc/U,EAAEC,OAAOC,MAkE3B,SAAS8K,GAAchL,GAGE,SAAlBA,EAAEC,OAAOiB,KACR0V,GAAe,eACRD,GADO,eAET3W,EAAEC,OAAOC,KAAO,CAAEF,EAAEC,OAAOE,MAAO2N,MAAM,YAAY,OAIzD8I,GAAe,eACRD,GADO,eAET3W,EAAEC,OAAOC,KAAO,CAACF,EAAEC,OAAOE,UAGnC6V,IAAW,GAGf,SAAS0B,GAAWzX,EAAOE,GACvByW,GAAe,eACRD,GADO,eAET1W,EAASE,KAEd6V,IAAW,GAxGf5Q,qBAAU,WAEHoM,GACCqF,GAAerF,KAKpB,CAACA,IAUAqD,EADc,cAAfC,EACa,kBAAC,EAAD,CACRzL,SAAU2B,GACV0M,WAAYA,GACZC,UAAWhB,GAAYF,SACvBmB,YAAajB,GAAYD,WACzBpN,GAAIqN,GACJxK,aAAcA,KAGC,gBAAf2I,EACQ,kBAAC,GAAD,CACRzL,SAAU2B,GACV0M,WAAYA,GACZpO,GAAIqN,GACJxK,aAAcA,GACdjB,GAAIsG,EACJ6C,YAwER,SAAqBhB,EAAKE,GACtBqD,GAAe,eACRD,GADO,CAEVtD,IAAKA,EACLE,KAAMA,KAEVyC,IAAW,MA3EQ,qBAAflB,EACQ,kBAAC,EAAD,CACZzL,SAAUqO,GACV9L,QAAS+K,GAAYR,eAEF,kBAAfrB,EACQ,kBAAC,EAAD,CACZzL,SAAUqO,GACVvL,aAAcA,GACdP,QAAS+K,GAAYP,YAEF,iBAAftB,EACQ,kBAAC,EAAD,CACZzL,SAAUqO,GACVvL,aAAcA,GACdP,QAAS+K,GAAYN,SACrB7E,OAAQA,IAGW,iBAAfsD,EACQ,kBAAC,EAAD,CACZzL,SAAUqO,GACVvL,aAAcA,GACdP,QAAS+K,GAAYL,SACrB9E,OAAQA,IAEW,iBAAfsD,EACQ,kBAAC,GAAD,CACZzL,SAAUqO,GACVvL,aAAcA,GACdP,QAAS+K,GAAYH,MACrBhF,OAAQA,IAEW,kBAAfsD,EACQ,kBAAC,GAAD,CACZzL,SAAUqO,GACVvL,aAAcA,GACdP,QAAS+K,GAAYJ,WACrB/E,OAAQA,IAGI,KAqChB,IAAIqG,GAAY,CACZzD,UAAU,GAAD,OAAKuC,GAAYvC,WAC1BzO,SAAU,CACNC,UAAU,GAAD,OAAK+Q,GAAY/Q,WAC1BM,WAAW,GAAD,OAAKyQ,GAAYzQ,YAC3BlE,WAAW,GAAD,OAAK2U,GAAY3U,YAC3B+D,YAAY,GAAD,OAAK4Q,GAAYpC,YAC5BtB,QAAQ,GAAD,OAAK0D,GAAY1D,SACxBI,IAAI,GAAD,OAAKsD,GAAYtD,KACpBE,KAAK,GAAD,OAAKoD,GAAYpD,OAEzB0D,MAAO,CACHhB,YAAY,GAAD,OAAKU,GAAYV,aAC5BiB,WAAY,CACRhX,KAAK,GAAD,OAAKyW,GAAYtO,WACrB4K,QAAQ,GAAD,OAAK0D,GAAYrO,cACxB6O,MAAM,GAAD,OAAKR,GAAY7N,YACtBsO,MAAM,GAAD,OAAKT,GAAYpO,aAE1B2J,MAAM,GAAD,OAAKyE,GAAYT,YAEtBjO,UAAU,GAAD,OAAK0O,GAAY1O,WAC1BC,UAAU,GAAD,OAAKyO,GAAYzO,WAC1BC,UAAU,GAAD,OAAKwO,GAAYxO,WAC1BC,UAAU,GAAD,OAAKuO,GAAYvO,WAC1BiP,gBAAiB,CACbC,aAAa,GAAD,OAAKX,GAAY5N,WAC7BwO,UAAU,GAAD,OAAKZ,GAAY3N,OAC1BoO,MAAM,GAAD,OAAKT,GAAY1N,UAG1BC,YAAY,GAAD,OAAKyN,GAAYzN,aAC5BC,YAAY,GAAD,OAAKwN,GAAYxN,cAEhCgN,aAAcQ,GAAYR,aAC1BC,UAAWO,GAAYP,UACvBC,SAAUM,GAAYN,SACtBC,SAAUK,GAAYL,SACtBE,MAAOG,GAAYH,MACnBgB,QAASb,GAAYJ,YAGzB,SAASuB,GAAgBxY,GACrB,IACIyY,EADAC,EAAaxY,aAAayY,QAAQ,WActC,IAAI,IAAItN,KAZL6G,GACCuG,EAAQ,eACRzY,EAAK0D,GAAKwO,EACVoE,GAAa,oBAGbmC,EAAQ,eACRnC,GAAa,kBAGjBF,GAAa,GAEApW,EAAKkY,QACd,IAAI,IAAI5H,KAAKtQ,EAAKkY,QAAQ7M,GACtB,GAA8B,KAA3BrL,EAAKkY,QAAQ7M,GAAGiF,GAAGyD,KAA0C,KAA5B/T,EAAKkY,QAAQ7M,GAAGiF,GAAG2D,KAGnD,OAFAmC,GAAa,GACbwC,GAAM,QAAS,iDACR,KAInB,MAAsB,KAAnB5Y,EAAK8U,WACJsB,GAAa,GACbwC,GAAM,QAAS,2BACR,MAEc,KAAtB5Y,EAAKqG,SAAS0N,KAAqC,KAAvB/T,EAAKqG,SAAS4N,MACzCmC,GAAa,GACbwC,GAAM,QAAS,sCACR,WAGXxW,IAAMC,KAAK/B,EAAQmY,EACnBzY,EACA,CACIoF,QAAQ,CACJC,cAAe,UAAUqT,KAGhClW,MAAK,SAAUC,GAIZ,IAAIiB,EAEDwO,EACCxO,EAAKwO,GAGLwD,EAAUjT,EAASE,KAAK6D,KACxB9C,EAAKjB,EAASE,KAAK6D,KAGpBmP,EAAM9N,OAAS,GACdyO,GAAa,yBAsHzB,SAA2BjM,EAAO3G,GAAlC,QAAAzB,EAAAC,OAAA,gDAMQ2W,EAAQ,EANhB,YAOUxO,EAAMxC,OAAS,GAAKgR,EAAQ,GAPtC,mCAAA5W,EAAA,MAQiB6W,GAAWzO,EAAM,GAAGD,KAAM,UAAW1G,IARtD,kCASYmV,EAAQ,EACRxO,EAAMiB,OAAO,EAAG,GAV5B,uBAcYuN,IAdZ,+BAiBOA,GAAS,GACRzC,GAAa,GACbwC,GAAM,QAAQ,qDAGdxC,GAAa,GACbwC,GAAM,UAAU,uBAvBxB,sCArHYG,CAAYpD,EAAOjS,KAInB0S,GAAa,GACbwC,GAAM,UAAW,uBAErBlC,IAAW,MAEd1T,OAAM,SAAUC,GAIVA,EAAMR,UAEL2T,GAAa,GACbwC,GAAM,QAAD,UAAY3V,EAAMR,SAASE,KAAKqW,UAER,MAA1B/V,EAAMR,SAASwW,QACdzC,IAAa,KAIjBJ,GAAa,GACbwC,GAAM,QAAQ,oCAI1B,SAASnB,GAAYnR,GAOjB,OANYlE,IAAM+C,IAAI7E,EAAQ,0BAC9B,CACI8E,QAAQ,CACNC,cAAe,UAAUnF,aAAayY,QAAQ,cAInDnW,MAAK,SAAU+C,GACZ,IAAImS,EAAO,GACX,IAAI,IAAIrM,KAAK9F,EAAI5C,KACb,GAAG4C,EAAI5C,KAAK0I,GAAG/E,YAAcA,EAAU,CACnCoR,EAAOnS,EAAI5C,KAAK0I,GAAGyJ,UACnB,MAGR,OAAO4C,KAEV1U,OAAM,SAAUC,GAMb,OALAuC,QAAQC,IAAIxC,GAETA,EAAMR,UAAsC,MAA1BQ,EAAMR,SAASwW,QAChCzC,IAAa,GAEV,MAIf,SAASgB,GAAa9T,GASlB,OARYtB,IAAMC,KAAK/B,EAAQ,kBAAkB,CAC7CoD,GAAIA,GAER,CACI0B,QAAQ,CACNC,cAAe,UAAUnF,aAAayY,QAAQ,cAInDnW,MAAK,SAAU+C,GACZ,OAAOA,EAAI5C,QAEdK,OAAM,SAAUC,GAMb,OAHGA,EAAMR,UAAsC,MAA1BQ,EAAMR,SAASwW,QAChCzC,IAAa,GAEV,QAIf,SAASsC,GAAW1O,EAAM8O,EAAKxV,GAC3B,IAAIyV,EAAK,IAAIC,SAcb,OAZAD,EAAGE,OAAO,KAAM3V,GAChByV,EAAGE,OAAO,UAAWjP,GACrBkM,GAAa,eAAelM,EAAKxJ,MACrBwB,IAAMC,KAAK/B,EAAQ,YAC/B6Y,EACA,CACI/T,QAAS,CACL,gBAAgB,EAChB,aAAe,EACfC,cAAe,UAAUnF,aAAayY,QAAQ,cAIrDnW,MAAK,SAAU+C,GAGZ,OADA+Q,GAAa,2BAA2BlM,EAAKxJ,OACtC,KAEVoC,OAAM,SAAUC,GAMb,OAH6B,MAA1BA,EAAMR,SAASwW,QACdzC,IAAa,IAEV,KAuCf,SAAS3J,GAAanM,GAClB,IAKI2K,EALAhB,EAAQsL,EACRvL,EAAO1J,EAAEC,OAAO0J,MAAM,GACtBkJ,EAAW7S,EAAEC,OAAOC,KAEpBsP,GAAQ,EAEZ,IAAI7E,EAAI,EAAGA,EAAIhB,EAAMxC,OAAQwD,IAAI,CAC7B,GAAqB,eAAlB3K,EAAEC,OAAOC,MACZyJ,EAAMgB,GAAGiO,QAAU5Y,EAAEC,OAAOC,KAAK,CAC7BsP,GAAQ,EACR,MAEC,GAAG9F,GAAQC,EAAMgB,GAAGjB,KAAKxJ,OAASwJ,EAAKxJ,KAAK,CAC7CsP,GAAQ,EACR,OAGLA,GAEC7F,EAAMiB,OAAOD,EAAE,GAKnBhB,EAAM2C,KACF,CACIuG,SAAUA,EACVnJ,KAAMA,EACNkP,MAAO5Y,EAAEC,OAAOC,OAIxBgV,EAASvL,GAIb,SAASuO,GAAMzN,EAAQoO,GACnBvD,EAAe7K,GACf+K,EAAaqD,GACbzD,GAAa,GAIjB,OACI,yBAAKpS,GAAG,mBACJ,kBAACsD,EAAA,EAAD,CAAOC,KAAMkP,EAAWqD,SAAS,SAASC,UAAU,GAChD,kBAACzS,EAAA,EAAMG,OAAP,2BAAiC,kBAACuS,GAAA,EAAD,CAASC,UAAU,YACpD,kBAAC3S,EAAA,EAAM5C,KAAP,KAAaiS,IAEjB,kBAACrP,EAAA,EAAD,CAAOC,KAAMsP,GAAWiD,SAAS,SAASC,UAAU,GAChD,kBAACzS,EAAA,EAAMG,OAAP,+EACA,kBAACH,EAAA,EAAM5C,KAAP,KACI,kBAAC,EAAD,CACIvB,cAAe,aACfH,WAAY8T,GACZzT,QAASmP,EACTpP,OAAQ,SAACY,GAAM6T,GAAe7T,QAG1C,6BACI,kBAAC3C,EAAA,EAAD,CAAKE,MAAO,CAACoQ,UAAU,UACnB,kBAACrQ,EAAA,EAAD,KACKuU,KAIb,yBAAKtU,MAAO,CAACqG,SAAS,QAASsS,IAAI,IAAK/V,MAAM,OAAQC,gBAAgB,QAAS+V,OAAO,MAClF,kBAACC,GAAA,EAAD,CAAQC,OAAO,KAAK9Y,MAAO,CAACC,QAAQ,OAAQ8Y,YAAY,OAAQC,aAAa,OAAQ7Y,eAAe,SAAUC,WAAW,SAAUF,cAAc,MAAO2C,gBAAgB,UACpK,kBAAC/B,EAAA,EAAD,CAAQd,MAAO,CAAC6L,KAAK,KAAMvL,UAAU,eAAeS,QAAS,WAEtDyU,GACIlT,OAAOC,QAAQ,qDACd1D,EAAM+C,cAAc,eAIxB/C,EAAM+C,cAAc,iBAR5B,uBAWA,yBAAK5B,MAAO,CAACC,QAAQ,OAAQ4L,KAAK,IAAKnF,aAAc,SAAUvG,eAAe,SAAUD,cAAc,QAClG,kBAACqG,EAAA,EAAD,CAAOvD,IAAI,8EAA8EhD,MAAO,CAACoM,YAAY,UAC7G,kBAACyM,GAAA,EAAOI,MAAR,KAAc,4BAAK7C,GAAY/Q,UAAZ,UAA2B+Q,GAAY/Q,WAAY,QAE1E,kBAACvE,EAAA,EAAD,CAAQd,MAAO,CAAC6L,KAAK,KAAMvL,UAAU,eAAeS,QAAS,kBAAIwW,GAAgBD,MAAjF,iBAEJ,yBAAKtX,MAAO,CAACC,QAAS,OAAQE,eAAgB,WAC1C,kBAAC+P,EAAA,EAAD,CAAa5P,UAAU,gBAAgBN,MAAO,CAACC,QAAS,OAAQqM,SAAU,SACtE,kBAACxL,EAAA,EAAD,CAAQnB,KAAK,cAAcoB,QAASmW,GAAY5W,UAA0B,gBAAfiU,EAA+B,SAAW,YAArG,WACA,kBAACzT,EAAA,EAAD,CAAQnB,KAAK,YAAYoB,QAASmW,GAAY5W,UAA0B,cAAfiU,EAA6B,SAAW,YAAjG,SACA,kBAACzT,EAAA,EAAD,CAAQnB,KAAK,mBAAmBoB,QAASmW,GAAY5W,UAA0B,qBAAfiU,EAAoC,SAAW,YAA/G,gBACA,kBAACzT,EAAA,EAAD,CAAQnB,KAAK,gBAAgBoB,QAASmW,GAAY5W,UAA0B,kBAAfiU,EAAiC,SAAW,YAAzG,aACA,kBAACzT,EAAA,EAAD,CAAQnB,KAAK,eAAeoB,QAASmW,GAAY5W,UAA0B,iBAAfiU,EAAgC,SAAW,YAAvG,YACA,kBAACzT,EAAA,EAAD,CAAQnB,KAAK,eAAeoB,QAASmW,GAAY5W,UAA0B,iBAAfiU,EAAgC,SAAW,YAAvG,YACA,kBAACzT,EAAA,EAAD,CAAQnB,KAAK,eAAeoB,QAASmW,GAAY5W,UAA0B,iBAAfiU,EAAgC,SAAW,YAAvG,SACA,kBAACzT,EAAA,EAAD,CAAQnB,KAAK,gBAAgBoB,QAASmW,GAAY5W,UAA0B,kBAAfiU,EAAiC,SAAW,YAAzG,iBAKZ,yBAAKvU,MAAO,CAACqG,SAAS,QAASsS,IAAI,QAAQnS,MAAM,OAAQoS,OAAO,SAC5D,kBAACM,GAAA,EAAD,CAAOC,QAAS,kBAAItE,GAAa,IAAQ7O,KAAM4O,EAAWzM,MAAO,IAAMnI,MAAO,CAAC4Y,OAAO,KAAMQ,UAAQ,GAChG,kBAACF,GAAA,EAAMhT,OAAP,CAAc5F,UAA2B,YAAhBwU,EAA4B,eAAiC,UAAhBA,EAA0B,cAAgB,IAAKA,GACrH,kBAACoE,GAAA,EAAM/V,KAAP,KAAa6R,OCjgBlBqE,GAzEH,WAAO,IAGb/E,EAHY,EACcxV,mBAASG,aAAayY,QAAQ,WAAa,cAAgB,eADzE,mBACT4B,EADS,KACAC,EADA,OAEYza,mBAAS,MAFrB,mBAETmS,EAFS,KAEDwD,EAFC,KAiEhB,OA5DA5P,qBAAU,WACK,MAAVoM,IACD3O,OAAOsD,SAAS,EAAG,GACnB2T,EAAW,mBAEZ,CAACtI,IAEJpM,qBAAU,WACO,gBAAZyU,GAAyC,gBAAZA,GAC9B7E,EAAU,QAEX,CAAC6E,IAuBW,gBAAZA,IACDhF,EACA,6BACE,kBAAC,EAAD,CAAa1S,cAAe2X,EAC5B9X,WAAY,iBAID,iBAAZ6X,EACDhF,EACA,oCACE,kBAAC,GAAD,CACE1S,cAAe2X,EACf9W,GAAIwO,KAIU,gBAAZqI,IACNhF,EACE,kBAAC,EAAD,CACE1S,cAAe2X,EACflV,YAhCN,WACE,OAAOpF,aAAayY,QAAQ,YAgCxBjR,cA3CN,SAAoB+S,GACL,KAAVA,GACDjV,QAAQC,IAAI,kBACZvF,aAAawa,SAGbxa,aAAaC,QAAQ,UAAWsa,IAsC9B9T,SAAU+O,KAId,yBAAKnU,UAAU,OACZgU,ICzEaoF,QACW,cAA7BpX,OAAO2E,SAAS0S,UAEe,UAA7BrX,OAAO2E,SAAS0S,UAEhBrX,OAAO2E,SAAS0S,SAASpM,MACvB,2DCZNqM,iBAAO,kBAAC,GAAD,MAAS5N,SAASC,eAAe,SD6HlC,kBAAmB4N,WACrBA,UAAUC,cAAcC,MAAMxY,MAAK,SAAAyY,GACjCA,EAAaC,iB","file":"static/js/main.ce039760.chunk.js","sourcesContent":["export default {\r\n    baseURL: \"https://sahat.lamk.fi\"\r\n}","import React, {useState} from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport axios from 'axios';\r\n\r\nimport Constants from '../constant/constants'\r\n/**\r\n * @param changeContent - changes screen\r\n * @param visibility    - changes visibility in AdminScreen\r\n */\r\nconst LoginScreen = (props) => {\r\n    const [form, setForm] = useState({});\r\n    localStorage.setItem(\"Form\", form);\r\n    const [Details, setDetails] = useState(\"\")\r\n    const baseURL = Constants.baseURL;\r\n    //let session = localStorage.getItem(\"Session\");\r\n    let canLogin = true;\r\n\r\n    // if(session !== null){\r\n    //     //console.log(\"Session in progress, initiate automatic login\");\r\n    //     props.changeContent(\"AdminScreen\");\r\n    // }\r\n    // else{\r\n    //     //console.log(\"normal login\");\r\n    // }\r\n    const updateField = e => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    async function clickHandler(e)\r\n    {\r\n        if(canLogin){\r\n            e.preventDefault();\r\n            if('un' in form && 'pw' in form){\r\n                canLogin = false;\r\n                setDetails(\"Processing ...\"); //\r\n                //username and password set\r\n                await axios.post(baseURL+'/adminLogin',{\r\n                    \"username\": form.un,\r\n                    \"password\": form.pw\r\n                })\r\n                .then(function (response) {\r\n                    // handle success\r\n                    canLogin = true;\r\n                    setDetails(\"Success\");\r\n                    //console.log(\"admin login success\");\r\n                    //console.log(response);\r\n                    //console.log(\"admin token:\");\r\n                    //console.log(response.data);\r\n                    props.visibility(false);\r\n                    //props.changeSession(response.data.token);\r\n                    localStorage.setItem(\"Session\", response.data.token);\r\n                    props.changeContent(\"AdminScreen\");\r\n\r\n                    props.return(props.EventID)\r\n                })\r\n                .catch(function (error) {\r\n                    // handle error\r\n                    canLogin = true;\r\n                    //props.visibility(false);\r\n                    //console.log(\"admin login fail\");\r\n                    //console.log(error);\r\n                    if(error.toString().includes(\"401\")){\r\n                        //console.log(\"Login incorrect\");\r\n                        setDetails(\"Incorrect username and/or password\");\r\n                    }\r\n                })\r\n                canLogin = true;\r\n            }\r\n            else{\r\n                //either username or password fields are empty\r\n                setDetails(\"Please input username and password\");\r\n            }\r\n        }\r\n    }\r\n    // function test()\r\n    // {\r\n    //     props.changeSession(\"token\");\r\n    //     props.changeContent(\"AdminScreen\");\r\n    //     //props.changeSession(\"\");\r\n    // }\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col style={{display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems: 'center'}}>\r\n                    <Card>\r\n                        <Form className=\"LoginScreen\" autoComplete=\"off\">\r\n                            <Form.Group>\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"un\" onChange={updateField}/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" name=\"pw\" onChange={updateField}/>\r\n                                <Form.Text className=\"text-danger\">{Details}</Form.Text>\r\n                            </Form.Group>\r\n                            <Button onClick={clickHandler}>Login</Button>              \r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React from 'react'\r\n\r\nimport Card from 'react-bootstrap/Card'\r\n/**\r\n * \r\n * @param id - eventin ID\r\n * @param name - eventin nimi\r\n * @param delet - evokes deleteEvent\r\n * @param img - image name\r\n */\r\nconst Event = (props) => {\r\n    let baseURL = \"https://sahat.lamk.fi\"\r\n    let imgsrc;\r\n\r\n    if(props.img.includes(\"https\")){\r\n        imgsrc = props.img\r\n    }\r\n    else{\r\n        imgsrc = baseURL+`/public/${props.id}/${props.img}`\r\n    }\r\n    //console.log(props.name, imgsrc)\r\n    async function clickHandler(e){\r\n\r\n        if(e.target.name === \"delete\"){\r\n            if(window.confirm(`Are you sure you want to delete event \"${props.name}\"?`)){\r\n                props.delet(props.id)\r\n                //console.log(\"Deleted event\")\r\n            }            \r\n        }\r\n        else if(e.target.name === \"edit\"){\r\n            //console.log(\"Event.js\")\r\n            props.edit(props.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: '18rem', backgroundColor:`${props.visibility === \"visible\" ? \"white\" : \"#e0e0e0\"}` }}>\r\n            {props.img ? <Card.Img className=\"rounded mb-0\" variant=\"top\" src={imgsrc} style={{border:`5px solid ${props.color}`}}/> : null}\r\n            <Card.Body>\r\n                <Card.Title>{props.name}</Card.Title>\r\n                {/* <Card.Subtitle>ID: {props.id}</Card.Subtitle> */}\r\n                <Card.Link href=\"#\" name=\"edit\" className=\"text-secondary\" onClick={clickHandler}>Edit</Card.Link>\r\n                <Card.Link href=\"#\" name=\"delete\" className=\"text-danger\" onClick={clickHandler}>Delete</Card.Link>\r\n            </Card.Body>\r\n            {/* <button name=\"edit\" onClick={clickHandler}>Edit</button><br/>\r\n            <button name=\"delete\" onClick={clickHandler}>Delete</button> */}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Event\r\n","import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport './AddButton.css';\r\n\r\nconst DeleteButton = props => {\r\n  return (\r\n      <Button className=\"addButton\" id={props.id} name={props.name} onClick={props.onClick} style={props.style}>\r\n        <div className=\"addButtonTextContainer\">\r\n          <p className=\"addButtonText\" id={props.id} name={props.name}>+</p>\r\n        </div>\r\n      </Button>\r\n  )\r\n}\r\n\r\nexport default DeleteButton;","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios';\r\n\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport Event from '../components/Event'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n//import Navbar from 'react-bootstrap/Navbar'\r\n//import Nav from 'react-bootstrap/Nav'\r\n\r\nimport Image from 'react-bootstrap/Image'\r\n//import FormControl from 'react-bootstrap/FormControl'\r\n//import Form from 'react-bootstrap/Form'\r\n\r\nimport AddButton from '../components/AddButton'\r\nimport { Modal, Card } from 'react-bootstrap';\r\nimport Constants from '../constant/constants'\r\n/**\r\n * @param changeContent - changes screen\r\n * @param changeSession - changes session (as localstorage)\r\n * @param getSession    - gets current session (from localstorage)\r\n */\r\nconst AdminScreen = (props) => {\r\n    const [LoginVisibility, setLoginVisibility] = useState(false);\r\n    const baseURL = Constants.baseURL;\r\n    const [EventList, setEventList] = useState([]);\r\n    const [EventObject, setEventObject] = useState([])\r\n    const [Search, setSearch] = useState(\"\") // eslint-disable-line\r\n    let eventList;\r\n    if(props.readSession() === null){\r\n        console.log(\"Never should have come here.\");\r\n        props.changeContent(\"LoginScreen\");\r\n    }\r\n\r\n    async function clickHandler(e){\r\n        //console.log(e.target.id);\r\n\r\n        if(e.target.id === \"0\"){\r\n            setEventList(await findMetadata())\r\n        }\r\n        else if(e.target.id === \"1\"){\r\n            setLoginVisibility(true);\r\n        }\r\n        else if(e.target.id === \"2\"){\r\n            //console.log(props.readSession());\r\n            props.changeContent(\"AdminScreen\");\r\n        }\r\n        else if(e.target.id === \"3\"){\r\n            //console.log(\"Session is \" + props.readSession())\r\n            await axios.post(baseURL+\"/findEvent\",{\r\n                id: \"5e8dfbce0482b55473e7988b\"\r\n              },\r\n              {\r\n                headers:{\r\n                  Authorization: \"Bearer \"+props.readSession()\r\n                }\r\n                \r\n              })\r\n            .then(function (res) {\r\n                // handle success\r\n                //console.log(res.data);\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                //console.log(error);\r\n            })\r\n        }\r\n        else if(e.target.id === \"5\"){\r\n            const data = findMetadata();\r\n            data.then(function(result){\r\n                //console.log(result);\r\n            })\r\n            .catch(function (error) {\r\n                //console.log(error)\r\n            })\r\n        }\r\n        else if(e.target.id === \"6\"){\r\n            const data = findEvent(\"5e8dfbce0482b55473e7988b\");\r\n            data.then(function(result){\r\n                //console.log(result);\r\n            })\r\n            .catch(function (error) {\r\n                //console.log(error)\r\n            })\r\n        }\r\n        else if(e.target.id === \"7\"){\r\n            //console.log(\"adminscreen button\")\r\n            await props.changeID(null)\r\n            await props.changeContent(\"CreateScreen\")\r\n        }\r\n        else if (e.target.id === \"8\"){\r\n            //console.log(await findEvent(\"5ed4dfe73b77001e6faae67b\"))\r\n        }\r\n    }\r\n\r\n    async function findMetadata() {\r\n        const req = axios.get(baseURL+\"/findEventsAdmin\", {\r\n            headers:{\r\n              Authorization: \"Bearer \"+props.readSession()\r\n            }\r\n        })\r\n        return req\r\n            .then(function (res) {\r\n            eventList = (res.data);\r\n            return eventList;\r\n            })\r\n            .catch(function (error) {\r\n            //console.log(error);\r\n            setLoginVisibility(true)\r\n            return []\r\n            })\r\n    }\r\n    \r\n    const findEvent = function(eventId) {\r\n        const req = axios.post(baseURL+\"/findEvent\",{\r\n            id: eventId\r\n        },\r\n        {\r\n            headers:{\r\n              Authorization: \"Bearer \"+props.readSession()\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res) {\r\n            return res.data;\r\n        })\r\n        .catch(function (error) {\r\n            //console.log(error);\r\n        })\r\n    }\r\n\r\n    //Siirretään update formiin kun sellainen tehdään\r\n    // const updateEvent = function(form) {\r\n\r\n    //     axios.post(baseURL+\"/updateEvent\",{\r\n    //         form\r\n    //       },\r\n    //       {\r\n    //         headers:{\r\n    //           Authorization: \"Bearer \"+props.readSession()\r\n    //         }\r\n    //       })\r\n    //     .then(function (res) {\r\n    //         return res.data;\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.log(error);\r\n    //     })\r\n    // }\r\n\r\n    const deleteEvent = function(eventId) {\r\n        const req = axios.post(baseURL+\"/deleteEvent\",{\r\n            id: eventId\r\n        },\r\n        {\r\n            headers:{\r\n              Authorization: \"Bearer \"+props.readSession()\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res) {\r\n            pageLoad()\r\n            return res.data;\r\n        })\r\n        .catch(function (error) {\r\n            //console.log(error);\r\n            setLoginVisibility(true)\r\n            setEventList([])\r\n        })\r\n    }\r\n\r\n    //EventList creation\r\n    useEffect(() => { //filter metadata based on Search state\r\n        let listObjects = EventList.slice(0).reverse().map((item, index)=>{\r\n            //console.log(item.metadata.eventName)\r\n            if(item.metadata.eventName.includes(Search)){\r\n\r\n                // return <DropdownButton key={index} id=\"dropdown-basic-button\" title={item.metadata.eventName} variant=\"outline-success\">\r\n                //     <Event name={item.metadata.eventName} id={item._id} delet={deleteEvent} edit={(nid)=>{props.changeID(nid); console.log(\"Screen\")}}/>\r\n                // </DropdownButton>\r\n                //console.log(item.metadata.eventImage)\r\n                return <div key={index}>\r\n                        <Event name={item.metadata.eventName} \r\n                            id={item._id}\r\n                            color={item.metadata.colorScheme}\r\n                            visibility={item.metadata.visibility}\r\n                            delet={deleteEvent}\r\n                            edit={(nid)=>{props.changeID(nid)}}\r\n                            img={item.metadata.eventImage}/>\r\n                </div> \r\n            }\r\n            else{\r\n                return null\r\n            }\r\n        })\r\n        setEventObject(listObjects)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [EventList])\r\n\r\n    // async function test(){\r\n    //     setEventList(await findMetadata())\r\n    // }\r\n    async function pageLoad(){\r\n        //console.log(\"Page load\")\r\n        setEventList(await findMetadata())\r\n    }\r\n    useEffect(() => {\r\n        pageLoad()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [Search])\r\n    useEffect(() => {\r\n        //console.log(\"Admin Screen loaded\")\r\n        pageLoad()\r\n        window.scrollTo(0, 0)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const [AboutModal, setAboutModal] = useState(false) // eslint-disable-line\r\n\r\n    return (\r\n        <>\r\n        <Modal show={AboutModal} onHide={()=>{setAboutModal(false)}}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>About this software</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>Made by Simo Wesa, Pauli Sairanen and Mikael Petrow \r\n                    at LAB University of Applied Sciences with assistance from Matti Welin and Henri Koukka, \r\n                    in cooperation with Finnish Sawmills Association.</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>Version: 1.0 (Last updated: 11/08/2020)</p>\r\n                <Button onClick={()=>{setAboutModal(false)}} variant=\"primary\">Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        <div style={{display:'flex', flexDirection:'row', justifyContent:'center', alignItems:'center'}}>\r\n            <Button onClick={()=>{setAboutModal(true)}} style={{position:'absolute',left:'30px'}} variant=\"outline-success\">About</Button>\r\n            <Image src=\"https://sahateollisuus.com/wp-content/uploads/2019/03/st_www_logoetu.jpg\" width='30%'/>\r\n            <Button style={{position:'absolute',right:'30px'}} variant=\"outline-success\" onClick={()=>{\r\n                props.changeSession(\"\");\r\n                props.changeContent(\"LoginScreen\");\r\n            }}>Logout</Button>\r\n        </div>\r\n\r\n        {/* <div id=\"Toolbar\">\r\n            <div id=\"Toolbar-tools\">\r\n                <button className=\"ToolButton\" id=\"1\" onClick={clickHandler}>Reauth test</button>\r\n                <button className=\"ToolButton\" id=\"2\" onClick={clickHandler}>Test 2</button>\r\n                <button className=\"ToolButton\" id=\"3\" onClick={clickHandler}>Test 3</button>\r\n                <button className=\"ToolButton\" id=\"4\" onClick={clickHandler}>Test 4</button>\r\n                <button className=\"ToolButton\" id=\"5\" onClick={clickHandler}>Test 5</button>\r\n                <button className=\"ToolButton\" id=\"6\" onClick={clickHandler}>Test 6</button>\r\n                <button className=\"ToolButton\" id=\"8\" onClick={clickHandler}>Test 8</button>\r\n            </div>\r\n        </div> */}\r\n        <div style={{display: 'flex', flexDirection:'column', justifyContent:'center', alignContent: 'center'}}>\r\n            <AddButton id=\"7\" onClick={(e) => clickHandler(e)}/>\r\n            {EventObject.length > 0 ? EventObject : <p style={{alignSelf:'center', justifySelf:'center'}}>Cannot connect to the server</p>}\r\n        </div>\r\n        {LoginVisibility ? \r\n            <Card id=\"ReAuth\" style={{display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                <p id=\"ReAuthText\">Authecation token invalid. Please reauthenticate</p>\r\n                <LoginScreen \r\n                changeContent={(cont) => {props.changeContent(cont)}}\r\n                readSession={() => {props.readSession()}} \r\n                changeSession={(sess) => {props.changeSession(sess)}}\r\n                visibility={setLoginVisibility}\r\n                return={()=>{window.location.reload()}}/>\r\n            </Card> : null}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport './AboutCard.css';\r\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap'\r\n\r\nconst AboutCard = props => {\r\n  let form = props.form\r\n  \r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    form = props.form\r\n  })\r\n  // function changeHandler(e){\r\n  //   let data = props.data;\r\n  //   data = data.slice(0).reverse()\r\n  //   data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n  //   data = data.slice(0).reverse()\r\n  //   props.editForm(data)\r\n  // }\r\n\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    <Form onChange={(e)=> props.onChange(e)}>\r\n      <Card>\r\n        <div className=\"bigDiv\">\r\n          <FormLabel>Welcome Text</FormLabel>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Chapter 1</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"bodyText1\" defaultValue={form.bodyText1}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Chapter 2</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"bodyText2\" defaultValue={form.bodyText2}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Chapter 3</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"bodyText3\" defaultValue={form.bodyText3}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Chapter 4</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"bodyText4\" defaultValue={form.bodyText4}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <div className=\"bigDiv\">\r\n          <FormLabel>Venue Information</FormLabel>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Name of the Venue</FormLabel>\r\n                <FormControl size=\"sm\" name=\"placeName\" defaultValue={form.placeName}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Address of the Venue</FormLabel>\r\n                <FormControl size=\"sm\" name=\"placeAddress\" defaultValue={form.placeAddress}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Email of the Venue</FormLabel>\r\n                <FormControl size=\"sm\" name=\"placeEmail\" defaultValue={form.placeEmail}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Phone of the Venue</FormLabel>\r\n                <OverlayTrigger \r\n                placement=\"bottom\" \r\n                delay={{show: 250, hide: 250}}\r\n                overlay={<Tooltip>Include area code. Example: \"+358 12345678\"</Tooltip>}\r\n                >\r\n                <FormControl size=\"sm\" name=\"placePhone\" defaultValue={form.placePhone}></FormControl>\r\n                </OverlayTrigger>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <div className=\"bigDiv\">\r\n          <FormLabel>More Information</FormLabel>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Event Website</FormLabel>\r\n                <FormControl size=\"sm\" name=\"MiWebsite\" defaultValue={form.MiWebsite}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Event Organizer</FormLabel>\r\n                <FormControl size=\"sm\" name=\"MiOrg\" defaultValue={form.MiOrg}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Email of the Organizer</FormLabel>\r\n                <FormControl size=\"sm\" name=\"MiEmail\" defaultValue={form.MiEmail}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <div className=\"bigDiv\">\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Disclaimers</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"disclaimer1\" defaultValue={form.disclaimer1}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"disclaimer2\" defaultValue={form.disclaimer2}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default AboutCard;","import React from 'react'\r\n// import Card from 'react-bootstrap/Card'\r\n//import BsForm from 'react-bootstrap/Form'\r\n// import Col from 'react-bootstrap/Col'\r\n// import Button from 'react-bootstrap/Button'\r\nimport AboutCard from '../components/AboutCard'\r\n/**\r\n * @param editForm - evoke changehandler\r\n * @param appendForm - evoke appendForm\r\n * @param bodytexts - bodytexts from formobjects\r\n * @param disclaimers - disclaimers from formobjects\r\n * @param FO - formobjects\r\n * @param fileToUpload - evoke fileToUpload\r\n */\r\nconst AboutForm = (props) => {\r\n    // const [Form, setForm] = useState(props.bodyTexts ? props.bodyTexts : [])\r\n    // const [Form2, setForm2] = useState(props.disclaimers ? props.disclaimers : [])\r\n    // const [Fields, setFields] = useState(createFields)\r\n    // const [Fields2, setFields2] = useState(createFields2)\r\n\r\n    //renders bodytexts\r\n    // function createFields(){\r\n    //     if(Form){\r\n    //         let list = Form.map((items,index)=>{\r\n    //             return (\r\n    //             <div key={index} id={'ta'+index}>\r\n    //                 <BsForm.Control as=\"textarea\" rows=\"3\" defaultValue={items} name={index} onChange={changeHandler}/>\r\n    //                 {/* <textarea defaultValue={items} name={index} onChange={changeHandler}/> */}\r\n    //                 {/* <button id={'rem'+index} name={index} onClick={remHandler}>-</button> //disabled until I can figure this out */}\r\n    //             </div>\r\n    //             )\r\n    //         })\r\n    //         return list;\r\n    //     }\r\n    // }\r\n    // function changeHandler(e){\r\n    //     //console.log(Form)\r\n    //     let temp = Form;\r\n    //     temp[e.target.name] = e.target.value;\r\n    //     setForm(temp)\r\n    // }\r\n    // function remHandler(e){\r\n        \r\n    // }\r\n    // function clickHandler(e){\r\n    //     let temp = Form;\r\n    //     temp.push(\"\")\r\n    //     setFields(createFields)\r\n    // }\r\n    //Redundant code below, \r\n    //changes disclaimers\r\n    // function createFields2(){\r\n    //     if(Form2){\r\n    //         let list = Form2.map((items,index)=>{\r\n    //             return (\r\n    //             <div key={index} id={'dis'+index}>\r\n    //                 <BsForm.Control as=\"textarea\" rows=\"3\" defaultValue={items} name={index} onChange={changeHandler2}/>\r\n    //                 {/* <textarea defaultValue={items} name={index} onChange={changeHandler2}/> */}\r\n    //                 {/* <button id={'rem'+index} name={index} onClick={remHandler}>-</button> //disabled until I can figure this out */}\r\n    //             </div>\r\n    //             )\r\n    //         })\r\n    //         return list;\r\n    //     }\r\n    // }\r\n    // function changeHandler2(e){\r\n    //     //console.log(Form2)\r\n    //     let temp = Form2;\r\n    //     temp[e.target.name] = e.target.value;\r\n    //     setForm2(temp)\r\n    // }\r\n    // function remHandler2(e){\r\n        \r\n    // }\r\n    // function clickHandler2(e){\r\n    //     let temp = Form2;\r\n    //     temp.push(\"\")\r\n    //     setFields2(createFields2)\r\n    // }\r\n    return(\r\n        // <div>\r\n        // <form onChange={props.editForm} autoComplete=\"off\" id=\"abtform\">\r\n        //     <input type=\"text\" name=\"eventPass\" placeholder=\"Event Password\" defaultValue={props.FO.eventPass}/>\r\n        //     <input type=\"text\" name=\"eventName\" placeholder=\"Event Name\" defaultValue={props.FO.eventName}/>\r\n        //     <input type=\"text\" name=\"visibility\" placeholder=\"Event Status(visible/hidden)\" defaultValue={props.FO.visibility}/>\r\n        //     <input type=\"text\" name=\"eventWebUrl\" placeholder=\"Event URL\" defaultValue={props.FO.eventWebUrl}/>\r\n        //     <input type=\"text\" name=\"placeName\" placeholder=\"Place Name\" defaultValue={props.FO.placeName}/>\r\n        //     <input type=\"text\" name=\"placeAddress\" placeholder=\"Place Address\" defaultValue={props.FO.placeAddress}/>\r\n        //     <input type=\"text\" name=\"placePhone\" placeholder=\"Place Phone\" defaultValue={props.FO.placePhone}/>\r\n        //     <input type=\"text\" name=\"placeEmail\" placeholder=\"Place Email\" defaultValue={props.FO.placeEmail}/>\r\n        //     <input type=\"text\" name=\"eventTitle\" placeholder=\"Event Title\" defaultValue={props.FO.eventTitle}/>\r\n        //     <input type=\"text\" name=\"MiWebsite\" placeholder=\"More info Website\" defaultValue={props.FO.MiWebsite}/>\r\n        //     <input type=\"text\" name=\"MiOrg\" placeholder=\"More info Organizer\" defaultValue={props.FO.MiOrg}/>\r\n        //     <input type=\"text\" name=\"MiEmail\" placeholder=\"More info Email\" defaultValue={props.FO.MiEmail}/>\r\n        //     <label>Event Image</label>\r\n        //     <input type=\"file\" id=\"test\" name=\"test\" onChange={(e)=>{\r\n        //         //props.appendForm(\"eventImage\", `https://sahat.lamk.fi/images/metadataImages/${e.target.files[0].name}`)\r\n        //         props.fileToUpload(e)\r\n        //     }}/>\r\n        // </form>\r\n        // {Fields}\r\n        // <button onClick={clickHandler}>Add BodyText</button>\r\n        // {Fields2}\r\n        // <button onClick={clickHandler2}>Add Disclaimer</button>\r\n        // </div>\r\n\r\n        // <Card>\r\n        //     <BsForm onChange={props.editForm} style={{padding: '30px'}}>\r\n        //         <BsForm.Row>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Event Password</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"eventPass\" defaultValue={props.FO.eventPass} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Event Name</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"eventName\" defaultValue={props.FO.eventName} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Title</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"eventTitle\" defaultValue={props.FO.eventTitle} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 {/* <BsForm.Label>Event visibility(visible/hidden)</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"visibility\" defaultValue={props.FO.visibility} /> */}\r\n        //                 <BsForm.Label>Event visiblity</BsForm.Label>\r\n        //                 <BsForm.Check type={'radio'} name=\"visibility\" label={'visible'} value=\"visible\" defaultChecked={props.FO.visibility == \"visible\" ? true : false}/> {/*eslint-disable-line*/}\r\n        //                 <BsForm.Check type={'radio'} name=\"visibility\" label={'hidden'} value=\"hidden\" defaultChecked={props.FO.visibility == \"hidden\" ? true : false}/> {/*eslint-disable-line*/}\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Event WebURL</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"eventWebUrl\" defaultValue={props.FO.eventWebUrl} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Event Image</BsForm.Label>\r\n        //                 <BsForm.Control type=\"file\" id=\"test\" name=\"eventImage\" onChange={(e)=>{\r\n        //                     //props.appendForm(\"eventImage\", `https://sahat.lamk.fi/images/metadataImages/${e.target.files[0].name}`)\r\n        //                     props.fileToUpload(e)\r\n        //                 }} />\r\n        //                 <BsForm.Label>{props.FO.eventImage ? \"Selected image: \"+ props.FO.eventImage : null}</BsForm.Label>\r\n\r\n        //             </BsForm.Group>\r\n        //         </BsForm.Row>\r\n\r\n\r\n        //         <BsForm.Row>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Name</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"placeName\" defaultValue={props.FO.placeName} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Address</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"placeAddress\" defaultValue={props.FO.placeAddress} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Phone</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"placePhone\" defaultValue={props.FO.placePhone} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Email</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"placeEmail\" defaultValue={props.FO.placeEmail} />\r\n        //             </BsForm.Group>\r\n        //         </BsForm.Row>\r\n        //         <BsForm.Row>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>More Info Website</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"MiWebsite\" defaultValue={props.FO.MiWebsite} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>More Info Organizer</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"MiOrg\" defaultValue={props.FO.MiOrg} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>More Info Email</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"MiEmail\" defaultValue={props.FO.MiEmail} />\r\n        //             </BsForm.Group>\r\n        //         </BsForm.Row>\r\n\r\n        //         <BsForm.Row>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>BodyText</BsForm.Label>\r\n        //                 {Fields}\r\n        //                 <Button onClick={clickHandler}>Add Bodytext</Button>\r\n        //             </BsForm.Group>\r\n\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Disclaimer</BsForm.Label>\r\n        //                 {Fields2}\r\n        //                 <Button onClick={clickHandler2}>Add Disclaimer</Button>\r\n        //             </BsForm.Group>\r\n        //         </BsForm.Row>\r\n        //     </BsForm>\r\n        // </Card>\r\n\r\n        <AboutCard onChange={(e)=>{props.editForm(e)}} form={props.FO}/>\r\n    )\r\n}\r\n\r\nexport default AboutForm","import xlsx from 'xlsx'\r\n/**\r\n * @param f - e.target\r\n */\r\nexport default function xlsxToJson(f){\r\n    return new Promise((res)=>{\r\n        //console.log(f.files[0])\r\n        let file = f.files[0]\r\n        if(file && file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"){\r\n            let reader = new FileReader();\r\n            reader.onload = function(e){\r\n                let data = e.target.result;\r\n                let xlsxBin = xlsx.read(data, {type:'binary'});\r\n                const wsName = xlsxBin.SheetNames[0]\r\n                const ws = xlsxBin.Sheets[wsName];\r\n\r\n                const jsonData = xlsx.utils.sheet_to_json(ws,{header:1});\r\n                console.log(jsonData)\r\n                let check = true\r\n                while(check && jsonData.length > 0){\r\n                    for(let i in jsonData){\r\n                        if(!jsonData[i].length > 0){\r\n                            jsonData.splice(i,1)\r\n                            check = true;\r\n                            break;\r\n                        }\r\n                        else{\r\n                            check = false;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                res(jsonData)\r\n            };\r\n            reader.readAsBinaryString(file)\r\n        }\r\n        else{\r\n            console.log(\"invalid file input\")\r\n           res(null)\r\n        }\r\n    })\r\n    \r\n}","import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport './DeleteButton.css';\r\n\r\nconst DeleteButton = props => {\r\n  return (\r\n      <Button id={props.id} name={props.name} className=\"deleteButton\" onClick={props.onClick} style={props.style}>\r\n        <div className=\"deleteButtonTextContainer\">\r\n          <p id={props.id} name={props.name}>-</p>\r\n        </div>\r\n      </Button>\r\n  )\r\n}\r\n\r\nexport default DeleteButton;","import React from 'react';\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport { useEffect } from 'react';\r\nimport DeleteButton from './DeleteButton';\r\nimport './ParticipantsCard.css';\r\n\r\nconst SponsorCard = props => {\r\n\r\n  let formObject = props.form\r\n\r\n  if(formObject.ImageID && props.ID){\r\n    formObject.imgsrc = `https://sahat.lamk.fi/public/${props.ID}/${formObject.ImageID}`\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data[props.index][e.target.name] = e.target.value;\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  return (\r\n    <Card>\r\n      <div className=\"bigDiv\">\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>First Name</FormLabel>\r\n                <FormControl size=\"sm\" value={formObject.FirstName} onChange={(e) => {changeHandler(e)}} name=\"FirstName\"></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Last Name</FormLabel>\r\n                <FormControl size=\"sm\" value={formObject.LastName} onChange={(e) => {changeHandler(e)}} name=\"LastName\"></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Email</FormLabel>\r\n                <FormControl size=\"sm\" value={formObject.Email} onChange={(e) => {changeHandler(e)}} name=\"Email\"></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Phone</FormLabel>\r\n                <OverlayTrigger \r\n                  placement=\"bottom\" \r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Include area code. Example: \"+358 12345678\"</Tooltip>}\r\n                  >\r\n                  <FormControl size=\"sm\" value={formObject.Phone} onChange={(e) => {changeHandler(e)}} name=\"Phone\"></FormControl>\r\n                </OverlayTrigger>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Company</FormLabel>\r\n                <FormControl size=\"sm\" value={formObject.Company} onChange={(e) => {changeHandler(e)}} name=\"Company\"></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Country ISO Code</FormLabel>\r\n                <OverlayTrigger \r\n                  placement=\"bottom\" \r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Example: \"FI\", \"SE\", \"FR\"</Tooltip>}\r\n                  >\r\n                  <FormControl size=\"sm\" value={formObject.Country} onChange={(e) => {changeHandler(e)}} name=\"Country\"></FormControl>\r\n                </OverlayTrigger>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <DeleteButton onClick={deleteHandler}/>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SponsorCard;","import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport './SortButton.css';\r\n\r\nconst SortButton = props => {\r\n  return (\r\n    <div className=\"sortButtonWrapper\">\r\n      <Button className=\"sortButton\" id={props.id} name={props.name} onClick={props.onClick} style={props.style}>\r\n        {props.content}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortButton;","import React, {useState, useEffect} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport xlsxToJson from '../components/XlsxConverter'\r\n//import Card from 'react-bootstrap/Card'\r\nimport AddButton from '../components/AddButton'\r\nimport ParticipantsCard from '../components/ParticipantsCard'\r\nimport SortButton from '../components/SortButton'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n//import { ButtonGroup } from 'react-bootstrap'\r\n\r\n//import FormTable from '../components/FormTable'\r\nimport LazyLoad from 'react-lazyload';\r\nimport { forceCheck } from 'react-lazyload';\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\n//import FormTable from '../components/FormTable'\r\n/*\r\nparticipants: [\r\n    {\r\n        Country: \"Test\",\r\n        FirstName: \"Test\",\r\n        LastName: \"Test\",\r\n        Email: \"Test\",\r\n        Phone: \"Test\",\r\n        Company: \"Test\"\r\n    }\r\n],\r\n*/\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n */\r\nconst ParticipantsForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n    \r\n    // function clickHandler(e){\r\n    //     e.preventDefault(); //prevents page refresh\r\n    //     let form = Form;\r\n    //     form.push({\r\n    //         Country: e.target.form[0].value,\r\n    //         FirstName: e.target.form[1].value,\r\n    //         LastName: e.target.form[2].value,\r\n    //         Email: e.target.form[3].value,\r\n    //         Phone: e.target.form[4].value,\r\n    //         Company: e.target.form[5].value\r\n    //     })\r\n    //     document.getElementById(\"form\").reset();\r\n    //     setForm(form)\r\n    //     props.editForm(\"participants\", Form)\r\n    // }\r\n    function clickEmpty(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            Country: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Email: \"\",\r\n            Phone: \"\",\r\n            Company: \"\"\r\n        })\r\n        setForm(form)\r\n        props.editForm(\"participants\", Form)\r\n    }\r\n    async function fileHandler(e){\r\n        e.preventDefault();\r\n        let jsonData = await xlsxToJson(e.target)\r\n        console.log(jsonData)\r\n        let form = []\r\n        for(let i in jsonData){\r\n            console.log(jsonData[i])\r\n            if(i > 0){\r\n                form.push(\r\n                    {\r\n                        Country: jsonData[i][0],\r\n                        FirstName: jsonData[i][1],\r\n                        LastName: jsonData[i][2],\r\n                        Email: jsonData[i][3],\r\n                        Phone: jsonData[i][4],\r\n                        Company: jsonData[i][5]\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        setForm(form)\r\n        props.editForm(\"participants\", Form)\r\n        document.getElementById(\"fileform\").reset();\r\n    }\r\n    const [Search, setSearch] = useState(\"\")\r\n    useEffect(() => {\r\n        if(Search !== \"\"){\r\n            forceCheck();\r\n        }\r\n    }, [Search])\r\n    let dataContainer;\r\n    function cardHandler(e){\r\n        // if(parseInt(Page) === Math.ceil(e.length/CardsPerPage) && Page !== \"0\"){\r\n        //     setPage((parseInt(Page)-1).toString())\r\n        // }\r\n        setForm(e)\r\n        props.editForm(\"participants\", e)\r\n    }\r\n\r\n    function sortParticipants (list) {\r\n        let unsortedList = list;\r\n        let sortedList = unsortedList.sort((a, b) => \r\n        (a.LastName < b.LastName)\r\n        ? 1 :\r\n        (a.LastName === b.LastName)\r\n        ?\r\n        ((a.FirstName < b.FirstName) ? 1 : -1) : -1)\r\n        setForm(sortedList);\r\n        props.editForm(\"participants\", sortedList)\r\n        console.log(sortedList);\r\n    }\r\n\r\n    dataContainer = Form.slice(0).reverse().map((item, index)=>{\r\n        if((item.Company).includes(Search) || \r\n            (item.Country).includes(Search) || \r\n            (item.Email).includes(Search) || \r\n            (item.FirstName).includes(Search) || \r\n            (item.LastName).includes(Search) || \r\n            (item.Phone).includes(Search)||\r\n            Search === \"\"){\r\n            return(\r\n                <LazyLoad key={index} height={200}>\r\n                    <ParticipantsCard \r\n                        key={index} \r\n                        index={index} \r\n                        form={item} \r\n                        data={Form} \r\n                        editForm={cardHandler}\r\n                        fileToUpload={(e)=>props.fileToUpload(e)}\r\n                    />\r\n                </LazyLoad>\r\n            )\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    })\r\n    // const [Page, setPage] = useState(\"0\")\r\n    // const [CardsPerPage, setCardsPerPage] = useState(20)\r\n    // let totalPages = Math.ceil(dataContainer.length/CardsPerPage)\r\n\r\n    // let pageButtons = []\r\n    // if(totalPages > 1){\r\n    //     for(let i = 0; i < totalPages; i++){\r\n    //         pageButtons.push(\r\n    //             <Button key={i} name={i} onClick={(e)=>{setPage(e.target.name)}} disabled={Page === i.toString() ? true : false }>Page {i}</Button>\r\n    //         )\r\n    //     }\r\n    // }\r\n    // let cardContainer = dataContainer.splice(CardsPerPage*Page, CardsPerPage)\r\n\r\n    return(\r\n        <>\r\n        <div style={{height:'48px',display:'flex',justifyContent:'center',alignContent:'center',flexDirection:'row'}}>\r\n        <form id=\"fileform\" style={{display:'flex',flex:'1',justifyContent:'flex-end',alignContent:'center'}}>\r\n            <label htmlFor=\"hidden-input\" className=\"excelButton\">Choose Excel File</label>\r\n            <input id=\"hidden-input\" type=\"file\" className=\"hidden\" onChange={fileHandler}/>\r\n        </form>\r\n        <div style={{display:'flex',flex:'1',justifyContent:'flex-start',alignContent:'center'}}>\r\n            <a className=\"excelButton\" href='/Excel/Participants.xlsx' download>Download Excel Template</a>\r\n        </div>\r\n        </div>\r\n        <div style={\r\n            {\r\n                marginRight:'20px', marginLeft:'20px', display:'flex',justifyContent:'center', \r\n                alignItems:'center', flexDirection:'column', flexWrap:'wrap'\r\n            }}>\r\n            {/* <label>Cards per Page: </label>\r\n            <input type=\"number\" min=\"1\" defaultValue={CardsPerPage} onKeyDown={(e)=>{if(e.keyCode === 13 && e.target.value > 0){setCardsPerPage(e.target.value)}}}/>\r\n            {totalPages > 1 ? <h5>Current Page: {Page}</h5> : null}\r\n            <ButtonGroup style={{display:'flex', flexWrap:'wrap'}}>\r\n                {pageButtons}\r\n            </ButtonGroup> */}\r\n            <div style={{display:'flex', flexDirection: 'row', marginBottom:'10px', justifyContent: 'center', alignItems:'center'}}>\r\n                    <InputGroup style={{display:'flex', justifyContent:'center', alignItems:'center', borderRadius:'4px', border:'1.5px solid lightgrey', padding:'0px', marginRight: '10px'}}>\r\n                        <FormControl className=\"noActive\" onKeyDown={(e)=>{if(e.keyCode === 13) setSearch(e.target.value)}}/>\r\n                    </InputGroup>\r\n                    <Button className=\"otherButtons\" onClick={(e)=>{e.target.parentNode.childNodes[0].childNodes[0].value = \"\"; setSearch(\"\")}}>Clear</Button>\r\n                <Button className=\"otherButtons\" onClick={(e)=>{setSearch(e.currentTarget.parentNode.childNodes[0].childNodes[0].value)}}>Search</Button>\r\n            </div>\r\n        </div>\r\n        <form autoComplete=\"off\" id=\"form\">\r\n            {/* <input type=\"text\" name=\"country\" placeholder=\"Country\"/>\r\n            <input type=\"text\" name=\"firstName\" placeholder=\"First Name\"/>\r\n            <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\"/>\r\n            <input type=\"text\" name=\"email\" placeholder=\"Email\"/>\r\n            <input type=\"text\" name=\"phone\" placeholder=\"Phone\"/>\r\n            <input type=\"text\" name=\"company\" placeholder=\"Company\"/>\r\n            <button onClick={clickHandler}>Add Participant</button> */}\r\n            <AddButton onClick={clickEmpty}/>\r\n        </form>\r\n        <SortButton content=\"Sort\" onClick={() => {sortParticipants(Form)}}></SortButton>\r\n        <div className=\"list\">\r\n            {dataContainer}\r\n            {/* {cardContainer} */}\r\n        </div>\r\n\r\n        {/* <div className=\"footer\" style={{display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center', backgroundColor:'white', position:'fixed', bottom:'0', width:'100%'}}>\r\n            <p>This software uses react-lazyload - see library-license.txt</p>\r\n        </div> */}\r\n        {/* <label>.xlsx file input</label>\r\n        <input type=\"file\" onChange={fileHandler}/> */}\r\n        {/* {Form.length > 0 ? <FormTable form={Form} setForm={setForm}/> : null} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ParticipantsForm","import React from 'react';\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\n//import {Button} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\n//import {Image} from 'react-bootstrap'\r\nimport DeleteButton from '../components/DeleteButton'\r\nimport { useEffect } from 'react';\r\nimport './ProgrammeCard.css'\r\nimport PdfIcon from '@material-ui/icons/PictureAsPdfOutlined'\r\nimport NoPdfIcon from '@material-ui/icons/NoSim'\r\n\r\nconst ProgrammeCard = props => {\r\n    let formObject = props.form\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        formObject = props.form\r\n    })\r\n    function changeHandler(e){\r\n        let data = props.data;\r\n        data = data.slice(0).reverse()\r\n        if(e.target.type === \"file\"){\r\n            data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n          }\r\n          else{\r\n            data[props.index][e.target.name] = e.target.value\r\n          }\r\n        data = data.slice(0).reverse()\r\n        props.editForm(data)\r\n    }\r\n    function deleteHandler(){\r\n        let data = props.data;\r\n        data = data.slice(0).reverse()\r\n        data.splice(props.index, 1)\r\n        data = data.slice(0).reverse()\r\n        props.editForm(data)\r\n    }\r\n    function fileHandler(e){\r\n        props.fileToUpload(e)\r\n    }\r\n\r\n    let PdfIconElement\r\n    if (props.form.Pdf){\r\n        PdfIconElement = <PdfIcon className=\"pdfIcon\" style={{color: '#ff0000'}}></PdfIcon>\r\n    }\r\n    else {\r\n        PdfIconElement = <NoPdfIcon className=\"pdfIcon\"></NoPdfIcon>\r\n    }\r\n\r\n    let counter = 0;\r\n    for(let i = 0; i < props.data.length; i++){\r\n        if(props.data[i].day === formObject.day){\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                <Card>\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"bigDiv\">\r\n                                <Form>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <FormGroup>\r\n                                                <FormLabel>Name of the Speaker</FormLabel>\r\n                                                <FormControl size=\"sm\" onChange={changeHandler} name=\"NameOfSpeaker\" value={formObject.NameOfSpeaker}></FormControl>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <FormGroup>\r\n                                                <FormLabel>Title of the Speaker</FormLabel>\r\n                                                <FormControl size=\"sm\" onChange={changeHandler} name=\"TitleOfSpeaker\" value={formObject.TitleOfSpeaker}></FormControl>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <FormGroup>\r\n                                                <FormLabel>Special Title of the Speaker</FormLabel>\r\n                                                <FormControl size=\"sm\" onChange={changeHandler} name=\"SpecialTitleOfSpeaker\" value={formObject.SpecialTitleOfSpeaker}></FormControl>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <FormGroup>\r\n                                                <FormLabel>Company of the Speaker</FormLabel>\r\n                                                <FormControl size=\"sm\" onChange={changeHandler} name=\"CompanyOfSpeaker\" value={formObject.CompanyOfSpeaker}></FormControl>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        {/* <Col>\r\n                                            <FormGroup>\r\n                                                <FormLabel>Day</FormLabel>\r\n                                                <FormControl size=\"sm\" type=\"number\" min=\"0\" name=\"day\" value={formObject.day} onChange={changeHandler}></FormControl>\r\n                                            </FormGroup>\r\n                                        </Col> */}\r\n                                        <Col>\r\n                                            <FormGroup>\r\n                                                <FormLabel>Time</FormLabel>\r\n                                                <OverlayTrigger \r\n                                                placement=\"bottom\" \r\n                                                delay={{show: 250, hide: 250}}\r\n                                                overlay={<Tooltip>Example \"15:00-15:30\"</Tooltip>}\r\n                                                >\r\n                                                <FormControl size=\"sm\" name=\"Time\" onChange={changeHandler} value={formObject.Time}></FormControl>\r\n                                                </OverlayTrigger>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <FormGroup>\r\n                                                <FormLabel>Location</FormLabel>\r\n                                                <FormControl size=\"sm\" name=\"Location\" onChange={changeHandler} value={formObject.Location}></FormControl>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <FormGroup>\r\n                                                <FormLabel>Description</FormLabel>\r\n                                                <FormControl size=\"sm\" name=\"Description\" as=\"textarea\" rows=\"1\" value={formObject.Description} onChange={changeHandler}></FormControl>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                            </div>\r\n                            <div className=\"smallDiv\">\r\n                                {/* <FormGroup className=\"file\"> */}\r\n                                            <FormLabel>{PdfIconElement}</FormLabel>\r\n                                            <label htmlFor={\"hidden-\"+props.index} className=\"labelForHidden\" style={{width: \"111.25px\"}}>Choose PDF</label>\r\n                                            <FormControl size=\"sm\" onChange={(e)=>{changeHandler(e); fileHandler(e); e.target.value = null}} className=\"hidden\" name=\"Pdf\" type='file' id={'hidden-'+props.index}></FormControl>\r\n                                {/* </FormGroup> */}\r\n                            </div>\r\n                        </div>\r\n                        {/* <Button className=\"deleteButton\" onClick={deleteHandler}>\r\n                            <span className=\"deleteButtonText\">-</span>\r\n                        </Button> */}\r\n                        {counter > 1 ? <DeleteButton onClick={deleteHandler}/> : null}\r\n                </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgrammeCard;","import React, {useState, useEffect} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport xlsxToJson from '../components/XlsxConverter'\r\nimport ProgrammeCard from '../components/ProgrammeCard'\r\nimport AddButton from '../components/AddButton'\r\nimport SortButton from '../components/SortButton'\r\n//import DeleteButton from '../components/DeleteButton'\r\nimport { ButtonGroup, Button, Col, Row, Card, OverlayTrigger, Tooltip} from 'react-bootstrap' // eslint-disable-line\r\n//import { colors } from '@material-ui/core'\r\n//import BsForm from 'react-bootstrap/Form'\r\n/*Esim\r\n[\r\n    {\r\n        \"day\": \"Day 0\",\r\n        \"content\": [\r\n            {\r\n                Time: \"\",\r\n                Location: \"\",\r\n                Description: \"\",\r\n                NameOfSpeaker: \"\",\r\n                TitleOfSpeaker: \"\",\r\n                SpecialTitleOfSpeaker: \"\",\r\n                CompanyOfSpeaker: \"\",\r\n                Pdf: \"Testi.pdf\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"day\": \"Day 1\",\r\n        \"content\": [\r\n            {\r\n                Time: \"\",\r\n                Location: \"\",\r\n                Description: \"\",\r\n                NameOfSpeaker: \"\",\r\n                TitleOfSpeaker: \"\",\r\n                SpecialTitleOfSpeaker: \"\",\r\n                CompanyOfSpeaker: \"\",\r\n                Pdf: \"Testi.pdf\"\r\n            }\r\n        ]\r\n    }\r\n]\r\nTodo make function to convert ^^^ to vvv\r\n[\r\n    {day: \"Day 0\", jne},\r\n    {day: \"Day 0\", jne},\r\n    {day: \"Day 0\", jne},\r\n    {day: \"Day 1\", jne},\r\n    {day: \"Day 1, jne},\r\n    {day: \"Day 2\", jne},\r\n]\r\n*/\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n * @param fileToUpload - put file to list of files to upload\r\n */\r\nconst ProgrammeForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n    const [Data, setData] = useState(FormToData(Form))\r\n    const [ActiveDay, setActiveDay] = useState(\"1\") // eslint-disable-line\r\n    useEffect(() => {\r\n        props.editForm(\"programme\", Form)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [Form])\r\n\r\n    // const keys = \r\n    // [\r\n    //     \"Day\",\r\n    //     \"Time\",\r\n    //     \"Location\",\r\n    //     \"Description\",\r\n    //     \"Name of Speaker\",\r\n    //     \"Title of Speaker\",\r\n    //     \"Special Title of Speaker\",\r\n    //     \"Company\",\r\n    //     \"Pdf\"\r\n    // ]\r\n    function getTime(obj){\r\n        let time = (obj.Time.split(\"-\"))[0].split(\":\")\r\n        time[0] = parseFloat(time[0])\r\n        time[1] = parseFloat(time[1])\r\n        time.push(parseFloat(obj.day))\r\n        return time\r\n    }\r\n    function convertToMinutes(Time){\r\n        return Time[0] * 60 + Time[1] + Time[2] * 1440\r\n    }\r\n    function compareTime(a,b){ // is a < b ? \r\n        a = getTime(a);\r\n        b = getTime(b);\r\n\r\n        a = convertToMinutes(a);\r\n        b = convertToMinutes(b);\r\n\r\n        return a < b\r\n    }\r\n    function sortAlgorithm(data){ //using selection sort algorithm\r\n        for(let i = 0; i < data.length-1; i++){\r\n            let min = i;\r\n            for(let j = i+1; j < data.length; j++){\r\n                //console.log(`(${j},${min})    ${getTime(data[j])} < ${getTime(data[min])}`, compareTime(data[j], data[min]))\r\n                //console.log(`Comparing ${getTime(data[j])}, ${getTime(data[min])}`)\r\n                if(compareTime(data[j],data[min])){\r\n                    min = j\r\n                    //console.log(\"New min \",min)\r\n                }\r\n            }\r\n            if(min !== i){\r\n                //console.log(`swapping ${i} and ${min}`)\r\n                let temp = data[i]\r\n                data[i] = data[min]\r\n                data[min] = temp\r\n            }\r\n        }\r\n        //console.log(data)\r\n        dataToForm(data)\r\n    }\r\n    function dataToForm(data){\r\n        //console.log(data)\r\n        //data to form starts here\r\n        let form = [];\r\n        for(let key in data){\r\n            let i;\r\n            let found = false;\r\n            for(i = 0; i < form.length; i++){\r\n                if('day' in form[i]){\r\n                    if(form[i].day === 'Day '+data[key].day){\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(found){\r\n                form[i].content.push(\r\n                    {\r\n                        Time: data[key].Time,\r\n                        Location: data[key].Location,\r\n                        Description: data[key].Description,\r\n                        NameOfSpeaker: data[key].NameOfSpeaker,\r\n                        TitleOfSpeaker: data[key].TitleOfSpeaker,\r\n                        SpecialTitleOfSpeaker: data[key].SpecialTitleOfSpeaker,\r\n                        CompanyOfSpeaker: data[key].CompanyOfSpeaker,\r\n                        Pdf: data[key].Pdf\r\n                    }\r\n                )\r\n            }\r\n            else{\r\n                form.push(\r\n                    {\r\n                        day: 'Day '+data[key].day,\r\n                        content: [\r\n                            {\r\n                                Time: data[key].Time,\r\n                                Location: data[key].Location,\r\n                                Description: data[key].Description,\r\n                                NameOfSpeaker: data[key].NameOfSpeaker,\r\n                                TitleOfSpeaker: data[key].TitleOfSpeaker,\r\n                                SpecialTitleOfSpeaker: data[key].SpecialTitleOfSpeaker,\r\n                                CompanyOfSpeaker: data[key].CompanyOfSpeaker,\r\n                                Pdf: data[key].Pdf\r\n                            }\r\n                        ]\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        let fix = false\r\n        for(let i in data){\r\n            if(ActiveDay === data[i].day){\r\n                fix = false;\r\n                break;\r\n            }\r\n            fix = true;\r\n        }\r\n        if(fix){\r\n            setActiveDay(\"1\")\r\n        }\r\n        setForm(form)\r\n        setData(FormToData(form))\r\n\r\n        //props.editForm(\"programme\", Form)\r\n    }\r\n    function FormToData(form){\r\n        let newForm = []\r\n        for(let i in form){\r\n            let day = form[i].day\r\n            day = day.replace(\"Day \", \"\")\r\n            let content = form[i].content\r\n\r\n            for(let j in content){\r\n                newForm.push(\r\n                {\r\n                    day: day,\r\n                    Time: content[j].Time,\r\n                    Location: content[j].Location,\r\n                    Description: content[j].Description,\r\n                    NameOfSpeaker: content[j].NameOfSpeaker,\r\n                    TitleOfSpeaker: content[j].TitleOfSpeaker,\r\n                    SpecialTitleOfSpeaker: content[j].SpecialTitleOfSpeaker,\r\n                    CompanyOfSpeaker: content[j].CompanyOfSpeaker,\r\n                    Pdf: content[j].Pdf\r\n                })\r\n            }\r\n        }\r\n        //console.log(form, newForm)\r\n        return newForm\r\n    }\r\n    function clickEmpty(e, day){ // eslint-disable-line\r\n        e.preventDefault();\r\n        let form = Form\r\n        let i;\r\n        let found = false;\r\n        for(i = 0; i < form.length; i++){\r\n            if('day' in form[i]){\r\n                if(form[i].day === \"Day \"+day){\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(found){\r\n            form[i].content.push(\r\n                {\r\n                    Time: \"\",\r\n                    Location: \"\",\r\n                    Description: \"\",\r\n                    NameOfSpeaker: \"\",\r\n                    TitleOfSpeaker: \"\",\r\n                    SpecialTitleOfSpeaker: \"\",\r\n                    CompanyOfSpeaker: \"\",\r\n                    Pdf: \"\"\r\n                }\r\n            )\r\n        }\r\n        else{\r\n            form.push(\r\n                {\r\n                    day: \"Day \"+day,\r\n                    content: [\r\n                        {\r\n                            Time: \"\",\r\n                            Location: \"\",\r\n                            Description: \"\",\r\n                            NameOfSpeaker: \"\",\r\n                            TitleOfSpeaker: \"\",\r\n                            SpecialTitleOfSpeaker: \"\",\r\n                            CompanyOfSpeaker: \"\",\r\n                            Pdf: \"\"\r\n                        }\r\n                    ]\r\n                }\r\n            )\r\n        }\r\n        //document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"programme\", form)\r\n        setData(FormToData(form))\r\n    }\r\n    function clickHandler(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        \r\n        let i;\r\n        let found = false;\r\n        for(i = 0; i < form.length; i++){\r\n            if('day' in form[i]){\r\n                if(form[i].day === \"Day \"+e.target.form[0].value){\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(found){\r\n            form[i].content.push(\r\n                {\r\n                    Time: e.target.form[1].value,\r\n                    Location: e.target.form[2].value,\r\n                    Description: e.target.form[3].value,\r\n                    NameOfSpeaker: e.target.form[4].value,\r\n                    TitleOfSpeaker: e.target.form[5].value,\r\n                    SpecialTitleOfSpeaker: e.target.form[6].value,\r\n                    CompanyOfSpeaker: e.target.form[7].value,\r\n                    Pdf: (e.target.form[8].value).match(/[^\\\\/]*$/)[0]\r\n                }\r\n            )\r\n        }\r\n        else{\r\n            form.push(\r\n                {\r\n                    day: \"Day \"+e.target.form[0].value,\r\n                    content: [\r\n                        {\r\n                            Time: e.target.form[1].value,\r\n                            Location: e.target.form[2].value,\r\n                            Description: e.target.form[3].value,\r\n                            NameOfSpeaker: e.target.form[4].value,\r\n                            TitleOfSpeaker: e.target.form[5].value,\r\n                            SpecialTitleOfSpeaker: e.target.form[6].value,\r\n                            CompanyOfSpeaker: e.target.form[7].value,\r\n                            Pdf: (e.target.form[8].value).match(/[^\\\\/]*$/)[0]\r\n                        }\r\n                    ]\r\n                }\r\n            )\r\n        }\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"programme\", form)\r\n        setData(FormToData(form))\r\n    }\r\n\r\n    async function fileHandler(e){\r\n        let jsonData = await xlsxToJson(e.target)\r\n        //console.log(jsonData)\r\n        let list = []\r\n        for(let i in jsonData){\r\n            if(i > 0){       \r\n                list.push(\r\n                    {\r\n                        day: jsonData[i][0],\r\n                        Time: jsonData[i][1],\r\n                        Location: jsonData[i][2],\r\n                        Description: jsonData[i][3],\r\n                        NameOfSpeaker: jsonData[i][4],\r\n                        TitleOfSpeaker: jsonData[i][5],\r\n                        SpecialTitleOfSpeaker: jsonData[i][6],\r\n                        CompanyOfSpeaker: jsonData[i][7],\r\n                        Pdf: jsonData[i][8],\r\n                    }\r\n                )\r\n            }   \r\n        }\r\n        dataToForm(list)\r\n        document.getElementById(\"fileform\").reset();\r\n    }\r\n    // https://imgur.com/a/XiuemMT\r\n    function getHighestDay(){\r\n        let data = Data;\r\n        let day = 0;\r\n        for(let i in data){\r\n            if(data[i].day > day){\r\n                day = parseInt(data[i].day);\r\n            }\r\n        }\r\n        return day;\r\n    }\r\n    function dayHandler(e){\r\n        if(e.target.name === \"plus\"){\r\n            clickEmpty(e, getHighestDay()+1)\r\n        }\r\n        else if(e.target.name === \"minus\"){\r\n            let data = Data;\r\n            let highest = getHighestDay();\r\n            let loop = true;\r\n            while(loop){\r\n                loop = false\r\n                for(let i in data){\r\n                    if(parseInt(data[i].day) === highest){\r\n                        data.splice(i,1)\r\n                        loop = true\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            dataToForm(data)\r\n        }\r\n        else if(e.target.name === \"day\"){\r\n            setActiveDay(e.target.id)\r\n        }\r\n        else{\r\n            clickEmpty(e, ActiveDay)\r\n        }\r\n    }\r\n\r\n    let dayButtons = [];\r\n    let takenDays = [];\r\n    let buttonNum = 0;\r\n    dayButtons = Data.map((item, index)=>{\r\n        //console.log(index, item)\r\n        \r\n        if(!takenDays.includes(item.day)){\r\n            takenDays.push(item.day)\r\n            buttonNum++;\r\n            return(<Button key={index} name=\"day\" id={item.day} onClick={dayHandler} className={ActiveDay === item.day ? \"active\" : \"inactive\"} disabled={ActiveDay === item.day ? true : false}>Day {item.day}</Button>)\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    })\r\n\r\n    let dataContainer;\r\n    dataContainer = Data.slice(0).reverse().map((item, index)=>{\r\n        //console.log(item.day, ActiveDay)\r\n        if(Form.length > 0){\r\n            if(item.day === ActiveDay || ActiveDay == null){\r\n                return(<ProgrammeCard key={index} index={index} form={item} data={Data} editForm={(data) => dataToForm(data)} fileToUpload={(e)=>props.fileToUpload(e)}/>)\r\n            }\r\n            else{\r\n                return(null)\r\n            }\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    })\r\n    \r\n    return(\r\n        <>\r\n        <div style={{height:'48px',display:'flex',justifyContent:'center',alignContent:'center',flexDirection:'row'}}>\r\n        <form id=\"fileform\" style={{display:'flex',flex:'1',justifyContent:'flex-end',alignContent:'center'}}>\r\n            <label htmlFor=\"hidden-input\" className=\"excelButton\">Choose Excel File</label>\r\n            <input id=\"hidden-input\" type=\"file\" className=\"hidden\" onChange={fileHandler}/>\r\n        </form>\r\n        <div style={{display:'flex',flex:'1',justifyContent:'flex-start',alignContent:'center'}}>\r\n            <a className=\"excelButton\" href='/Excel/Programme.xlsx' download>Download Excel Template</a>\r\n        </div>\r\n        </div>    \r\n        <form autoComplete=\"off\" id=\"form\" style={{display:'none'}}>\r\n            <label >Day:</label>\r\n            <input type=\"number\" name=\"Date\" min=\"0\" defaultValue=\"1\"/>\r\n            <input type=\"text\" name=\"time\" placeholder=\"Time\"/>\r\n            <input type=\"text\" name=\"location\" placeholder=\"Event Location\"/>\r\n            {/* <input type=\"text\" name=\"description\" placeholder=\"Event Description\"/> */}\r\n            <textarea name=\"description\" placeholder=\"Event Description\"/>\r\n            <input  type=\"text\" name=\"speakerName\" placeholder=\"Speaker Name\"/>\r\n            <input  type=\"text\" name=\"speakerTitle\" placeholder=\"Speaker Title\"/>\r\n            <input  type=\"text\" name=\"speakerSpecialTitle\" placeholder=\"Speaker Special Title\"/>\r\n            <input  type=\"text\" name=\"speakerCompany\" placeholder=\"Speaker Company\"/>\r\n            <input  type=\"file\" name=\"test\" id=\"test\" \r\n            onChange={(e)=>{props.fileToUpload(e)}}/>\r\n            <button onClick={clickHandler}>Add Programme</button>\r\n            {/* <Button onClick={clickEmpty} style={\r\n                {\r\n                    height: '50px',\r\n                    width: '50px',\r\n                    backgroundColor: \"#32CD32\"\r\n                }}><span className=\"deleteButtonText\">+</span></Button> */}\r\n        </form>\r\n        {/* <Card style={{width:\"300px\", display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems:'center'}}>\r\n            <BsForm style={{width:'50%'}}>\r\n                <BsForm.Group>\r\n                    <BsForm.Label>Day</BsForm.Label>\r\n                    <BsForm.Control type=\"number\" name=\"Date\" min=\"0\" defaultValue=\"1\" id=\"Date\"/>\r\n                    <AddButton onClick={clickEmpty} style={{display: 'flex', justifyContent: 'center', alignItems:'center'}}/>\r\n                </BsForm.Group>\r\n            </BsForm>\r\n        </Card> */}\r\n        {/* style={{width:'300px', display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'flex-end'}} */}\r\n        <div style={{display:'flex', flexDirection:'row', justifyContent:'center', alignItems:'center'}}>\r\n            <div>\r\n                <ButtonGroup className=\"navbarButtons\">\r\n                    {dayButtons}\r\n                </ButtonGroup>\r\n                {/* <Button>Day 1</Button>\r\n                <Button>Day 2</Button>\r\n                <Button>Day 3</Button> */}\r\n            </div>\r\n            <div>\r\n                <ButtonGroup vertical style={{display:'flex', flexDirection:'column', alignItems:'center', justifyContent:'center'}}>\r\n                    <Button className=\"dayAddButton\" name=\"plus\" onClick={dayHandler} disabled={buttonNum >= 5 ? true : false}>+</Button>\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        delay={{show: 250, hide: 250}}\r\n                        overlay={<Tooltip>WARNING! Pressing this deletes the most recent day and all its contents!</Tooltip>}\r\n                        >\r\n                    <Button className=\"dayDeleteButton\" name=\"minus\" onClick={dayHandler}>-</Button>\r\n                    </OverlayTrigger>\r\n                </ButtonGroup>\r\n                {/* <Button name=\"test\" onClick={dayHandler}>test</Button> */}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            {Form.length > 0 ? <AddButton onClick={dayHandler}/> : null}\r\n            \r\n        </div>\r\n        {/* <ProgrammeCard/> */}\r\n        <div style={{marginTop: '20px', display: 'flex', justifyContent:'center', alignItems:'center'}}>\r\n            \r\n        </div>\r\n        <SortButton content=\"Sort\" onClick={()=>{sortAlgorithm(Data)}}></SortButton>\r\n        {Data.length > 0 ? dataContainer : null}\r\n        {/* {Form.length > 0 ? \r\n            <FormTable \r\n                form={FormToData(Form)} \r\n                setForm={(data) => dataToForm(data)} \r\n                fileToUpload={(e)=>{props.fileToUpload(e)}}\r\n            /> : \r\n        null} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProgrammeForm","import React, {useEffect} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport DeleteButton from './DeleteButton';\r\nimport './SpeakerCard.css';\r\n\r\nconst SpeakerCard = props => {\r\n  let formObject = props.form\r\n  let ID = props.ID\r\n  if(formObject.ImageID && ID && !formObject.speakerImgsrc){\r\n    formObject.speakerImgsrc = `https://sahat.lamk.fi/public/${ID}/${formObject.ImageID}`\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    if(e.target.type === \"file\"){\r\n      data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n    }\r\n    else{\r\n      data[props.index][e.target.name] = e.target.value\r\n    }\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"speakerImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Name of the Speaker</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.Speaker} onChange={(e) => {changeHandler(e)}} name=\"Speaker\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Title of the Speaker</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.Title} onChange={(e) => {changeHandler(e)}} name=\"Title\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Special Title of the Speaker</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.SpecialTitle} onChange={(e) => {changeHandler(e)}} name=\"SpecialTitle\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Company of the Speaker</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.Company} onChange={(e) => {changeHandler(e)}} name=\"Company\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Description</FormLabel>\r\n                    <OverlayTrigger \r\n                      placement=\"bottom\" \r\n                      delay={{show: 250, hide: 250}}\r\n                      overlay={<Tooltip>More detailed description of the speaker</Tooltip>}\r\n                      >\r\n                    <FormControl as=\"textarea\" size=\"sm\" value={formObject.Description} onChange={(e) => {changeHandler(e)}} name=\"Description\"></FormControl>\r\n                  </OverlayTrigger>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n          <FormLabel><Image className=\"filePrev\" src={formObject.speakerImgsrc} fluid roundedCircle/></FormLabel>\r\n          <OverlayTrigger \r\n            placement=\"bottom\" \r\n            delay={{show: 250, hide: 250}}\r\n            overlay={<Tooltip>Image size: 1080px</Tooltip>}\r\n            >\r\n          <label htmlFor={'hidden-'+props.index} className=\"labelForHidden\">Choose image</label>\r\n          </OverlayTrigger>\r\n          <FormControl size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e); e.target.value = null}} id={'hidden-'+props.index} className=\"hidden\" type='file' name=\"ImageID\"></FormControl>\r\n          {/* <Form.File size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} name=\"ImageID\"/> */}\r\n        </div>\r\n      </div>\r\n      {/* <Button className=\"deleteButton\" onClick={deleteFunction}>\r\n        <span className=\"deleteButtonText\">-</span>\r\n      </Button> */}\r\n      <DeleteButton onClick={deleteHandler}></DeleteButton>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SpeakerCard;","import React, {useState} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport xlsxToJson from '../components/XlsxConverter'\r\nimport SpeakerCard from '../components/SpeakerCard'\r\n//import Card from 'react-bootstrap/Card'\r\nimport AddButton from '../components/AddButton'\r\nimport SortButton from '../components/SortButton'\r\n/*\r\n{\r\n    \"Speaker\": \"Test\",\r\n    \"Title\": \"Test\",\r\n    \"SpecialTitle\": \"Test\",\r\n    \"Company\": \"Test\",\r\n    \"ImageID\": \"not implemented\" //https://sahat.lamk.fi/images/speakerImages/${imageID}\r\n}\r\n*/\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n * @param fileToUpload - put file to list of files to upload\r\n */\r\nconst SpeakersForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n    function clickHandler(e){ //deprecated\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            Speaker: e.target.form[0].value,\r\n            Title: e.target.form[1].value,\r\n            SpecialTitle: e.target.form[2].value,\r\n            Company: e.target.form[3].value,\r\n            ImageID: (e.target.form[4].value).match(/[^\\\\/]*$/)[0]\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"speakers\", Form)\r\n    }\r\n    function clickEmpty(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            Speaker: \"\",\r\n            Title: \"\",\r\n            SpecialTitle: \"\",\r\n            Company: \"\",\r\n            ImageID: \"\",\r\n            Description: \"\"\r\n        })\r\n        setForm(form)\r\n        props.editForm(\"speakers\", Form)\r\n    }\r\n    async function fileHandler(e){\r\n        let jsonData = await xlsxToJson(e.target)\r\n        let form = []\r\n        for(let i in jsonData){\r\n            //console.log(jsonData[i])\r\n            if(i > 0){\r\n                form.push(\r\n                    {\r\n                        Speaker: jsonData[i][0],\r\n                        Title: jsonData[i][1],\r\n                        SpecialTitle: jsonData[i][2],\r\n                        Company: jsonData[i][3],\r\n                        ImageID: jsonData[i][4],\r\n                        Description: jsonData[i][5],\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        setForm(form)\r\n        props.editForm(\"speakers\", Form)\r\n        document.getElementById(\"fileform\").reset();\r\n    }\r\n    let dataContainer;\r\n    function cardHandler(e){\r\n        setForm(e)\r\n        props.editForm(\"speakers\", e)\r\n    }\r\n\r\n    function sortSpeakers (list) {\r\n        let unsortedList = list;\r\n        let sortedList = unsortedList.sort((a, b) => \r\n        ((a.Speaker.split(' '))[1] < (b.Speaker.split(' '))[1])\r\n        ? 1 :\r\n        ((a.Speaker.split(' '))[1] === (b.Speaker.split(' '))[1])\r\n        ?\r\n        (((a.Speaker.split(' '))[0] < (b.Speaker.split(' '))[0]) ? 1 : -1) : -1)\r\n        setForm(sortedList);\r\n        props.editForm(\"speakers\", sortedList)\r\n        console.log(sortedList);\r\n    }\r\n\r\n    dataContainer = Form.slice(0).reverse().map((item, index)=>{\r\n        return(\r\n        <SpeakerCard \r\n            key={index} \r\n            index={index} \r\n            form={item} \r\n            data={Form} \r\n            editForm={cardHandler}\r\n            ID={props.EditID}  \r\n            fileToUpload={(e)=>props.fileToUpload(e)}\r\n        />)\r\n    })\r\n    return(\r\n        <>\r\n        <div style={{height:'48px',display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'row'}}>\r\n        <div id=\"fileform\" style={{display:'flex', flex:'1', justifyContent:'flex-end',alignContent:'center'}}>\r\n            <label htmlFor=\"hidden-input\" className=\"excelButton\">Choose Excel File</label>\r\n            <input id=\"hidden-input\" type=\"file\" className=\"hidden\" onChange={fileHandler}/>\r\n        </div>\r\n        <div style={{display:'flex',flex:'1',justifyContent:'flex-start',alignContent:'center'}}>\r\n            <a className=\"excelButton\" href='/Excel/Speakers.xlsx' download>Download Excel Template</a>\r\n        </div>\r\n        </div>\r\n        <form autoComplete=\"off\" id=\"form\"> \r\n            <input style={{display: 'none'}} type=\"text\" name=\"speaker\" placeholder=\"Speaker\"/>\r\n            <input style={{display: 'none'}} type=\"text\" name=\"speakerTitle\" placeholder=\"Speaker Title\"/>\r\n            <input style={{display: 'none'}} type=\"text\" name=\"speakerSpecialTitle\" placeholder=\"Speaker Special Title\"/>\r\n            <input style={{display: 'none'}} type=\"text\" name=\"speakersCompany\" placeholder=\"Speakers Company\"/>\r\n            <input style={{display: 'none'}} type=\"file\" name=\"speakerImage\" id=\"test\" \r\n            onChange={(e)=>{props.fileToUpload(e)}}/>\r\n            <button style={{display: 'none'}} onClick={clickHandler}>Add Speaker</button>\r\n            <AddButton onClick={clickEmpty}/>\r\n        </form>\r\n        <SortButton content=\"Sort\" onClick={() => {sortSpeakers(Form)}}></SortButton>\r\n        {dataContainer}\r\n        {/* {Form.length > 0 ? <FormTable form={Form} setForm={setForm} fileToUpload={(e)=>{props.fileToUpload(e)}}/> : null} */}\r\n        </>\r\n    )\r\n}\r\nexport default SpeakersForm","import React from 'react';\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport { useEffect } from 'react';\r\nimport DeleteButton from './DeleteButton';\r\nimport './SponsorCard.css';\r\n\r\n\r\nconst SponsorCard = props => {\r\n  let formObject = props.form\r\n\r\n  if(formObject.ImageID && props.ID && !formObject.sponsorImgsrc){\r\n    formObject.sponsorImgsrc = `https://sahat.lamk.fi/public/${props.ID}/${formObject.ImageID}`\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    if(e.target.type === \"file\"){\r\n      data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n    }\r\n    else{\r\n      data[props.index][e.target.name] = e.target.value\r\n    }\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"sponsorImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  return (\r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Name of the Company</FormLabel>\r\n                  <FormControl value={formObject.CompanyName} name=\"CompanyName\" onChange={(e) => changeHandler(e)} placeholder=\"Name of company\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Url of the Company</FormLabel>\r\n                  <FormControl value={formObject.CompanyUrl} name=\"CompanyUrl\" onChange={(e) => changeHandler(e)} placeholder=\"Url of company\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n          <FormLabel><Image className=\"filePrev\" src={formObject.sponsorImgsrc} fluid/></FormLabel>\r\n          <OverlayTrigger \r\n            placement=\"bottom\" \r\n            delay={{show: 250, hide: 250}}\r\n            overlay={<Tooltip>Image size: 1080px</Tooltip>}\r\n            >\r\n          <label htmlFor={'hidden-'+props.index} className=\"labelForHidden\">Choose image</label>\r\n          </OverlayTrigger>\r\n          <FormControl className=\"hidden\" name=\"ImageID\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e); e.target.value = null}} type='file' id={'hidden-'+props.index}/>\r\n        </div>\r\n      </div>\r\n      <DeleteButton onClick={deleteHandler}/>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SponsorCard;","import React, {useState} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport SponsorCard from '../components/SponsorCard'\r\nimport AddButton from '../components/AddButton'\r\nimport SortButton from '../components/SortButton'\r\n/*\r\n{\r\n    \"CompanyName\": \"Test\",\r\n    \"CompanyUrl\": \"Test\",\r\n    \"ImageID\": \"Test\"\r\n}\r\n*/\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n * @param fileToUpload - put file to list of files to upload\r\n */\r\nconst SponsorsForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n    function clickHandler(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            CompanyName: e.target.form[0].value,\r\n            CompanyUrl: e.target.form[1].value,\r\n            ImageID: (e.target.form[2].value).match(/[^\\\\/]*$/)[0]\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"sponsors\", Form)\r\n    }\r\n    function clickEmpty(e){\r\n        e.preventDefault();\r\n        let form = Form;\r\n        form.push({\r\n            CompanyName: \"\",\r\n            CompanyUrl: \"\",\r\n            ImageID: \"\"\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"sponsors\", Form)\r\n    }\r\n    let dataContainer;\r\n    function cardHandler(e){\r\n        setForm(e)\r\n        props.editForm(\"sponsors\", e)\r\n    }\r\n\r\n    function sortSponsors (list) {\r\n        let unsortedList = list;\r\n        let sortedList = unsortedList.sort((a, b) => \r\n        (a.CompanyName < b.CompanyName)\r\n        ? 1 :\r\n        (a.CompanyName === b.CompanyName)\r\n        ?\r\n        ((a.Speaker < b.CompanyName) ? 1 : -1) : -1)\r\n        setForm(sortedList);\r\n        props.editForm(\"sponsors\", sortedList)\r\n        console.log(sortedList);\r\n    }\r\n\r\n    dataContainer = Form.slice(0).reverse().map((item, index)=>{\r\n        return(\r\n        <SponsorCard \r\n            key={index} \r\n            index={index} \r\n            form={item} \r\n            data={Form} \r\n            editForm={cardHandler}\r\n            ID={props.EditID} \r\n            fileToUpload={(e)=>props.fileToUpload(e)}\r\n        />)\r\n    })\r\n    return(\r\n        <>\r\n        <form autoComplete=\"off\" id=\"form\">\r\n            <input style={{display: 'none'}} type=\"text\" name=\"sponsorCompany\" placeholder=\"Company Name\"/>\r\n            <input style={{display: 'none'}} type=\"text\" name=\"sponsorURL\" placeholder=\"Company URL\"/>\r\n            <input style={{display: 'none'}} type=\"file\" name=\"sponsorImg\" id=\"test\" \r\n            onChange={(e)=>{props.fileToUpload(e)}}/>\r\n            <button style={{display: 'none'}} onClick={clickHandler}>Add Sponsor</button>\r\n            <AddButton onClick={clickEmpty}/>\r\n        </form>\r\n        <SortButton content=\"Sort\" onClick={() => {sortSponsors(Form)}}></SortButton>\r\n        {dataContainer}\r\n        {/* {Form.length > 0 ? <FormTable form={Form} setForm={setForm} fileToUpload={(e)=>{props.fileToUpload(e)}}/> : null} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SponsorsForm","import React, {useEffect} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport DeleteButton from './DeleteButton';\r\nimport './VenueCard.css';\r\n\r\nconst VenueCard = props => {\r\n  let formObject = props.form\r\n\r\n  if(formObject.image && props.ID && !formObject.venueImgsrc){\r\n    formObject.venueImgsrc = `https://sahat.lamk.fi/public/${props.ID}/${formObject.image}`\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    if(e.target.type === \"file\"){\r\n      data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n    }\r\n    else{\r\n      data[props.index][e.target.name] = e.target.value\r\n    }\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"venueImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    \r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Title of the Map</FormLabel>\r\n                  <OverlayTrigger \r\n                    placement=\"bottom\" \r\n                    delay={{show: 250, hide: 250}}\r\n                    overlay={<Tooltip>Short name for the map. Example: \"1. Floor\", \"2. Floor\"</Tooltip>}\r\n                    >\r\n                  <FormControl size=\"sm\" value={formObject.title} onChange={(e) => {changeHandler(e)}} name=\"title\"></FormControl>\r\n                  </OverlayTrigger>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n          <FormLabel><Image className=\"filePrev\" src={formObject.venueImgsrc} fluid/></FormLabel>\r\n          <OverlayTrigger \r\n            placement=\"bottom\" \r\n            delay={{show: 250, hide: 250}}\r\n            overlay={<Tooltip>Image size: 1080px</Tooltip>}\r\n            >\r\n          <label htmlFor={'hidden-'+props.index} className=\"labelForHidden\">Choose image</label>\r\n          </OverlayTrigger>\r\n          <FormControl size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e); e.target.value = null}} id={'hidden-'+props.index} className=\"hidden\" type='file' name=\"image\"></FormControl>\r\n            {/* <Form.File size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} name=\"ImageID\"/> */}\r\n        </div>\r\n      </div>\r\n      {/* <Button className=\"deleteButton\" onClick={deleteFunction}>\r\n        <span className=\"deleteButtonText\">-</span>\r\n      </Button> */}\r\n      <DeleteButton onClick={deleteHandler}></DeleteButton>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default VenueCard;","import React, {useState} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport VenueCard from '../components/VenueCard'\r\nimport AddButton from '../components/AddButton'\r\nimport SortButton from '../components/SortButton'\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n * @param fileToUpload - put file to list of files to upload\r\n */\r\nconst VenueTabForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n\r\n    function clickHandler(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            title: e.target.form[0].value,\r\n            image: (e.target.form[1].value).match(/[^\\\\/]*$/)[0]\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"venue\", Form)\r\n    }\r\n    function clickEmpty(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            title: \"\",\r\n            image: \"\"\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"venue\", Form)\r\n    }\r\n\r\n    function sortVenue (list) {\r\n        let unsortedList = list;\r\n        console.log(unsortedList);\r\n        let sortedList = unsortedList.sort((a, b) => \r\n        (a.title < b.title)\r\n        ? 1 :\r\n        (a.title === b.title)\r\n        ?\r\n        ((a.title < b.title) ? 1 : -1) : -1)\r\n        setForm(sortedList);\r\n        props.editForm(\"venue\", sortedList)\r\n        console.log(sortedList);\r\n    }\r\n\r\n    let dataContainer;\r\n    function cardHandler(e){\r\n        setForm(e)\r\n        props.editForm(\"venue\", e)\r\n    }\r\n    dataContainer = Form.slice(0).reverse().map((item, index)=>{\r\n        return(\r\n        <VenueCard \r\n            key={index} \r\n            index={index} \r\n            form={item} \r\n            data={Form} \r\n            editForm={cardHandler}\r\n            ID={props.EditID} \r\n            fileToUpload={(e)=>props.fileToUpload(e)}\r\n        />)\r\n    })\r\n    return(\r\n        <>\r\n        <form autoComplete=\"off\" id=\"form\">\r\n            <input style={{display: 'none'}} type=\"text\" name=\"title\" placeholder=\"Venue Title\"/>\r\n            <input style={{display: 'none'}} type=\"file\" name=\"venueImg\" id=\"test\" \r\n            onChange={(e)=>{props.fileToUpload(e)}}/>\r\n            <button style={{display: 'none'}} onClick={clickHandler}>Add Venue</button>\r\n            <AddButton onClick={clickEmpty}/>\r\n        </form>\r\n        <SortButton content=\"Sort\" onClick={() => {sortVenue(Form)}}></SortButton>\r\n        {dataContainer}\r\n        {/* {Form.length > 0 ? <FormTable form={Form} setForm={setForm} fileToUpload={(e)=>{props.fileToUpload(e)}}/> : null} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VenueTabForm","import React, {useEffect, useState} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl, FormText, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport DeleteButton from './DeleteButton';\r\nimport './MapMarkerCard.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios'\r\n\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\n\r\nconst MapMarkerCard = props => {\r\n  let formObject = props.form\r\n  let ID = props.ID\r\n\r\n  if(formObject.image && ID && !formObject.markerImgsrc){\r\n    formObject.markerImgsrc = `https://sahat.lamk.fi/public/${ID}/${formObject.image}`\r\n    if((formObject.image).includes(\"https://\")){\r\n      formObject.markerImgsrc = formObject.image\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    //data = data.slice(0).reverse()\r\n    if(e.target.type === \"file\"){\r\n      data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n    }\r\n    else{\r\n      data[props.index][e.target.name] = e.target.value\r\n    }\r\n    //data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    //data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    //data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"markerImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  const [ErrorMsg, setErrorMsg] = useState()\r\n  async function geocodeHandler(){\r\n    let data = props.data;\r\n    setErrorMsg(\"\")\r\n    if(formObject.address){\r\n      let query = (formObject.address).replace(\" \", \"%20\")\r\n      let apiurl = `https://nominatim.openstreetmap.org/search/${query}?format=json&limit=1`\r\n      await axios.get(apiurl)\r\n      .then(function (res) {\r\n        data[props.index][\"lat\"] = res.data[0].lat;\r\n        data[props.index][\"long\"] = res.data[0].lon;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n        setErrorMsg(\"Cannot get lat and long\")\r\n      })\r\n    }\r\n    \r\n\r\n    props.editForm(data)\r\n  }\r\n  let formElement;\r\n  if (props.markerType === \"restaurants\"){\r\n    formElement =\r\n      <Row>\r\n        <Col>\r\n          <FormGroup>\r\n            <FormLabel>Description</FormLabel>\r\n            <FormControl as=\"textarea\" size=\"sm\" value={formObject.description} onChange={(e) => {changeHandler(e)}} name=\"description\"></FormControl>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <FormLabel>Category</FormLabel>\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              delay={{show: 250, hide: 250}}\r\n              overlay={<Tooltip>Type of restaurant. Example: \"Burger\", \"Pizza\", \"Chinese\" etc</Tooltip>}\r\n              >\r\n            <FormControl size=\"sm\" value={formObject.category} onChange={(e) => {changeHandler(e)}} name=\"category\"></FormControl>\r\n            </OverlayTrigger>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm={1}>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <FormLabel>Rating</FormLabel>\r\n            <OverlayTrigger \r\n              placement=\"bottom\" \r\n              delay={{show: 250, hide: 250}}\r\n              overlay={<Tooltip>Value 1-5</Tooltip>}\r\n              >\r\n            <FormControl size=\"sm\" value={formObject.rating} onChange={(e) => {changeHandler(e)}} name=\"rating\"></FormControl>\r\n            </OverlayTrigger>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <FormLabel>Web url</FormLabel>\r\n            <FormControl size=\"sm\" value={formObject.webURL} onChange={(e) => {changeHandler(e)}} name=\"webURL\"></FormControl>\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n  }\r\n  else if (props.markerType === \"hotels\"){\r\n    formElement =\r\n    <Row>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Description</FormLabel>\r\n          <FormControl as=\"textarea\" size=\"sm\" value={formObject.description} onChange={(e) => {changeHandler(e)}} name=\"description\"></FormControl>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Rating</FormLabel>\r\n          <OverlayTrigger \r\n              placement=\"bottom\" \r\n              delay={{show: 250, hide: 250}}\r\n              overlay={<Tooltip>Value 1-5</Tooltip>}\r\n              >\r\n          <FormControl size=\"sm\" value={formObject.rating} onChange={(e) => {changeHandler(e)}} name=\"rating\"></FormControl>\r\n          </OverlayTrigger>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col sm={1}>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Web url</FormLabel>\r\n          <FormControl size=\"sm\" value={formObject.webURL} onChange={(e) => {changeHandler(e)}} name=\"webURL\"></FormControl>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n      </Col>\r\n    </Row>\r\n  }\r\n  else if (props.markerType === \"others\"){\r\n    formElement = \r\n    <Row>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Description</FormLabel>\r\n          <FormControl as=\"textarea\" size=\"sm\" value={formObject.description} onChange={(e) => {changeHandler(e)}} name=\"description\"></FormControl>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Category</FormLabel>\r\n          <OverlayTrigger \r\n              placement=\"bottom\" \r\n              delay={{show: 250, hide: 250}}\r\n              overlay={<Tooltip>Type of business. Example: \"Theatre\", \"Library\", \"Shop\"</Tooltip>}\r\n              >\r\n          <FormControl size=\"sm\" value={formObject.category} onChange={(e) => {changeHandler(e)}} name=\"category\"></FormControl>\r\n          </OverlayTrigger>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col sm={1}>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Web URL</FormLabel>\r\n          <FormControl size=\"sm\" value={formObject.webURL} onChange={(e) => {changeHandler(e)}} name=\"webURL\"></FormControl>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n      </Col>\r\n    </Row>\r\n  }\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          {props.markerType === \"restaurants\" ? <p>Restaurant</p>: null}\r\n          {props.markerType === \"hotels\" ? <p>Hotel</p> : null}\r\n          {props.markerType === \"others\" ? <p>Other</p> : null}\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Name</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.name} onChange={(e) => {changeHandler(e)}} name=\"name\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Address</FormLabel>\r\n                  <OverlayTrigger \r\n                    placement=\"bottom\" \r\n                    delay={{show: 250, hide: 250}}\r\n                    overlay={<Tooltip>Street address, Postcode and City. Example: \"Mukkulankatu 19, 15210 Lahti\"</Tooltip>}\r\n                    >\r\n                  <FormControl size=\"sm\" value={formObject.address} onChange={(e) => {changeHandler(e)}} name=\"address\"></FormControl>\r\n                  </OverlayTrigger>\r\n                  <FormText className=\"text-danger\">{ErrorMsg}</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={1}>\r\n                <br></br>\r\n                <OverlayTrigger\r\n                  placement=\"bottom\"\r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Converts address to latitude and longitude</Tooltip>}\r\n                  >\r\n                <Button className=\"latlongButtons\" onClick={geocodeHandler}><AddLocationIcon/></Button>\r\n                </OverlayTrigger>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Latitude</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.lat} onChange={(e) => {changeHandler(e)}} name=\"lat\"></FormControl>\r\n                  <FormText>Required</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Longitude</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.long} onChange={(e) => {changeHandler(e)}} name=\"long\"></FormControl>\r\n                  <FormText>Required</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          {formElement}\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n          <FormLabel><Image className=\"filePrev\" src={formObject.markerImgsrc} fluid/></FormLabel>\r\n          <OverlayTrigger \r\n            placement=\"bottom\" \r\n            delay={{show: 250, hide: 250}}\r\n            overlay={<Tooltip>Image size: 1080px</Tooltip>}\r\n            >\r\n          <label htmlFor={'hidden-'+props.index} className=\"labelForHidden\">Choose image</label>\r\n          </OverlayTrigger>\r\n          <FormControl size=\"sm\" onChange={(e) => {changeImage(e);changeHandler(e); fileHandler(e); e.target.value = null}} id={'hidden-'+props.index} className=\"hidden\" type='file' name=\"image\"></FormControl>\r\n          {/* <Form.File size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} name=\"ImageID\"/> */}\r\n        </div>\r\n      </div>\r\n      <label>Data © OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright</label>\r\n      <DeleteButton onClick={deleteHandler}></DeleteButton>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MapMarkerCard;","import React, {useState} from 'react'\r\n//import Dropdown from 'react-bootstrap/Dropdown'\r\n//import axios from 'axios';\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Card from 'react-bootstrap/Card'\r\nimport MapMarkerCard from './MapMarkerCard'\r\nimport SortButton from '../components/SortButton'\r\n\r\n\r\n//import BsForm from 'react-bootstrap/Form'\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\n\r\n//import Overlay from 'react-bootstrap/Overlay'\r\n//import Tooltip from 'react-bootstrap/Tooltip'\r\n/*\r\n\"mapMarkers\":\r\n{\r\n    \"restaurant\":\r\n    [\r\n        {\r\n            \"lat\": \"\",\r\n            \"lng\": \"\",\r\n            \"name\": \"\",\r\n            \"address\": \"\",\r\n            \"description\": \"\",\r\n            \"category\": \"\",\r\n            \"rating\": \"\",\r\n            \"webURL\": \"\",\r\n            \"image\": \"\"\r\n        }\r\n    ],\r\n    \"hotel\":\r\n    [\r\n        {\r\n            \"lat\": \"\",\r\n            \"lng\": \"\",\r\n            \"name\": \"\",\r\n            \"address\": \"\",\r\n            \"description\": \"\",\r\n            \"rating\": \"\",\r\n            \"webURL\": \"\",\r\n            \"image\": \"\",\r\n        }\r\n    ],\r\n    \"other\":\r\n    [\r\n        {\r\n            \"lat\": \"\",\r\n            \"lng\": \"\",\r\n            \"name\": \"\",\r\n            \"address\": \"\",\r\n            \"description\": \"\",\r\n            \"category\": \"\",\r\n            \"webURL\": \"\",\r\n            \"image\": \"\"\r\n        }\r\n    ]\r\n}\r\n*/\r\nconst MapMarkerForm = (props) =>{\r\n    const [Form, setForm] = useState(props.subForm ? props.subForm : \r\n        {\r\n            restaurants: [],\r\n            hotels: [],\r\n            others: []\r\n        })\r\n    const [Data, setData] = useState(formToData(Form))\r\n\r\n    function dataToForm(data){\r\n        let newForm = {\r\n            restaurants: [],\r\n            hotels: [],\r\n            others: []\r\n        }\r\n        for(let item in data){\r\n            let newObj = {}\r\n            let destination;\r\n            for(let key in data[item]){\r\n                if(key === \"key\"){\r\n                    destination = data[item][key]\r\n                }\r\n                else{\r\n                    newObj[key] = data[item][key]\r\n                }\r\n                \r\n            }\r\n            newForm[destination].push(newObj)\r\n        }\r\n        setForm(newForm)\r\n        props.editForm(\"mapmarkers\", newForm)\r\n    }\r\n    function formToData(form){\r\n        let data = []\r\n        //console.log(form)\r\n        for(let key in form){\r\n            for(let i in form[key]){\r\n                //console.log(key, form[key][i])\r\n                let item = form[key][i];\r\n                item[\"key\"] = key\r\n                data.push(item)\r\n            }\r\n        }\r\n\r\n        return data\r\n    }\r\n    function clickHandler(e){\r\n        console.log(e.target)\r\n        let newForm = Form;\r\n        if(e.target.name === \"restaurant\"){\r\n            newForm.restaurants.push({\r\n                lat: \"\",\r\n                long: \"\",\r\n                name: \"\",\r\n                address: \"\",\r\n                description: \"\",\r\n                category: \"\",\r\n                rating: \"\",\r\n                webURL: \"\",\r\n                image: \"\",\r\n            })\r\n        }\r\n        else if(e.target.name === \"hotel\"){\r\n            newForm.hotels.push({\r\n                lat: \"\",\r\n                long: \"\",\r\n                name: \"\",\r\n                address: \"\",\r\n                description: \"\",\r\n                rating: \"\",\r\n                webURL: \"\",\r\n                image: \"\",\r\n            })\r\n        }\r\n        else if(e.target.name === \"other\"){\r\n            newForm.others.push({\r\n                lat: \"\",\r\n                long: \"\",\r\n                name: \"\",\r\n                address: \"\",\r\n                description: \"\",\r\n                category: \"\",\r\n                webURL: \"\",\r\n                image: \"\",\r\n            })\r\n        }\r\n        else{\r\n\r\n        }\r\n        setForm(newForm)\r\n        setData(formToData(newForm))\r\n    }\r\n    \r\n    const [ActiveCat, setActiveCat] = useState(\"restaurants\")\r\n    function catHandler(e){\r\n        e.preventDefault();\r\n        if(ActiveCat !== e.target.name){\r\n            setActiveCat(e.target.name)\r\n        }\r\n        else{\r\n            setActiveCat(null)\r\n        }\r\n    }\r\n\r\n    let dataContainer = null;\r\n    if(Data){\r\n        dataContainer = Data.map((item, index)=>{\r\n            //console.log(item.key)\r\n            if(item.key === ActiveCat || ActiveCat === null){\r\n                return(\r\n                <MapMarkerCard \r\n                    key={index} \r\n                    index={index} \r\n                    form={item} \r\n                    data={Data} \r\n                    editForm={(data)=>dataToForm(data)}\r\n                    ID={props.EditID}\r\n                    markerType={item.key}  \r\n                    fileToUpload={(e)=>props.fileToUpload(e)}\r\n                />)\r\n            }\r\n            else{\r\n                return null\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {/* <Col className=\"cols\" style={{display: 'flex', justifyContent: 'center'}}>\r\n            <Dropdown style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                <Dropdown.Toggle>\r\n                    Marker Categories\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#\" onClick={(e)=>{setActiveForm(e.target.name); document.getElementById(\"form\").reset();}} name=\"restaurant\">Restaurant</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\" onClick={(e)=>{setActiveForm(e.target.name); document.getElementById(\"form\").reset();}} name=\"hotel\">Hotel</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\" onClick={(e)=>{setActiveForm(e.target.name); document.getElementById(\"form\").reset();}} name=\"other\">Other</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </Col> */}\r\n\r\n        {/* <Card style={{width: '50rem'}}>\r\n            <p>Geocoder</p>\r\n            <Nominatim/>\r\n        </Card> */}\r\n        <Row>\r\n            <Card className=\"text-center\" style={{width: '40rem', display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\r\n                <h5>Marker Category</h5>\r\n                <Row style={{marginBottom: '10px'}}>\r\n                    <ButtonGroup className=\"navbarButtons\">\r\n                        <Button name=\"restaurants\" onClick={catHandler} className={ActiveCat === \"restaurants\" ? \"active\" : \"inactive\"} disabled={ActiveCat === \"restaurants\"}>Restaurants</Button>\r\n                        <Button name=\"hotels\" onClick={catHandler} className={ActiveCat === \"hotels\" ? \"active\" : \"inactive\"} disabled={ActiveCat === \"hotels\"}>Hotels</Button>\r\n                        <Button name=\"others\" onClick={catHandler} className={ActiveCat === \"others\" ? \"active\" : \"inactive\"} disabled={ActiveCat === \"others\"}>Others</Button>\r\n                    </ButtonGroup>\r\n                </Row>\r\n                <Row>\r\n                    <ButtonGroup style={{display: 'block'}}>\r\n                        {/* <Button name=\"restaurant\" onClick={(e)=>{clickHandler(e)}}>Create Restaurant</Button>\r\n                        <Button name=\"hotel\" onClick={(e)=>{clickHandler(e)}}>Create Hotel</Button>\r\n                        <Button name=\"other\" onClick={(e)=>{clickHandler(e)}}>Create Other</Button> */}\r\n                        <Button className=\"otherButtons\" name={ActiveCat === \"restaurants\" ? \"restaurant\" : ActiveCat === \"hotels\" ? \"hotel\" : \"other\"} onClick={(e)=>{clickHandler(e)}}>Create {ActiveCat === \"restaurants\" ? \"Restaurant\" : ActiveCat === \"hotels\" ? \"Hotel\" : \"Other\"}</Button>\r\n                    </ButtonGroup>\r\n                    {/* <Dropdown style={{display: 'flex', flexWrap: 'wrap', marginTop: '10px'}}>\r\n                        <Dropdown.Toggle>\r\n                            Add Marker\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={(e)=>{clickHandler(e)}} name=\"restaurant\">Restaurant</Dropdown.Item>\r\n                            <Dropdown.Item onClick={(e)=>{clickHandler(e)}} name=\"hotel\">Hotel</Dropdown.Item>\r\n                            <Dropdown.Item onClick={(e)=>{clickHandler(e)}} name=\"other\">Other</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown> */}\r\n                </Row>\r\n            </Card>\r\n        </Row>\r\n        <Col>\r\n            {dataContainer}\r\n        </Col>\r\n        </>\r\n    )\r\n}\r\n\r\n//OpenStreetMap Geocoding\r\n// const Nominatim = (props) => {\r\n//     const [Address, setAddress] = useState()\r\n//     const [Lat, setLat] = useState()\r\n//     const [Lng, setLng] = useState()\r\n//     const [Msg, setMsg] = useState()\r\n//     const latref = useRef()\r\n//     const lngref = useRef()\r\n\r\n//     const [Show, setShow] = useState(false)\r\n//     const [Target, setTarget] = useState()\r\n//     let query = \"\";\r\n//     let apiurl = `https://nominatim.openstreetmap.org/search/${query}?format=json&limit=1`\r\n//     async function clickHandler(e){\r\n//         setMsg(null)\r\n//         e.preventDefault(); //prevents page refresh\r\n//         //document.getElementById(\"lat\").value = \"\"\r\n//         //console.log(e.target.form[0].value)\r\n//         query = Address\r\n//         if(query){\r\n//             console.log(\"query is set\")\r\n//             console.log(query)\r\n//             let modquery = query.replace(\" \",\"%20\")\r\n//             console.log(\"query modified\")\r\n//             console.log(modquery)\r\n//             apiurl = `https://nominatim.openstreetmap.org/search/${modquery}?format=json&limit=1`\r\n//             //console.log(apiurl)\r\n//             axios.get(apiurl)\r\n//             .then(function (res) {\r\n//                 //console.log(res.data[0].lat, res.data[0].lon);\r\n//                 setLat(res.data[0].lat)\r\n//                 setLng(res.data[0].lon)\r\n//                 // document.getElementById(\"lat\").value = res.data[0].lat;\r\n//                 // document.getElementById(\"lng\").value = res.data[0].lon;\r\n//                 // document.getElementById(\"address\").value = query\r\n//             })\r\n//             .catch(function (error) {\r\n//                 console.log(error);\r\n//                 setMsg(\"Cannot find lat and lng of address\")\r\n//             })\r\n//         }\r\n//         else{\r\n//             console.log(\"query is not set\")\r\n//         }\r\n//     }\r\n//     function sleep(ms) {\r\n//         return new Promise(resolve => setTimeout(resolve, ms));\r\n//     }\r\n//     async function clipboard(e){\r\n//         if(e.target.name === \"lat\"){\r\n//             latref.current.select();\r\n//             setTarget(latref)\r\n//         }\r\n//         else if(e.target.name === \"lng\"){\r\n//             lngref.current.select();\r\n//             setTarget(lngref)\r\n//         }\r\n//         else{\r\n//             return null\r\n//         }\r\n//         setShow(true)\r\n//         document.execCommand('copy');\r\n//         await sleep(5000) // tooltip flickers if inputs are rapidly pressed. Too bad!\r\n//         setShow(false)\r\n//     }\r\n//     return(\r\n//         <>\r\n//         {/* <form>\r\n//             <input type=\"text\" placeholder=\"Address\"/>\r\n//             <button onClick={clickHandler}>Get lat and lng</button>\r\n//             <label>Data © OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright</label>\r\n//             {Msg}\r\n//         </form> */}\r\n//         <Row>\r\n//             <Col>\r\n//                 <BsForm>\r\n//                     <BsForm.Group>\r\n//                         <BsForm.Label>Address</BsForm.Label>\r\n//                         <BsForm.Control type=\"text\" onChange={e => {setAddress(e.target.value)}}/>\r\n//                         <BsForm.Text className=\"text-muted\">Data © OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright</BsForm.Text>\r\n//                     </BsForm.Group>\r\n//                     <BsForm.Group>\r\n//                         <Button onClick={clickHandler}>Get lat and lng</Button>\r\n//                     </BsForm.Group>\r\n//                 </BsForm>\r\n//             </Col>\r\n//             <Col>\r\n//                 <Row>\r\n//                     <Col>\r\n//                         <BsForm.Group>\r\n//                             <BsForm.Label>Latitude</BsForm.Label>\r\n//                             <BsForm.Control ref={latref} type=\"text\" name=\"lat\" onClick={clipboard} value={Lat || ''} readOnly/>\r\n//                             {Msg ? <BsForm.Text className=\"text-danger\">{Msg}</BsForm.Text>:null}\r\n//                         </BsForm.Group>\r\n//                     </Col>\r\n//                     <Col>\r\n//                         <BsForm.Group>\r\n//                             <BsForm.Label>Longitude</BsForm.Label>\r\n//                             <BsForm.Control ref={lngref} type=\"text\" name=\"lng\" onClick={clipboard} value={Lng || ''} readOnly/>\r\n//                         </BsForm.Group>\r\n//                     </Col>\r\n//                     <Overlay target={Target} show={Show} placement=\"bottom\">\r\n//                         {(props)=>(\r\n//                             <Tooltip {...props}>\r\n//                                 Copied to clipboard!\r\n//                             </Tooltip>\r\n//                         )}\r\n//                     </Overlay>\r\n//                 </Row>\r\n//             </Col>\r\n//         </Row>\r\n//         </>\r\n//     )\r\n// }\r\nexport default MapMarkerForm","import React, {useEffect, useState} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl, FormText, OverlayTrigger, Tooltip, Button} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport './GeneralCard.css'\r\nimport axios from 'axios'\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\n\r\nconst GeneralCard = props => {\r\n  let formObject = props.FO\r\n\r\n  if(formObject.eventImage && props.ID && !formObject.generalImgsrc){\r\n    formObject.generalImgsrc = `https://sahat.lamk.fi/public/${props.ID}/${formObject.eventImage}`\r\n    if((formObject.eventImage).includes(\"https://\")){\r\n      formObject.generalImgsrc = formObject.eventImage\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    formObject = props.FO\r\n    \r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"generalImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  function errorHandler(e){\r\n    console.log(e)\r\n  }\r\n\r\n  const [ErrorMsg, setErrorMsg] = useState(\"\")\r\n  async function geocodeHandler(){\r\n    setErrorMsg(\"\")\r\n    if(props.FO && props.FO.address){\r\n      let query = (props.FO.address).toString().replace(\" \", \"%20\")\r\n      let apiurl = `https://nominatim.openstreetmap.org/search/${query}?format=json&limit=1`\r\n      await axios.get(apiurl)\r\n      .then(function (res) {\r\n        // data[props.index][\"lat\"] = res.data[0].lat;\r\n        // data[props.index][\"long\"] = res.data[0].lon;\r\n        //props.appendForm(\"lat\", res.data[0].lat)\r\n        //props.appendForm(\"long\", res.data[0].lon)\r\n        props.latlongForm(res.data[0].lat, res.data[0].lon)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n        setErrorMsg(\"Unable to find lat and long\")\r\n      })\r\n    }\r\n  }\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          <Form onChange={(e)=> props.editForm(e)}>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Event Name</FormLabel>\r\n                  <FormControl size=\"sm\" name=\"eventName\" defaultValue={formObject.eventName}></FormControl>\r\n                  <FormText>Required</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Event Password</FormLabel>\r\n                  <FormControl size=\"sm\" name=\"eventPass\" defaultValue={formObject.eventPass}></FormControl>\r\n                  <FormText>Required</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Address</FormLabel>\r\n                  <OverlayTrigger \r\n                    placement=\"bottom\" \r\n                    delay={{show: 250, hide: 250}}\r\n                    overlay={<Tooltip>Street address, Postcode and City. Example: \"Mukkulankatu 19, 15210 Lahti\"</Tooltip>}\r\n                    >\r\n                  <FormControl size=\"sm\" defaultValue={formObject.address} onChange={(e)=> props.editForm(e)} name=\"address\"></FormControl>\r\n                  </OverlayTrigger>\r\n                  <FormText className=\"text-danger\">{ErrorMsg}</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={1}>\r\n                <br></br>\r\n                <OverlayTrigger\r\n                  placement=\"bottom\"\r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Converts address to latitude and longitude</Tooltip>}\r\n                  >\r\n                <Button className=\"latlongButtons\" onClick={geocodeHandler}><AddLocationIcon/></Button>\r\n                </OverlayTrigger>\r\n              </Col>\r\n              <Col sm={3}>\r\n                <FormGroup>\r\n                  <FormLabel>Latitude</FormLabel>\r\n                  <FormControl size=\"sm\" defaultValue={formObject.lat} onChange={(e)=> props.editForm(e)} name=\"lat\"></FormControl>\r\n                  <FormText>Required</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={3}>\r\n                <FormGroup>\r\n                  <FormLabel>Longitude</FormLabel>\r\n                  <FormControl size=\"sm\" defaultValue={formObject.long} onChange={(e)=> props.editForm(e)} name=\"long\"></FormControl>\r\n                  <FormText>Required</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Event Color Scheme</FormLabel>\r\n                  <OverlayTrigger \r\n                  placement=\"bottom\" \r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Hexadecimal Value. Example: \"#FFFFFF\"</Tooltip>}\r\n                  >\r\n                    <FormControl size=\"sm\" maxLength=\"7\" name=\"eventColor\" defaultValue={formObject.eventColor}></FormControl>\r\n                  </OverlayTrigger>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group>\r\n                  <Form.Label>Event Visiblity</Form.Label>\r\n                  <Form.Check className=\"checkbox\" type={'radio'} name=\"visibility\" label={'visible'} value=\"visible\" onChange={()=>{}} checked={props.FO.visibility == \"visible\" ? true : false}/> {/*eslint-disable-line*/}\r\n                  <Form.Check className=\"checkbox\" type={'radio'} name=\"visibility\" label={'hidden'} value=\"hidden\" onChange={()=>{}} checked={props.FO.visibility == \"hidden\" ? true : false}/> {/*eslint-disable-line*/}\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n            <FormLabel><Image className=\"filePrev\" src={formObject.generalImgsrc} fluid onError={errorHandler}/></FormLabel>\r\n              <OverlayTrigger \r\n                placement=\"bottom\" \r\n                delay={{show: 250, hide: 250}}\r\n                overlay={<Tooltip>Image size: 1080px</Tooltip>}\r\n                >\r\n              <label htmlFor={'hidden'} className=\"labelForHidden\">Choose image</label>\r\n              </OverlayTrigger>\r\n            <FormControl size=\"sm\" onChange={(e)=>{fileHandler(e); changeImage(e); props.editForm(e);}} id={'hidden'} className=\"hidden\" type='file' name=\"eventImage\"></FormControl>\r\n        </div>\r\n      </div>\r\n      <label>Data © OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright</label>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default GeneralCard;","//Component for handling event creation\r\nimport React, {useState, useEffect} from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nimport AboutForm from '../components/AboutForm'\r\nimport ParticipantsForm from '../components/ParticipantsForm'\r\nimport ProgrammeForm from '../components/ProgrammeForm'\r\nimport SpeakersForm from '../components/SpeakersForm'\r\nimport SponsorsForm from '../components/SponsorsForm'\r\nimport VenueTabForm from '../components/VenueTabForm'\r\nimport MapMarkerForm from '../components/MapMakerForm'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport GeneralCard from './GeneralCard';\r\nimport './CreateEventForm.css';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Toast from 'react-bootstrap/Toast'\r\n\r\nimport Image from 'react-bootstrap/Image'\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport Constants from '../constant/constants'\r\n/**\r\n * @param changeContent - change screen\r\n * @param id - Event to edit based on ID\r\n */\r\n//Screen: Creates events based on FormObjects. \r\nconst CreateEventForm = (props) => { // Todo rename to CreateEventScreen\r\n    const baseURL = Constants.baseURL;\r\n\r\n    //Visible forms controller\r\n    const [ActiveForm, setActiveForm] = useState(\"GeneralForm\")\r\n    const [EditID, setEditID] = useState(props.id)\r\n    const [Files, setFiles] = useState([])\r\n    let container;\r\n    //Modal and Toast stuff\r\n    const [ToastShow, setToastShow] = useState(false)\r\n    const [ToastHeader, setToastHeader] = useState(\"\")\r\n    const [ToastBody, setToastBody] = useState(\"\")\r\n\r\n    const [ModalShow, setModalShow] = useState(false)\r\n    const [ModalText, setModalText] = useState()\r\n    //ReAuth\r\n    const [ModalAuth, setModalAuth] = useState(false)\r\n    const [Changes, setChanges] = useState(false)\r\n    //Form variables\r\n    const [FormObjects, setFormObjects] = useState({\r\n        //About/General Form\r\n        eventPass: \"\",\r\n        eventName: \"\",\r\n        visibility: \"hidden\",\r\n        address: \"\",\r\n        lat: \"\",\r\n        long: \"\",\r\n        eventColor: \"\",\r\n        eventImage: \"\", //https://sahat.lamk.fi/saveFile\r\n        eventWebUrl: \"\",\r\n        bodyText1: \"\",\r\n        bodyText2: \"\",\r\n        bodyText3: \"\",\r\n        bodyText4: \"\",\r\n        disclaimer1: \"\",\r\n        disclaimer2: \"\",\r\n        placeName: \"\",\r\n        placeAddress: \"\",\r\n        placePhone: \"\",\r\n        placeEmail: \"\",\r\n        eventTitle: \"\",\r\n        MiWebsite: \"\",\r\n        MiOrg: \"\",\r\n        MiEmail: \"\",\r\n        //other forms\r\n        participants: [],\r\n        programme: [],\r\n        speakers: [],\r\n        sponsors: [],\r\n        mapmarkers: {\r\n            restaurants: [],\r\n            hotels: [],\r\n            others: [],\r\n        },\r\n        venue: [],\r\n        //more about from stuff (deprecated)\r\n        bodyText: [],\r\n        disclaimer: [],\r\n        \r\n    })\r\n    //Input event id, get data to set formobjects\r\n    async function parseEventData(id){\r\n        if(Changes){\r\n            return null\r\n        }\r\n        let data = await getEventData(id);\r\n        if(data === null){\r\n            return null;\r\n        }\r\n        let pass = await getPassData(data ? data.metadata.eventName : null)\r\n        //console.log(pass)\r\n        if(data){\r\n            setFormObjects({\r\n                //About Form\r\n                eventPass: `${pass}`,\r\n                eventName: `${data.metadata.eventName}`,\r\n                eventImage: `${data.metadata.eventImage}`, //https://sahat.lamk.fi/saveFile\r\n                eventColor: `${data.metadata.colorScheme}`,\r\n                visibility: `${data.metadata.visibility}`,\r\n                address: `${data.metadata.address}`,\r\n                lat: `${data.metadata.lat}`,\r\n                long: `${data.metadata.long}`,\r\n                eventWebUrl: `${data.about.eventWebUrl}`,\r\n                bodyText1: `${data.about.bodyText1}`,\r\n                bodyText2: `${data.about.bodyText2}`,\r\n                bodyText3: `${data.about.bodyText3}`,\r\n                bodyText4: `${data.about.bodyText4}`,\r\n                disclaimer1: `${data.about.disclaimer1}`,\r\n                disclaimer2: `${data.about.disclaimer2}`,\r\n                placeName: `${data.about.eventPlace.name}`,\r\n                placeAddress: `${data.about.eventPlace.address}`,\r\n                placePhone: `${data.about.eventPlace.phone}`,\r\n                placeEmail: `${data.about.eventPlace.email}`,\r\n                eventTitle: `${data.about.title}`,\r\n                MiWebsite: `${data.about.moreInformation.eventWebsite}`,\r\n                MiOrg: `${data.about.moreInformation.organizer}`,\r\n                MiEmail: `${data.about.moreInformation.email}`,\r\n                participants: data.participants,\r\n                programme: data.programme,\r\n                speakers: data.speakers,\r\n                sponsors: data.sponsors,\r\n                bodyText: data.about.bodyText,\r\n                disclaimer: data.about.disclaimer,\r\n                venue: data.venue,\r\n                mapmarkers: data.mapData\r\n            })\r\n        }\r\n    }\r\n    //When EditID is set and if it excists, run parseEventData\r\n    useEffect(() => {\r\n        \r\n        if(EditID){\r\n            parseEventData(EditID);\r\n        }\r\n        else{\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [EditID])\r\n\r\n\r\n    //Variables for selected navbar element highlighting\r\n\r\n    //Change forms in the screen\r\n    function selectForm(e){\r\n        setActiveForm(e.target.name)\r\n    }\r\n    if(ActiveForm === \"AboutForm\"){\r\n        container = <AboutForm \r\n            editForm={changeHandler}\r\n            appendForm={appendForm} \r\n            bodyTexts={FormObjects.bodyText} \r\n            disclaimers={FormObjects.disclaimer} \r\n            FO={FormObjects}\r\n            fileToUpload={fileToUpload}\r\n        />\r\n    }\r\n    else if(ActiveForm === \"GeneralForm\"){\r\n        container = <GeneralCard\r\n            editForm={changeHandler}\r\n            appendForm={appendForm}\r\n            FO={FormObjects}\r\n            fileToUpload={fileToUpload}\r\n            ID={EditID}\r\n            latlongForm={latlongForm}\r\n        />\r\n    }\r\n    else if(ActiveForm === \"ParticipantsForm\"){\r\n        container = <ParticipantsForm \r\n        editForm={appendForm}\r\n        subForm={FormObjects.participants}/>\r\n    }\r\n    else if(ActiveForm === \"ProgrammeForm\"){\r\n        container = <ProgrammeForm \r\n        editForm={appendForm} \r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.programme}/>\r\n    }\r\n    else if(ActiveForm === \"SpeakersForm\"){\r\n        container = <SpeakersForm \r\n        editForm={appendForm} \r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.speakers}\r\n        EditID={EditID}\r\n        />\r\n    }\r\n    else if(ActiveForm === \"SponsorsForm\"){\r\n        container = <SponsorsForm \r\n        editForm={appendForm} \r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.sponsors}\r\n        EditID={EditID}/>\r\n    }\r\n    else if(ActiveForm === \"VenueTabForm\"){\r\n        container = <VenueTabForm \r\n        editForm={appendForm} \r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.venue}\r\n        EditID={EditID}/>\r\n    }\r\n    else if(ActiveForm === \"MapMarkerForm\"){\r\n        container = <MapMarkerForm\r\n        editForm={appendForm}\r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.mapmarkers}\r\n        EditID={EditID}/>\r\n    }\r\n    else{\r\n        container = null\r\n    }\r\n    //changes formobjects, also gets rid of path from file inputs\r\n    function changeHandler(e){ //tuntuu redundantilta, vois poistaa myöhemmin emt.\r\n        //console.log(e.target)\r\n        //e.preventDefault();\r\n        if(e.target.type === \"file\"){\r\n            setFormObjects({\r\n                ...FormObjects,\r\n                [e.target.name]: [(e.target.value).match(/[^\\\\/]*$/)[0]]\r\n            })\r\n        }\r\n        else{\r\n            setFormObjects({\r\n                ...FormObjects,\r\n                [e.target.name]: [e.target.value]\r\n            })\r\n        }\r\n        setChanges(true)\r\n    }\r\n    //same as changeHandler, but target and value is more specified\r\n    function appendForm(target,value){\r\n        setFormObjects({\r\n            ...FormObjects,\r\n            [target]: value\r\n        })\r\n        setChanges(true)\r\n    }\r\n    function latlongForm(lat, long){\r\n        setFormObjects({\r\n            ...FormObjects,\r\n            lat: lat,\r\n            long: long\r\n        })\r\n        setChanges(true)\r\n    }\r\n    //Complete form (to send to back-end)\r\n    let finalForm = {\r\n        eventPass: `${FormObjects.eventPass}`,\r\n        metadata: {\r\n            eventName: `${FormObjects.eventName}`,\r\n            eventImage: `${FormObjects.eventImage}`,\r\n            visibility: `${FormObjects.visibility}`,\r\n            colorScheme: `${FormObjects.eventColor}`,\r\n            address: `${FormObjects.address}`,\r\n            lat: `${FormObjects.lat}`,\r\n            long: `${FormObjects.long}`\r\n        },\r\n        about: {\r\n            eventWebUrl: `${FormObjects.eventWebUrl}`,\r\n            eventPlace: {\r\n                name: `${FormObjects.placeName}`,\r\n                address: `${FormObjects.placeAddress}`,\r\n                phone: `${FormObjects.placePhone}`,\r\n                email: `${FormObjects.placeEmail}`\r\n            },\r\n            title: `${FormObjects.eventTitle}`,\r\n            // bodyText: FormObjects.bodyText, //implemented in mobile?\r\n            bodyText1: `${FormObjects.bodyText1}`,\r\n            bodyText2: `${FormObjects.bodyText2}`,\r\n            bodyText3: `${FormObjects.bodyText3}`,\r\n            bodyText4: `${FormObjects.bodyText4}`,\r\n            moreInformation: {\r\n                eventWebsite: `${FormObjects.MiWebsite}`,\r\n                organizer: `${FormObjects.MiOrg}`,\r\n                email: `${FormObjects.MiEmail}`\r\n            },\r\n            // disclaimer: FormObjects.disclaimer //implemented in mobile?\r\n            disclaimer1: `${FormObjects.disclaimer1}`,\r\n            disclaimer2: `${FormObjects.disclaimer2}`,\r\n        },\r\n        participants: FormObjects.participants,\r\n        programme: FormObjects.programme,\r\n        speakers: FormObjects.speakers,\r\n        sponsors: FormObjects.sponsors,\r\n        venue: FormObjects.venue,\r\n        mapData: FormObjects.mapmarkers\r\n    }\r\n    //func to create event\r\n    function createEventPost(form){\r\n        let adminToken = localStorage.getItem(\"Session\")\r\n        let route;\r\n        if(EditID){\r\n            route = \"/updateEvent\" \r\n            form.id = EditID;\r\n            setModalText(\"Creating Event\");\r\n\r\n        }else{\r\n            route = \"/createEvent\"\r\n            setModalText(\"Editing Event\");\r\n\r\n        }\r\n        setModalShow(true)\r\n        //Field checks\r\n        for(let i in form.mapData){\r\n            for(let j in form.mapData[i]){\r\n                if(form.mapData[i][j].lat === \"\" || form.mapData[i][j].long === \"\"){\r\n                    setModalShow(false)\r\n                    toast(\"Error\", \"Map Marker: Missing latitude and/or longitude\")\r\n                    return null\r\n                }\r\n            }\r\n        }\r\n        if(form.eventPass === \"\"){\r\n            setModalShow(false)\r\n            toast(\"Error\", \"Password field is empty\")\r\n            return null\r\n        }\r\n        if(form.metadata.lat === \"\" || form.metadata.long === \"\"){\r\n            setModalShow(false)\r\n            toast(\"Error\", \"latitude and/or longitude is empty\")\r\n            return null\r\n        }\r\n        //End Field Checks\r\n        axios.post(baseURL+route, \r\n        form,\r\n        {\r\n            headers:{\r\n                Authorization: \"Bearer \"+adminToken\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            // handle success\r\n            //console.log(\"event create success\");\r\n            //console.log(response);\r\n            let id;\r\n            \r\n            if(EditID){\r\n                id = EditID;\r\n            }\r\n            else{\r\n                setEditID(response.data._id)\r\n                id = response.data._id\r\n            }\r\n\r\n            if(Files.length > 0){\r\n                setModalText(\"Uploading files . . .\")\r\n                uploadFiles(Files, id)\r\n            }\r\n            else{\r\n                //props.changeContent(\"AdminScreen\")\r\n                setModalShow(false)\r\n                toast(\"Success\", \"Changes were saved\")\r\n            }\r\n            setChanges(false)\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            //console.log(\"event create fail\");\r\n            \r\n            if(error.response){\r\n                \r\n                setModalShow(false)\r\n                toast(\"Error\",`${error.response.data.message}`)\r\n\r\n                if(error.response.status === 401){\r\n                    setModalAuth(true)\r\n                }\r\n            }\r\n            else{\r\n                setModalShow(false)\r\n                toast(\"Error\",\"Cannot connect to the server\")\r\n            }\r\n        })\r\n    }\r\n    function getPassData(eventName){\r\n        const req = axios.get(baseURL+\"/findEventPlaintextPass\",\r\n        {\r\n            headers:{\r\n              Authorization: \"Bearer \"+localStorage.getItem(\"Session\")\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res) {\r\n            let pass = \"\"\r\n            for(let i in res.data){\r\n                if(res.data[i].eventName === eventName){\r\n                    pass = res.data[i].eventPass\r\n                    break;\r\n                }\r\n            }\r\n            return pass;\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n\r\n            if(error.response && error.response.status === 401){\r\n                setModalAuth(true)\r\n            }\r\n            return \"\"\r\n        })\r\n    }\r\n    //input event id, get eventdata\r\n    function getEventData(id){\r\n        const req = axios.post(baseURL+\"/findEventAdmin\",{\r\n            id: id\r\n        },\r\n        {\r\n            headers:{\r\n              Authorization: \"Bearer \"+localStorage.getItem(\"Session\")\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res) {\r\n            return res.data;\r\n        })\r\n        .catch(function (error) {\r\n            //console.log(error);\r\n            //getEventData(id)\r\n            if(error.response && error.response.status === 401){\r\n                setModalAuth(true)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    //function that uploads files.\r\n    function uploadFile(file, cat, id){\r\n        let fd = new FormData();\r\n        //console.log(file)\r\n        fd.append(\"id\", id)\r\n        fd.append(\"myFiles\", file)\r\n        setModalText(\"Processing: \"+file.name);\r\n        const req = axios.post(baseURL+\"/saveFile\",\r\n        fd, \r\n        {\r\n            headers: {\r\n                'Content-Type': false,\r\n                'processdata': false,\r\n                Authorization: \"Bearer \"+localStorage.getItem(\"Session\")\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res){\r\n            //console.log(res)\r\n            setModalText(\"Successfully sent file: \"+file.name);\r\n            return true\r\n        })\r\n        .catch(function (error){\r\n            //console.log(error);\r\n\r\n            if(error.response.status === 401){\r\n                setModalAuth(true)\r\n            }\r\n            return false\r\n        })\r\n    }\r\n\r\n    /*\r\n    {\r\n        category: kategoria,\r\n        file: tiedosto,\r\n        bound: (ei kahta eventImage paitsi muut)\r\n    }\r\n    */\r\n    async function uploadFiles(files, id){\r\n        //let i;\r\n        //console.log(\"ID on \" +id)\r\n        // for(i = 0; i < files.length; i++){\r\n        //     await uploadFile(files[i].file, \"myFiles\", id)) \r\n        // }\r\n        let retry = 0;\r\n        while(files.length > 0 && retry < 3){\r\n            if(await uploadFile(files[0].file, \"myFiles\", id)){\r\n                retry = 0\r\n                files.splice(0, 1);\r\n            }\r\n            else{\r\n                //console.log(\"Retry file\")\r\n                retry++;\r\n            }\r\n        }\r\n        if(retry >= 3){\r\n            setModalShow(false)\r\n            toast(\"Error\",\"Failed to upload a file after multiple attempts\")\r\n        }\r\n        else{\r\n            setModalShow(false)\r\n            toast(\"Success\",\"Changes were saved\")\r\n        }\r\n        //props.changeContent(\"AdminScreen\")\r\n    }\r\n    //adds file to list of files to upload\r\n    function fileToUpload(e){\r\n        let files = Files;\r\n        let file = e.target.files[0]\r\n        let category = e.target.name;\r\n        //Check if file already exists or (incase of eventImage) is already bound to input\r\n        let found = false;\r\n        let i;\r\n        for(i = 0; i < files.length; i++){\r\n            if(e.target.name === \"eventImage\" && \r\n            files[i].bound === e.target.name){\r\n                found = true;\r\n                break;\r\n            }\r\n            else if(file && files[i].file.name === file.name){\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if(found){\r\n            //console.log(\"Dup found\")\r\n            files.splice(i,1);\r\n        }\r\n        else{\r\n            //console.log(\"dup not found\")\r\n        }\r\n        files.push(\r\n            {\r\n                category: category,\r\n                file: file,\r\n                bound: e.target.name\r\n            }\r\n        );\r\n\r\n        setFiles(files)\r\n        //console.log(Files)\r\n    }\r\n\r\n    function toast(header, body){\r\n        setToastHeader(header)\r\n        setToastBody(body)\r\n        setToastShow(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"CreateEventForm\">\r\n            <Modal show={ModalShow} backdrop=\"static\" keyboard={false}>\r\n                <Modal.Header>Processing request <Spinner animation=\"border\"/></Modal.Header>\r\n                <Modal.Body>{ModalText}</Modal.Body>\r\n            </Modal>\r\n            <Modal show={ModalAuth} backdrop=\"static\" keyboard={false}>\r\n                <Modal.Header>Authentication token has expired. Please reauthenticate and try again.</Modal.Header>\r\n                <Modal.Body>\r\n                    <LoginScreen\r\n                        changeContent={()=>{}}\r\n                        visibility={setModalAuth}\r\n                        EventID={EditID}\r\n                        return={(id)=>{parseEventData(id)}}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <div>\r\n                <Row style={{marginTop:'120px'}}>\r\n                    <Col>\r\n                        {container}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <div style={{position:'fixed', top:'0', width:'100%', backgroundColor:'white', zIndex:'2'}}>\r\n                <Navbar expand=\"lg\" style={{display:'flex', paddingLeft:'50px', paddingRight:'50px', justifyContent:'center', alignItems:'center', flexDirection:'row', backgroundColor:'white'}}>\r\n                    <Button style={{flex:'1'}} className=\"otherButtons\" onClick={()=>\r\n                    {\r\n                        if(Changes){\r\n                            if(window.confirm(\"Are you sure?! Unsubmitted events are not saved!\")){\r\n                                props.changeContent(\"AdminScreen\")\r\n                            }  \r\n                        }\r\n                        else{\r\n                            props.changeContent(\"AdminScreen\")\r\n                        }\r\n                    }}>Return to Main Menu</Button>\r\n                    <div style={{display:'flex', flex:'6', alignContent: 'center', justifyContent:'center', flexDirection:'row'}}>\r\n                        <Image src=\"https://pbs.twimg.com/profile_images/572706560015470592/Jszif-0y_normal.png\" style={{marginRight:'10px'}}/>\r\n                        <Navbar.Brand><h3>{FormObjects.eventName ? `${FormObjects.eventName}`:null}</h3></Navbar.Brand>\r\n                    </div>\r\n                    <Button style={{flex:'1'}} className=\"otherButtons\" onClick={()=>createEventPost(finalForm)}>Save Changes</Button>\r\n                </Navbar>\r\n                <div style={{display: 'flex', justifyContent: 'center'}} >\r\n                    <ButtonGroup className=\"navbarButtons\" style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                        <Button name=\"GeneralForm\" onClick={selectForm} className={ActiveForm === \"GeneralForm\" ? \"active\" : \"inactive\"}>General</Button>\r\n                        <Button name=\"AboutForm\" onClick={selectForm} className={ActiveForm === \"AboutForm\" ? \"active\" : \"inactive\"}>About</Button>\r\n                        <Button name=\"ParticipantsForm\" onClick={selectForm} className={ActiveForm === \"ParticipantsForm\" ? \"active\" : \"inactive\"}>Participants</Button>\r\n                        <Button name=\"ProgrammeForm\" onClick={selectForm} className={ActiveForm === \"ProgrammeForm\" ? \"active\" : \"inactive\"}>Programme</Button>\r\n                        <Button name=\"SpeakersForm\" onClick={selectForm} className={ActiveForm === \"SpeakersForm\" ? \"active\" : \"inactive\"}>Speakers</Button>\r\n                        <Button name=\"SponsorsForm\" onClick={selectForm} className={ActiveForm === \"SponsorsForm\" ? \"active\" : \"inactive\"}>Sponsors</Button>\r\n                        <Button name=\"VenueTabForm\" onClick={selectForm} className={ActiveForm === \"VenueTabForm\" ? \"active\" : \"inactive\"}>Venue</Button>\r\n                        <Button name=\"MapMarkerForm\" onClick={selectForm} className={ActiveForm === \"MapMarkerForm\" ? \"active\" : \"inactive\"}>Map Marker</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n            </div>\r\n            \r\n            <div style={{position:\"fixed\", top:\"100px\",right:\"20px\", zIndex:'5000'}}>\r\n                <Toast onClose={()=>setToastShow(false)} show={ToastShow} delay={5000} style={{zIndex:'5'}} autohide>\r\n                    <Toast.Header className={ToastHeader === \"Success\" ? \"text-success\" : ToastHeader === \"Error\" ? \"text-danger\" : \"\"}>{ToastHeader}</Toast.Header>\r\n                    <Toast.Body>{ToastBody}</Toast.Body>\r\n                </Toast>\r\n            </div>\r\n            \r\n            {/* <div>{props.id ? <p>DebugMsg. Edit form \"{props.id}\"</p> : null}</div> */}\r\n            {/* <button name=\"AboutForm\" onClick={selectForm}>About</button>\r\n            <button name=\"ParticipantsForm\" onClick={selectForm}>Participants</button>\r\n            <button name=\"ProgrammeForm\" onClick={selectForm}>Programme</button>\r\n            <button name=\"SpeakersForm\" onClick={selectForm}>Speakers</button>\r\n            <button name=\"SponsorsForm\" onClick={selectForm}>Sponsors</button>\r\n            <button name=\"VenueTabForm\" onClick={selectForm}>VenueTab</button>\r\n            <button onClick={()=>createEventPost(finalForm)}>{props.id ? \"Edit Event\" : \"Create Event\"}</button>\r\n            <button onClick={()=>\r\n                {\r\n                    if(window.confirm(\"Are you sure?! Unsubmitted events are not saved!\")){\r\n                        props.changeContent(\"AdminScreen\")\r\n                    }  \r\n                }}>Cancel\r\n            </button> */}\r\n            \r\n            {/* <input type=\"file\" name=\"test\" encType=\"multipart/form-data\" onChange={(e)=>{\r\n                //fileToUpload(e)\r\n                uploadFile(e.target.files[0],\"test\")\r\n            }}/> */}\r\n            \r\n            {/* <p>{Changes ? \"Are Changes\" : \"No Changes\"}</p>\r\n            <p>{JSON.stringify(finalForm, null, 2)}</p>\r\n            <p>{JSON.stringify(Files,null,2)}</p> */}\r\n        </div>\r\n    )\r\n}\r\nexport default CreateEventForm\r\n\r\n/*\r\n    let formObject = {\r\n        eventPass: \"eventin passu\",\r\n            metadata: {\r\n              eventName: \"simon testi 2\",\r\n              eventImage: \"Test\"\r\n            },\r\n            about: {\r\n              eventWebUrl: \"Test\",\r\n              eventPlace: {\r\n                  name: \"Test\",\r\n                  address: \"Test\",\r\n                  phone: \"Test\",\r\n                  email: \"Test\"\r\n            },\r\n            title: \"Test\",\r\n            bodyText1: \"Test\",\r\n            bodyText2: \"Test\",\r\n            bodyText3: \"Test\",\r\n            bodyText4: \"Test\",\r\n            moreInformation: {\r\n                eventWebsite: \"Test\",\r\n                organizer: \"Test\",\r\n                email: \"Test\"\r\n            },\r\n            disclaimer1: \"Test\",\r\n            disclaimer2: \"Test\"\r\n        },\r\n        participants: [\r\n            {\r\n                Country: \"Test\",\r\n                FirstName: \"Test\",\r\n                LastName: \"Test\",\r\n                Email: \"Test\",\r\n                Phone: \"Test\",\r\n                Company: \"Test\"\r\n            }\r\n        ],\r\n        programme: [\r\n            {\r\n                \"Time\": \"Test\",\r\n                \"Location\": \"Test\",\r\n                \"Description\": \"Test\",\r\n                \"NameOfSpeaker\": \"Test\",\r\n                \"TitleOfSpeaker\": \"Test\",\r\n                \"SpecialTitleOfSpeaker\": \"Test\",\r\n                \"CompanyOfSpeaker\": \"Test\"\r\n            }\r\n        ],\r\n        speakers: [\r\n            {\r\n                \"Speaker\": \"Test\",\r\n                \"Title\": \"Test\",\r\n                \"SpecialTitle\": \"Test\",\r\n                \"Company\": \"Test\",\r\n                \"ImageID\": \"https://sahat.lamk.fi/images/speakerImages/${imageID}\"\r\n            }\r\n        ],\r\n        sponsors: [\r\n            {\r\n                \"CompanyName\": \"Test\",\r\n                \"CompanyUrl\": \"Test\",\r\n                \"ImageID\": \"Test\"\r\n            }\r\n        ]\r\n    }\r\n*/","import React, { useState, useEffect } from 'react';\r\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n// import PrivateRoute from './assets/context/PrivateRoute';\r\n// import { AuthContext } from './assets/context/Auth';\r\n// import Store from './assets/context/Store';\r\n// import { Jumbotron } from 'reactstrap';\r\n//import './App.css';\r\nimport './App.scss';\r\n// Components imports\r\n\r\n// import EventsNavi from './assets/components/eventsnavi/EventsNavi';\r\n// import EditingNavi from './assets/components/editingnavi/EditingNavi';\r\n// import InfoEdit from './assets/components/info/InfoEdit';\r\n\r\nimport LoginScreen from './assets/screens/LoginScreen'\r\nimport AdminScreen from './assets/screens/AdminScreen';\r\nimport CreateEventForm from './assets/components/CreateEventForm'\r\n\r\nconst App = () => {\r\n  const [Content, setContent] = useState(localStorage.getItem(\"Session\") ? \"AdminScreen\" : \"LoginScreen\");\r\n  const [EditID, setEditID] = useState(null)\r\n  let container;\r\n  //when EditID is set, move screen to top and render CreateScreen\r\n  useEffect(() => {\r\n    if(EditID != null){\r\n      window.scrollTo(0, 0)\r\n      setContent(\"CreateScreen\")\r\n    }\r\n  }, [EditID])\r\n  //If screen is changed to other than CreateScreen, set EditID to null\r\n  useEffect(() => {\r\n    if(Content === \"AdminScreen\" || Content === \"LoginScreen\"){\r\n      setEditID(null)\r\n    }\r\n  }, [Content])\r\n  //redundant\r\n  function setSession(input){\r\n    if(input === \"\"){\r\n      console.log(\"delete session\");\r\n      localStorage.clear();\r\n    }\r\n    else{\r\n      localStorage.setItem(\"Session\", input);\r\n    }\r\n  }\r\n  //redundant\r\n  function getSession(){\r\n    return localStorage.getItem(\"Session\");\r\n  }\r\n  // function test()\r\n  // {\r\n  //   setSession(\"token\");\r\n  //   setContent(\"AdminScreen\");\r\n  //   //props.changeSession(\"\");\r\n  // }\r\n  //console.log(\"Session: \" +getSession());\r\n  //change screen based on Content\r\n  if(Content === \"LoginScreen\"){\r\n    container = \r\n    <div>\r\n      <LoginScreen changeContent={setContent} \r\n      visibility={()=>{}}/>\r\n      {/* <button className=\"LoginScreen\" onClick={test}>Bypass</button> */}\r\n    </div>\r\n  }\r\n  if(Content === \"CreateScreen\"){\r\n    container =\r\n    <>\r\n      <CreateEventForm \r\n        changeContent={setContent} \r\n        id={EditID}\r\n      />\r\n    </>\r\n  }\r\n  else if(Content === \"AdminScreen\"){\r\n    container = \r\n      <AdminScreen \r\n        changeContent={setContent} \r\n        readSession={getSession} \r\n        changeSession={setSession}\r\n        changeID={setEditID}\r\n      />\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      {container}\r\n      {/* <button style={{position:'fixed', left:'0', bottom:'0'}} onClick={()=>{localStorage.setItem(\"Session\", \"\");}}>TEST: Clear Token</button> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n// const [authTokens, setAuthTokens] = useState();\r\n// const setTokens = (data) => {\r\n//   localStorage.setItem(\"tokens\", JSON.stringify(data));\r\n//   setAuthTokens(data);\r\n// }\r\n\r\n    \r\n// <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\r\n//   <Router>\r\n    //     <div>\r\n    //     <Jumbotron>\r\n    //       <Route exact path=\"/\" component={Login} />\r\n    //         <Switch>\r\n    //           <Store>\r\n    //             <PrivateRoute path=\"/eventsnavi\" component={EventsNavi} />\r\n    //             <PrivateRoute path=\"/editingnavi\" component={EditingNavi} />\r\n    //           </Store>\r\n    //         </Switch>\r\n    //     </Jumbotron>\r\n    //     </div>\r\n    //   </Router>\r\n    // </AuthContext.Provider>","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nrender(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}