{"version":3,"sources":["assets/constant/constants.js","assets/screens/LoginScreen.js","assets/components/Event.js","assets/components/AddButton.jsx","assets/screens/AdminScreen.js","assets/components/AboutCard.jsx","assets/components/AboutForm.js","assets/components/XlsxConverter.js","assets/components/DeleteButton.jsx","assets/components/ParticipantsCard.jsx","assets/components/ParticipantsForm.js","assets/components/ProgrammeCard.js","assets/components/ProgrammeForm.js","assets/components/SpeakerCard.jsx","assets/components/SpeakersForm.js","assets/components/SponsorCard.jsx","assets/components/SponsorsForm.js","assets/components/VenueCard.jsx","assets/components/VenueTabForm.js","assets/components/MapMarkerCard.jsx","assets/components/MapMakerForm.js","assets/components/GeneralCard.jsx","assets/components/CreateEventForm.js","App.js","serviceWorker.js","index.js"],"names":["LoginScreen","props","useState","form","setForm","localStorage","setItem","Details","setDetails","baseURL","Constants","canLogin","updateField","e","target","name","value","Container","Row","Col","style","display","flexDirection","justifyContent","alignItems","Card","className","autoComplete","Group","Label","Control","type","onChange","Text","Button","onClick","a","async","preventDefault","axios","post","un","pw","then","response","visibility","data","token","changeContent","return","EventID","catch","error","toString","includes","Event","imgsrc","clickHandler","window","confirm","delet","id","edit","img","width","backgroundColor","Img","variant","src","border","color","Body","Title","Link","href","DeleteButton","AdminScreen","LoginVisibility","setLoginVisibility","EventList","setEventList","EventObject","setEventObject","Search","findMetadata","req","get","headers","Authorization","readSession","res","console","log","findEvent","eventId","deleteEvent","pageLoad","useEffect","listObjects","slice","reverse","map","item","index","metadata","eventName","key","_id","colorScheme","nid","changeID","eventImage","scrollTo","AboutModal","setAboutModal","Modal","show","onHide","Header","closeButton","Footer","position","left","Image","right","changeSession","alignContent","result","length","alignSelf","justifySelf","cont","sess","location","reload","AboutCard","FormLabel","FormGroup","FormControl","as","size","defaultValue","bodyText1","bodyText2","bodyText3","bodyText4","placeName","placeAddress","placeEmail","OverlayTrigger","placement","delay","hide","overlay","Tooltip","placePhone","MiWebsite","MiOrg","MiEmail","disclaimer1","disclaimer2","AboutForm","editForm","FO","xlsxToJson","f","Promise","file","files","reader","FileReader","onload","xlsxBin","xlsx","read","wsName","SheetNames","ws","Sheets","jsonData","utils","sheet_to_json","header","check","i","splice","readAsBinaryString","SponsorCard","formObject","changeHandler","ImageID","ID","FirstName","LastName","Email","Phone","Company","Country","ParticipantsForm","subForm","Form","dataContainer","setSearch","cardHandler","forceCheck","height","fileToUpload","flex","htmlFor","push","document","getElementById","reset","download","marginRight","marginLeft","flexWrap","marginBottom","InputGroup","borderRadius","padding","onKeyDown","keyCode","parentNode","childNodes","currentTarget","ProgrammeCard","PdfIconElement","match","Pdf","counter","day","NameOfSpeaker","TitleOfSpeaker","SpecialTitleOfSpeaker","CompanyOfSpeaker","Time","Location","rows","Description","fileHandler","ProgrammeForm","FormToData","Data","setData","ActiveDay","setActiveDay","dataToForm","found","content","fix","newForm","replace","j","clickEmpty","getHighestDay","parseInt","dayHandler","highest","loop","dayButtons","takenDays","disabled","list","min","placeholder","ButtonGroup","vertical","marginTop","SpeakerCard","speakerImgsrc","Speaker","SpecialTitle","fluid","roundedCircle","URL","createObjectURL","changeImage","SpeakersForm","EditID","sponsorImgsrc","CompanyName","CompanyUrl","SponsorsForm","VenueCard","image","venueImgsrc","title","VenueTabForm","MapMarkerCard","markerImgsrc","formElement","ErrorMsg","setErrorMsg","markerType","description","category","sm","rating","webURL","address","FormText","query","apiurl","lat","lon","long","MapMarkerForm","restaurants","hotels","others","formToData","ActiveCat","setActiveCat","catHandler","newObj","destination","GeneralCard","generalImgsrc","eventPass","latlongForm","maxLength","eventColor","Check","label","checked","onError","CreateEventForm","container","ActiveForm","setActiveForm","setEditID","Files","setFiles","ToastShow","setToastShow","ToastHeader","setToastHeader","ToastBody","setToastBody","ModalShow","setModalShow","ModalText","setModalText","ModalAuth","setModalAuth","Changes","setChanges","eventWebUrl","eventTitle","participants","programme","speakers","sponsors","mapmarkers","venue","bodyText","disclaimer","FormObjects","setFormObjects","parseEventData","getEventData","getPassData","pass","about","eventPlace","phone","email","moreInformation","eventWebsite","organizer","mapData","selectForm","appendForm","bodyTexts","disclaimers","finalForm","createEventPost","route","adminToken","getItem","toast","retry","uploadFile","uploadFiles","message","status","cat","fd","FormData","append","bound","body","backdrop","keyboard","Spinner","animation","top","zIndex","Navbar","expand","paddingLeft","paddingRight","Brand","Toast","onClose","autohide","JSON","stringify","App","Content","setContent","setSession","input","clear","bottom","Boolean","hostname","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7319040f.chunk.js","sourcesContent":["export default {\r\n    baseURL: \"https://sahat.lamk.fi\"\r\n}","import React, {useState} from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport axios from 'axios';\r\n\r\nimport Constants from '../constant/constants'\r\n/**\r\n * @param changeContent - changes screen\r\n * @param visibility    - changes visibility in AdminScreen\r\n */\r\nconst LoginScreen = (props) => {\r\n    const [form, setForm] = useState({});\r\n    localStorage.setItem(\"Form\", form);\r\n    const [Details, setDetails] = useState(\"\")\r\n    const baseURL = Constants.baseURL;\r\n    //let session = localStorage.getItem(\"Session\");\r\n    let canLogin = true;\r\n\r\n    // if(session !== null){\r\n    //     //console.log(\"Session in progress, initiate automatic login\");\r\n    //     props.changeContent(\"AdminScreen\");\r\n    // }\r\n    // else{\r\n    //     //console.log(\"normal login\");\r\n    // }\r\n    const updateField = e => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    async function clickHandler(e)\r\n    {\r\n        if(canLogin){\r\n            e.preventDefault();\r\n            if('un' in form && 'pw' in form){\r\n                canLogin = false;\r\n                setDetails(\"Processing ...\"); //\r\n                //username and password set\r\n                await axios.post(baseURL+'/adminLogin',{\r\n                    \"username\": form.un, // SahaAdmin1\r\n                    \"password\": form.pw // SahaPäälikkö1\r\n                })\r\n                .then(function (response) {\r\n                    // handle success\r\n                    canLogin = true;\r\n                    setDetails(\"Success\");\r\n                    //console.log(\"admin login success\");\r\n                    //console.log(response);\r\n                    //console.log(\"admin token:\");\r\n                    //console.log(response.data);\r\n                    props.visibility(false);\r\n                    //props.changeSession(response.data.token);\r\n                    localStorage.setItem(\"Session\", response.data.token);\r\n                    props.changeContent(\"AdminScreen\");\r\n\r\n                    props.return(props.EventID)\r\n                })\r\n                .catch(function (error) {\r\n                    // handle error\r\n                    canLogin = true;\r\n                    //props.visibility(false);\r\n                    //console.log(\"admin login fail\");\r\n                    //console.log(error);\r\n                    if(error.toString().includes(\"401\")){\r\n                        //console.log(\"Login incorrect\");\r\n                        setDetails(\"Incorrect username and/or password\");\r\n                    }\r\n                })\r\n                canLogin = true;\r\n            }\r\n            else{\r\n                //either username or password fields are empty\r\n                setDetails(\"Please input username and password\");\r\n            }\r\n        }\r\n    }\r\n    // function test()\r\n    // {\r\n    //     props.changeSession(\"token\");\r\n    //     props.changeContent(\"AdminScreen\");\r\n    //     //props.changeSession(\"\");\r\n    // }\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col style={{display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems: 'center'}}>\r\n                    <Card>\r\n                        <Form className=\"LoginScreen\" autoComplete=\"off\">\r\n                            <Form.Group>\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"un\" onChange={updateField}/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" name=\"pw\" onChange={updateField}/>\r\n                                <Form.Text className=\"text-danger\">{Details}</Form.Text>\r\n                            </Form.Group>\r\n                            <Button onClick={clickHandler}>Login</Button>              \r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React from 'react'\r\n\r\nimport Card from 'react-bootstrap/Card'\r\n/**\r\n * \r\n * @param id - eventin ID\r\n * @param name - eventin nimi\r\n * @param delet - evokes deleteEvent\r\n * @param img - image name\r\n */\r\nconst Event = (props) => {\r\n    let baseURL = \"https://sahat.lamk.fi\"\r\n    let imgsrc;\r\n\r\n    if(props.img.includes(\"https\")){\r\n        imgsrc = props.img\r\n    }\r\n    else{\r\n        imgsrc = baseURL+`/public/${props.id}/${props.img}`\r\n    }\r\n    //console.log(props.name, imgsrc)\r\n    async function clickHandler(e){\r\n\r\n        if(e.target.name === \"delete\"){\r\n            if(window.confirm(`Are you sure you want to delete event \"${props.name}\"?`)){\r\n                props.delet(props.id)\r\n                //console.log(\"Deleted event\")\r\n            }            \r\n        }\r\n        else if(e.target.name === \"edit\"){\r\n            //console.log(\"Event.js\")\r\n            props.edit(props.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: '18rem', backgroundColor:`${props.visibility === \"visible\" ? \"white\" : \"#e0e0e0\"}` }}>\r\n            {props.img ? <Card.Img className=\"rounded mb-0\" variant=\"top\" src={imgsrc} style={{border:`5px solid ${props.color}`}}/> : null}\r\n            <Card.Body>\r\n                <Card.Title>{props.name}</Card.Title>\r\n                {/* <Card.Subtitle>ID: {props.id}</Card.Subtitle> */}\r\n                <Card.Link href=\"#\" name=\"edit\" className=\"text-secondary\" onClick={clickHandler}>Edit</Card.Link>\r\n                <Card.Link href=\"#\" name=\"delete\" className=\"text-danger\" onClick={clickHandler}>Delete</Card.Link>\r\n            </Card.Body>\r\n            {/* <button name=\"edit\" onClick={clickHandler}>Edit</button><br/>\r\n            <button name=\"delete\" onClick={clickHandler}>Delete</button> */}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Event\r\n","import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport './AddButton.css';\r\n\r\nconst DeleteButton = props => {\r\n  return (\r\n      <Button className=\"addButton\" id={props.id} name={props.name} onClick={props.onClick} style={props.style}>\r\n        <div className=\"addButtonTextContainer\">\r\n          <p className=\"addButtonText\" id={props.id} name={props.name}>+</p>\r\n        </div>\r\n      </Button>\r\n  )\r\n}\r\n\r\nexport default DeleteButton;","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios';\r\n\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport Event from '../components/Event'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n//import Navbar from 'react-bootstrap/Navbar'\r\n//import Nav from 'react-bootstrap/Nav'\r\n\r\nimport Image from 'react-bootstrap/Image'\r\n//import FormControl from 'react-bootstrap/FormControl'\r\n//import Form from 'react-bootstrap/Form'\r\n\r\nimport AddButton from '../components/AddButton'\r\nimport { Modal, Card } from 'react-bootstrap';\r\nimport Constants from '../constant/constants'\r\n/**\r\n * @param changeContent - changes screen\r\n * @param changeSession - changes session (as localstorage)\r\n * @param getSession    - gets current session (from localstorage)\r\n */\r\nconst AdminScreen = (props) => {\r\n    const [LoginVisibility, setLoginVisibility] = useState(false);\r\n    const baseURL = Constants.baseURL;\r\n    const [EventList, setEventList] = useState([]);\r\n    const [EventObject, setEventObject] = useState([])\r\n    const [Search, setSearch] = useState(\"\") // eslint-disable-line\r\n    let eventList;\r\n    if(props.readSession() === null){\r\n        console.log(\"Never should have come here.\");\r\n        props.changeContent(\"LoginScreen\");\r\n    }\r\n\r\n    async function clickHandler(e){\r\n        //console.log(e.target.id);\r\n\r\n        if(e.target.id === \"0\"){\r\n            setEventList(await findMetadata())\r\n        }\r\n        else if(e.target.id === \"1\"){\r\n            setLoginVisibility(true);\r\n        }\r\n        else if(e.target.id === \"2\"){\r\n            //console.log(props.readSession());\r\n            props.changeContent(\"AdminScreen\");\r\n        }\r\n        else if(e.target.id === \"3\"){\r\n            //console.log(\"Session is \" + props.readSession())\r\n            await axios.post(baseURL+\"/findEvent\",{\r\n                id: \"5e8dfbce0482b55473e7988b\"\r\n              },\r\n              {\r\n                headers:{\r\n                  Authorization: \"Bearer \"+props.readSession()\r\n                }\r\n                \r\n              })\r\n            .then(function (res) {\r\n                // handle success\r\n                //console.log(res.data);\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                //console.log(error);\r\n            })\r\n        }\r\n        else if(e.target.id === \"5\"){\r\n            const data = findMetadata();\r\n            data.then(function(result){\r\n                //console.log(result);\r\n            })\r\n            .catch(function (error) {\r\n                //console.log(error)\r\n            })\r\n        }\r\n        else if(e.target.id === \"6\"){\r\n            const data = findEvent(\"5e8dfbce0482b55473e7988b\");\r\n            data.then(function(result){\r\n                //console.log(result);\r\n            })\r\n            .catch(function (error) {\r\n                //console.log(error)\r\n            })\r\n        }\r\n        else if(e.target.id === \"7\"){\r\n            //console.log(\"adminscreen button\")\r\n            await props.changeID(null)\r\n            await props.changeContent(\"CreateScreen\")\r\n        }\r\n        else if (e.target.id === \"8\"){\r\n            //console.log(await findEvent(\"5ed4dfe73b77001e6faae67b\"))\r\n        }\r\n    }\r\n\r\n    async function findMetadata() {\r\n        const req = axios.get(baseURL+\"/findEventsAdmin\", {\r\n            headers:{\r\n              Authorization: \"Bearer \"+props.readSession()\r\n            }\r\n        })\r\n        return req\r\n            .then(function (res) {\r\n            eventList = (res.data);\r\n            return eventList;\r\n            })\r\n            .catch(function (error) {\r\n            //console.log(error);\r\n            setLoginVisibility(true)\r\n            return []\r\n            })\r\n    }\r\n    \r\n    const findEvent = function(eventId) {\r\n        const req = axios.post(baseURL+\"/findEvent\",{\r\n            id: eventId\r\n        },\r\n        {\r\n            headers:{\r\n              Authorization: \"Bearer \"+props.readSession()\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res) {\r\n            return res.data;\r\n        })\r\n        .catch(function (error) {\r\n            //console.log(error);\r\n        })\r\n    }\r\n\r\n    //Siirretään update formiin kun sellainen tehdään\r\n    // const updateEvent = function(form) {\r\n\r\n    //     axios.post(baseURL+\"/updateEvent\",{\r\n    //         form\r\n    //       },\r\n    //       {\r\n    //         headers:{\r\n    //           Authorization: \"Bearer \"+props.readSession()\r\n    //         }\r\n    //       })\r\n    //     .then(function (res) {\r\n    //         return res.data;\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.log(error);\r\n    //     })\r\n    // }\r\n\r\n    const deleteEvent = function(eventId) {\r\n        const req = axios.post(baseURL+\"/deleteEvent\",{\r\n            id: eventId\r\n        },\r\n        {\r\n            headers:{\r\n              Authorization: \"Bearer \"+props.readSession()\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res) {\r\n            pageLoad()\r\n            return res.data;\r\n        })\r\n        .catch(function (error) {\r\n            //console.log(error);\r\n            setLoginVisibility(true)\r\n            setEventList([])\r\n        })\r\n    }\r\n\r\n    //EventList creation\r\n    useEffect(() => { //filter metadata based on Search state\r\n        let listObjects = EventList.slice(0).reverse().map((item, index)=>{\r\n            //console.log(item.metadata.eventName)\r\n            if(item.metadata.eventName.includes(Search)){\r\n\r\n                // return <DropdownButton key={index} id=\"dropdown-basic-button\" title={item.metadata.eventName} variant=\"outline-success\">\r\n                //     <Event name={item.metadata.eventName} id={item._id} delet={deleteEvent} edit={(nid)=>{props.changeID(nid); console.log(\"Screen\")}}/>\r\n                // </DropdownButton>\r\n                //console.log(item.metadata.eventImage)\r\n                return <div key={index}>\r\n                        <Event name={item.metadata.eventName} \r\n                            id={item._id}\r\n                            color={item.metadata.colorScheme}\r\n                            visibility={item.metadata.visibility}\r\n                            delet={deleteEvent}\r\n                            edit={(nid)=>{props.changeID(nid)}}\r\n                            img={item.metadata.eventImage}/>\r\n                </div> \r\n            }\r\n            else{\r\n                return null\r\n            }\r\n        })\r\n        setEventObject(listObjects)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [EventList])\r\n\r\n    // async function test(){\r\n    //     setEventList(await findMetadata())\r\n    // }\r\n    async function pageLoad(){\r\n        //console.log(\"Page load\")\r\n        setEventList(await findMetadata())\r\n    }\r\n    useEffect(() => {\r\n        pageLoad()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [Search])\r\n    useEffect(() => {\r\n        //console.log(\"Admin Screen loaded\")\r\n        pageLoad()\r\n        window.scrollTo(0, 0)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const [AboutModal, setAboutModal] = useState(false) // eslint-disable-line\r\n\r\n    return (\r\n        <>\r\n        <Modal show={AboutModal} onHide={()=>{setAboutModal(false)}}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>About this software</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>Made by Simo Wesa, Pauli Sairanen and Mikael Petrow \r\n                    at LAB University of Applied Sciences, \r\n                    in cooperation with Finnish Sawmills Association.</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={()=>{setAboutModal(false)}} variant=\"primary\">Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        <div style={{display:'flex', flexDirection:'row', justifyContent:'center', alignItems:'center'}}>\r\n            <Button onClick={()=>{setAboutModal(true)}} style={{position:'absolute',left:'30px'}} variant=\"outline-success\">About</Button>\r\n            <Image src=\"https://sahateollisuus.com/wp-content/uploads/2019/03/st_www_logoetu.jpg\" width='30%'/>\r\n            <Button style={{position:'absolute',right:'30px'}} variant=\"outline-success\" onClick={()=>{\r\n                props.changeSession(\"\");\r\n                props.changeContent(\"LoginScreen\");\r\n            }}>Logout</Button>\r\n        </div>\r\n\r\n        {/* <div id=\"Toolbar\">\r\n            <div id=\"Toolbar-tools\">\r\n                <button className=\"ToolButton\" id=\"1\" onClick={clickHandler}>Reauth test</button>\r\n                <button className=\"ToolButton\" id=\"2\" onClick={clickHandler}>Test 2</button>\r\n                <button className=\"ToolButton\" id=\"3\" onClick={clickHandler}>Test 3</button>\r\n                <button className=\"ToolButton\" id=\"4\" onClick={clickHandler}>Test 4</button>\r\n                <button className=\"ToolButton\" id=\"5\" onClick={clickHandler}>Test 5</button>\r\n                <button className=\"ToolButton\" id=\"6\" onClick={clickHandler}>Test 6</button>\r\n                <button className=\"ToolButton\" id=\"8\" onClick={clickHandler}>Test 8</button>\r\n            </div>\r\n        </div> */}\r\n        <div style={{display: 'flex', flexDirection:'column', justifyContent:'center', alignContent: 'center'}}>\r\n            <AddButton id=\"7\" onClick={(e) => clickHandler(e)}/>\r\n            {EventObject.length > 0 ? EventObject : <p style={{alignSelf:'center', justifySelf:'center'}}>Cannot connect to the server</p>}\r\n        </div>\r\n        {LoginVisibility ? \r\n            <Card id=\"ReAuth\" style={{display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                <p id=\"ReAuthText\">Authecation token invalid. Please reauthenticate</p>\r\n                <LoginScreen \r\n                changeContent={(cont) => {props.changeContent(cont)}}\r\n                readSession={() => {props.readSession()}} \r\n                changeSession={(sess) => {props.changeSession(sess)}}\r\n                visibility={setLoginVisibility}\r\n                return={()=>{window.location.reload()}}/>\r\n            </Card> : null}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport './AboutCard.css';\r\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap'\r\n\r\nconst AboutCard = props => {\r\n  let form = props.form\r\n  \r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    form = props.form\r\n  })\r\n  // function changeHandler(e){\r\n  //   let data = props.data;\r\n  //   data = data.slice(0).reverse()\r\n  //   data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n  //   data = data.slice(0).reverse()\r\n  //   props.editForm(data)\r\n  // }\r\n\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    <Form onChange={(e)=> props.onChange(e)}>\r\n      <Card>\r\n        <div className=\"bigDiv\">\r\n          <FormLabel>Welcome Text</FormLabel>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Chapter 1</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"bodyText1\" defaultValue={form.bodyText1}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Chapter 2</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"bodyText2\" defaultValue={form.bodyText2}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Chapter 3</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"bodyText3\" defaultValue={form.bodyText3}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Chapter 4</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"bodyText4\" defaultValue={form.bodyText4}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <div className=\"bigDiv\">\r\n          <FormLabel>Venue Information</FormLabel>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Name of the Venue</FormLabel>\r\n                <FormControl size=\"sm\" name=\"placeName\" defaultValue={form.placeName}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Address of the Venue</FormLabel>\r\n                <FormControl size=\"sm\" name=\"placeAddress\" defaultValue={form.placeAddress}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Email of the Venue</FormLabel>\r\n                <FormControl size=\"sm\" name=\"placeEmail\" defaultValue={form.placeEmail}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Phone of the Venue</FormLabel>\r\n                <OverlayTrigger \r\n                placement=\"bottom\" \r\n                delay={{show: 250, hide: 250}}\r\n                overlay={<Tooltip>Include area code. Example: \"+358 12345678\"</Tooltip>}\r\n                >\r\n                <FormControl size=\"sm\" name=\"placePhone\" defaultValue={form.placePhone}></FormControl>\r\n                </OverlayTrigger>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <div className=\"bigDiv\">\r\n          <FormLabel>More Information</FormLabel>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Event Website</FormLabel>\r\n                <FormControl size=\"sm\" name=\"MiWebsite\" defaultValue={form.MiWebsite}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Event Organizer</FormLabel>\r\n                <FormControl size=\"sm\" name=\"MiOrg\" defaultValue={form.MiOrg}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Email of the Organizer</FormLabel>\r\n                <FormControl size=\"sm\" name=\"MiEmail\" defaultValue={form.MiEmail}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <div className=\"bigDiv\">\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Disclaimers</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"disclaimer1\" defaultValue={form.disclaimer1}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"disclaimer2\" defaultValue={form.disclaimer2}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default AboutCard;","import React from 'react'\r\n// import Card from 'react-bootstrap/Card'\r\n//import BsForm from 'react-bootstrap/Form'\r\n// import Col from 'react-bootstrap/Col'\r\n// import Button from 'react-bootstrap/Button'\r\nimport AboutCard from '../components/AboutCard'\r\n/**\r\n * @param editForm - evoke changehandler\r\n * @param appendForm - evoke appendForm\r\n * @param bodytexts - bodytexts from formobjects\r\n * @param disclaimers - disclaimers from formobjects\r\n * @param FO - formobjects\r\n * @param fileToUpload - evoke fileToUpload\r\n */\r\nconst AboutForm = (props) => {\r\n    // const [Form, setForm] = useState(props.bodyTexts ? props.bodyTexts : [])\r\n    // const [Form2, setForm2] = useState(props.disclaimers ? props.disclaimers : [])\r\n    // const [Fields, setFields] = useState(createFields)\r\n    // const [Fields2, setFields2] = useState(createFields2)\r\n\r\n    //renders bodytexts\r\n    // function createFields(){\r\n    //     if(Form){\r\n    //         let list = Form.map((items,index)=>{\r\n    //             return (\r\n    //             <div key={index} id={'ta'+index}>\r\n    //                 <BsForm.Control as=\"textarea\" rows=\"3\" defaultValue={items} name={index} onChange={changeHandler}/>\r\n    //                 {/* <textarea defaultValue={items} name={index} onChange={changeHandler}/> */}\r\n    //                 {/* <button id={'rem'+index} name={index} onClick={remHandler}>-</button> //disabled until I can figure this out */}\r\n    //             </div>\r\n    //             )\r\n    //         })\r\n    //         return list;\r\n    //     }\r\n    // }\r\n    // function changeHandler(e){\r\n    //     //console.log(Form)\r\n    //     let temp = Form;\r\n    //     temp[e.target.name] = e.target.value;\r\n    //     setForm(temp)\r\n    // }\r\n    // function remHandler(e){\r\n        \r\n    // }\r\n    // function clickHandler(e){\r\n    //     let temp = Form;\r\n    //     temp.push(\"\")\r\n    //     setFields(createFields)\r\n    // }\r\n    //Redundant code below, \r\n    //changes disclaimers\r\n    // function createFields2(){\r\n    //     if(Form2){\r\n    //         let list = Form2.map((items,index)=>{\r\n    //             return (\r\n    //             <div key={index} id={'dis'+index}>\r\n    //                 <BsForm.Control as=\"textarea\" rows=\"3\" defaultValue={items} name={index} onChange={changeHandler2}/>\r\n    //                 {/* <textarea defaultValue={items} name={index} onChange={changeHandler2}/> */}\r\n    //                 {/* <button id={'rem'+index} name={index} onClick={remHandler}>-</button> //disabled until I can figure this out */}\r\n    //             </div>\r\n    //             )\r\n    //         })\r\n    //         return list;\r\n    //     }\r\n    // }\r\n    // function changeHandler2(e){\r\n    //     //console.log(Form2)\r\n    //     let temp = Form2;\r\n    //     temp[e.target.name] = e.target.value;\r\n    //     setForm2(temp)\r\n    // }\r\n    // function remHandler2(e){\r\n        \r\n    // }\r\n    // function clickHandler2(e){\r\n    //     let temp = Form2;\r\n    //     temp.push(\"\")\r\n    //     setFields2(createFields2)\r\n    // }\r\n    return(\r\n        // <div>\r\n        // <form onChange={props.editForm} autoComplete=\"off\" id=\"abtform\">\r\n        //     <input type=\"text\" name=\"eventPass\" placeholder=\"Event Password\" defaultValue={props.FO.eventPass}/>\r\n        //     <input type=\"text\" name=\"eventName\" placeholder=\"Event Name\" defaultValue={props.FO.eventName}/>\r\n        //     <input type=\"text\" name=\"visibility\" placeholder=\"Event Status(visible/hidden)\" defaultValue={props.FO.visibility}/>\r\n        //     <input type=\"text\" name=\"eventWebUrl\" placeholder=\"Event URL\" defaultValue={props.FO.eventWebUrl}/>\r\n        //     <input type=\"text\" name=\"placeName\" placeholder=\"Place Name\" defaultValue={props.FO.placeName}/>\r\n        //     <input type=\"text\" name=\"placeAddress\" placeholder=\"Place Address\" defaultValue={props.FO.placeAddress}/>\r\n        //     <input type=\"text\" name=\"placePhone\" placeholder=\"Place Phone\" defaultValue={props.FO.placePhone}/>\r\n        //     <input type=\"text\" name=\"placeEmail\" placeholder=\"Place Email\" defaultValue={props.FO.placeEmail}/>\r\n        //     <input type=\"text\" name=\"eventTitle\" placeholder=\"Event Title\" defaultValue={props.FO.eventTitle}/>\r\n        //     <input type=\"text\" name=\"MiWebsite\" placeholder=\"More info Website\" defaultValue={props.FO.MiWebsite}/>\r\n        //     <input type=\"text\" name=\"MiOrg\" placeholder=\"More info Organizer\" defaultValue={props.FO.MiOrg}/>\r\n        //     <input type=\"text\" name=\"MiEmail\" placeholder=\"More info Email\" defaultValue={props.FO.MiEmail}/>\r\n        //     <label>Event Image</label>\r\n        //     <input type=\"file\" id=\"test\" name=\"test\" onChange={(e)=>{\r\n        //         //props.appendForm(\"eventImage\", `https://sahat.lamk.fi/images/metadataImages/${e.target.files[0].name}`)\r\n        //         props.fileToUpload(e)\r\n        //     }}/>\r\n        // </form>\r\n        // {Fields}\r\n        // <button onClick={clickHandler}>Add BodyText</button>\r\n        // {Fields2}\r\n        // <button onClick={clickHandler2}>Add Disclaimer</button>\r\n        // </div>\r\n\r\n        // <Card>\r\n        //     <BsForm onChange={props.editForm} style={{padding: '30px'}}>\r\n        //         <BsForm.Row>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Event Password</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"eventPass\" defaultValue={props.FO.eventPass} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Event Name</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"eventName\" defaultValue={props.FO.eventName} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Title</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"eventTitle\" defaultValue={props.FO.eventTitle} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 {/* <BsForm.Label>Event visibility(visible/hidden)</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"visibility\" defaultValue={props.FO.visibility} /> */}\r\n        //                 <BsForm.Label>Event visiblity</BsForm.Label>\r\n        //                 <BsForm.Check type={'radio'} name=\"visibility\" label={'visible'} value=\"visible\" defaultChecked={props.FO.visibility == \"visible\" ? true : false}/> {/*eslint-disable-line*/}\r\n        //                 <BsForm.Check type={'radio'} name=\"visibility\" label={'hidden'} value=\"hidden\" defaultChecked={props.FO.visibility == \"hidden\" ? true : false}/> {/*eslint-disable-line*/}\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Event WebURL</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"eventWebUrl\" defaultValue={props.FO.eventWebUrl} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Event Image</BsForm.Label>\r\n        //                 <BsForm.Control type=\"file\" id=\"test\" name=\"eventImage\" onChange={(e)=>{\r\n        //                     //props.appendForm(\"eventImage\", `https://sahat.lamk.fi/images/metadataImages/${e.target.files[0].name}`)\r\n        //                     props.fileToUpload(e)\r\n        //                 }} />\r\n        //                 <BsForm.Label>{props.FO.eventImage ? \"Selected image: \"+ props.FO.eventImage : null}</BsForm.Label>\r\n\r\n        //             </BsForm.Group>\r\n        //         </BsForm.Row>\r\n\r\n\r\n        //         <BsForm.Row>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Name</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"placeName\" defaultValue={props.FO.placeName} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Address</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"placeAddress\" defaultValue={props.FO.placeAddress} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Phone</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"placePhone\" defaultValue={props.FO.placePhone} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Email</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"placeEmail\" defaultValue={props.FO.placeEmail} />\r\n        //             </BsForm.Group>\r\n        //         </BsForm.Row>\r\n        //         <BsForm.Row>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>More Info Website</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"MiWebsite\" defaultValue={props.FO.MiWebsite} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>More Info Organizer</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"MiOrg\" defaultValue={props.FO.MiOrg} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>More Info Email</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"MiEmail\" defaultValue={props.FO.MiEmail} />\r\n        //             </BsForm.Group>\r\n        //         </BsForm.Row>\r\n\r\n        //         <BsForm.Row>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>BodyText</BsForm.Label>\r\n        //                 {Fields}\r\n        //                 <Button onClick={clickHandler}>Add Bodytext</Button>\r\n        //             </BsForm.Group>\r\n\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Disclaimer</BsForm.Label>\r\n        //                 {Fields2}\r\n        //                 <Button onClick={clickHandler2}>Add Disclaimer</Button>\r\n        //             </BsForm.Group>\r\n        //         </BsForm.Row>\r\n        //     </BsForm>\r\n        // </Card>\r\n\r\n        <AboutCard onChange={(e)=>{props.editForm(e)}} form={props.FO}/>\r\n    )\r\n}\r\n\r\nexport default AboutForm","import xlsx from 'xlsx'\r\n/**\r\n * @param f - e.target\r\n */\r\nexport default function xlsxToJson(f){\r\n    return new Promise((res)=>{\r\n        //console.log(f.files[0])\r\n        let file = f.files[0]\r\n        if(file && file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"){\r\n            let reader = new FileReader();\r\n            reader.onload = function(e){\r\n                let data = e.target.result;\r\n                let xlsxBin = xlsx.read(data, {type:'binary'});\r\n                const wsName = xlsxBin.SheetNames[0]\r\n                const ws = xlsxBin.Sheets[wsName];\r\n\r\n                const jsonData = xlsx.utils.sheet_to_json(ws,{header:1});\r\n                console.log(jsonData)\r\n                let check = true\r\n                while(check && jsonData.length > 0){\r\n                    for(let i in jsonData){\r\n                        if(!jsonData[i].length > 0){\r\n                            jsonData.splice(i,1)\r\n                            check = true;\r\n                            break;\r\n                        }\r\n                        else{\r\n                            check = false;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                res(jsonData)\r\n            };\r\n            reader.readAsBinaryString(file)\r\n        }\r\n        else{\r\n            console.log(\"invalid file input\")\r\n           res(null)\r\n        }\r\n    })\r\n    \r\n}","import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport './DeleteButton.css';\r\n\r\nconst DeleteButton = props => {\r\n  return (\r\n      <Button id={props.id} name={props.name} className=\"deleteButton\" onClick={props.onClick} style={props.style}>\r\n        <div className=\"deleteButtonTextContainer\">\r\n          <p id={props.id} name={props.name}>-</p>\r\n        </div>\r\n      </Button>\r\n  )\r\n}\r\n\r\nexport default DeleteButton;","import React from 'react';\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport { useEffect } from 'react';\r\nimport DeleteButton from './DeleteButton';\r\nimport './ParticipantsCard.css';\r\n\r\nconst SponsorCard = props => {\r\n\r\n  let formObject = props.form\r\n\r\n  if(formObject.ImageID && props.ID){\r\n    formObject.imgsrc = `https://sahat.lamk.fi/public/${props.ID}/${formObject.ImageID}`\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data[props.index][e.target.name] = e.target.value;\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  return (\r\n    <Card>\r\n      <div className=\"bigDiv\">\r\n        <h6>{props.index}</h6>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>First Name</FormLabel>\r\n                <FormControl size=\"sm\" value={formObject.FirstName} onChange={(e) => {changeHandler(e)}} name=\"FirstName\"></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Last Name</FormLabel>\r\n                <FormControl size=\"sm\" value={formObject.LastName} onChange={(e) => {changeHandler(e)}} name=\"LastName\"></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Email</FormLabel>\r\n                <FormControl size=\"sm\" value={formObject.Email} onChange={(e) => {changeHandler(e)}} name=\"Email\"></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Phone</FormLabel>\r\n                <OverlayTrigger \r\n                  placement=\"bottom\" \r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Include area code. Example: \"+358 12345678\"</Tooltip>}\r\n                  >\r\n                  <FormControl size=\"sm\" value={formObject.Phone} onChange={(e) => {changeHandler(e)}} name=\"Phone\"></FormControl>\r\n                </OverlayTrigger>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Company</FormLabel>\r\n                <FormControl size=\"sm\" value={formObject.Company} onChange={(e) => {changeHandler(e)}} name=\"Company\"></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Country ISO Code</FormLabel>\r\n                <OverlayTrigger \r\n                  placement=\"bottom\" \r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Example: \"FI\", \"SE\", \"FR\"</Tooltip>}\r\n                  >\r\n                  <FormControl size=\"sm\" value={formObject.Country} onChange={(e) => {changeHandler(e)}} name=\"Country\"></FormControl>\r\n                </OverlayTrigger>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <DeleteButton onClick={deleteHandler}/>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SponsorCard;","import React, {useState, useEffect} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport xlsxToJson from '../components/XlsxConverter'\r\n//import Card from 'react-bootstrap/Card'\r\nimport AddButton from '../components/AddButton'\r\nimport ParticipantsCard from '../components/ParticipantsCard'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n//import { ButtonGroup } from 'react-bootstrap'\r\n\r\n//import FormTable from '../components/FormTable'\r\nimport LazyLoad from 'react-lazyload';\r\nimport { forceCheck } from 'react-lazyload';\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\n//import FormTable from '../components/FormTable'\r\n/*\r\nparticipants: [\r\n    {\r\n        Country: \"Test\",\r\n        FirstName: \"Test\",\r\n        LastName: \"Test\",\r\n        Email: \"Test\",\r\n        Phone: \"Test\",\r\n        Company: \"Test\"\r\n    }\r\n],\r\n*/\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n */\r\nconst ParticipantsForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n    \r\n    // function clickHandler(e){\r\n    //     e.preventDefault(); //prevents page refresh\r\n    //     let form = Form;\r\n    //     form.push({\r\n    //         Country: e.target.form[0].value,\r\n    //         FirstName: e.target.form[1].value,\r\n    //         LastName: e.target.form[2].value,\r\n    //         Email: e.target.form[3].value,\r\n    //         Phone: e.target.form[4].value,\r\n    //         Company: e.target.form[5].value\r\n    //     })\r\n    //     document.getElementById(\"form\").reset();\r\n    //     setForm(form)\r\n    //     props.editForm(\"participants\", Form)\r\n    // }\r\n    function clickEmpty(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            Country: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Email: \"\",\r\n            Phone: \"\",\r\n            Company: \"\"\r\n        })\r\n        setForm(form)\r\n        props.editForm(\"participants\", Form)\r\n    }\r\n    async function fileHandler(e){\r\n        e.preventDefault();\r\n        let jsonData = await xlsxToJson(e.target)\r\n        console.log(jsonData)\r\n        let form = []\r\n        for(let i in jsonData){\r\n            console.log(jsonData[i])\r\n            if(i > 0){\r\n                form.push(\r\n                    {\r\n                        Country: jsonData[i][0],\r\n                        FirstName: jsonData[i][1],\r\n                        LastName: jsonData[i][2],\r\n                        Email: jsonData[i][3],\r\n                        Phone: jsonData[i][4],\r\n                        Company: jsonData[i][5]\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        setForm(form)\r\n        props.editForm(\"participants\", Form)\r\n        document.getElementById(\"fileform\").reset();\r\n    }\r\n    const [Search, setSearch] = useState(\"\")\r\n    useEffect(() => {\r\n        if(Search !== \"\"){\r\n            forceCheck();\r\n        }\r\n    }, [Search])\r\n    let dataContainer;\r\n    function cardHandler(e){\r\n        // if(parseInt(Page) === Math.ceil(e.length/CardsPerPage) && Page !== \"0\"){\r\n        //     setPage((parseInt(Page)-1).toString())\r\n        // }\r\n        setForm(e)\r\n        props.editForm(\"participants\", e)\r\n    }\r\n    dataContainer = Form.slice(0).reverse().map((item, index)=>{\r\n        if((item.Company).includes(Search) || \r\n            (item.Country).includes(Search) || \r\n            (item.Email).includes(Search) || \r\n            (item.FirstName).includes(Search) || \r\n            (item.LastName).includes(Search) || \r\n            (item.Phone).includes(Search)||\r\n            Search === \"\"){\r\n            return(\r\n                <LazyLoad key={index} height={200}>\r\n                    <ParticipantsCard \r\n                        key={index} \r\n                        index={index} \r\n                        form={item} \r\n                        data={Form} \r\n                        editForm={cardHandler}\r\n                        fileToUpload={(e)=>props.fileToUpload(e)}\r\n                    />\r\n                </LazyLoad>\r\n            )\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    })\r\n    // const [Page, setPage] = useState(\"0\")\r\n    // const [CardsPerPage, setCardsPerPage] = useState(20)\r\n    // let totalPages = Math.ceil(dataContainer.length/CardsPerPage)\r\n\r\n    // let pageButtons = []\r\n    // if(totalPages > 1){\r\n    //     for(let i = 0; i < totalPages; i++){\r\n    //         pageButtons.push(\r\n    //             <Button key={i} name={i} onClick={(e)=>{setPage(e.target.name)}} disabled={Page === i.toString() ? true : false }>Page {i}</Button>\r\n    //         )\r\n    //     }\r\n    // }\r\n    // let cardContainer = dataContainer.splice(CardsPerPage*Page, CardsPerPage)\r\n\r\n    return(\r\n        <>\r\n        <div style={{display:'flex',justifyContent:'center',alignContent:'center',flexDirection:'row'}}>\r\n        <form id=\"fileform\" style={{display:'flex',flex:'1',justifyContent:'flex-end',alignContent:'center'}}>\r\n            <label htmlFor=\"hidden-input\" className=\"excelButton\">Choose Excel File</label>\r\n            <input id=\"hidden-input\" type=\"file\" className=\"hidden\" onChange={fileHandler}/>\r\n        </form>\r\n        <div style={{display:'flex',flex:'1',justifyContent:'flex-start',alignContent:'center'}}>\r\n            <a className=\"excelButton\" href='/Excel/Participants.xlsx' download>Download Excel Template</a>\r\n        </div>\r\n        </div>\r\n        <div style={\r\n            {\r\n                marginRight:'20px', marginLeft:'20px', display:'flex',justifyContent:'center', \r\n                alignItems:'center', flexDirection:'column', flexWrap:'wrap'\r\n            }}>\r\n            {/* <label>Cards per Page: </label>\r\n            <input type=\"number\" min=\"1\" defaultValue={CardsPerPage} onKeyDown={(e)=>{if(e.keyCode === 13 && e.target.value > 0){setCardsPerPage(e.target.value)}}}/>\r\n            {totalPages > 1 ? <h5>Current Page: {Page}</h5> : null}\r\n            <ButtonGroup style={{display:'flex', flexWrap:'wrap'}}>\r\n                {pageButtons}\r\n            </ButtonGroup> */}\r\n            <div style={{display:'flex', flexDirection: 'row', marginBottom:'10px', justifyContent: 'center', alignItems:'center'}}>\r\n                    <InputGroup style={{display:'flex', justifyContent:'center', alignItems:'center', borderRadius:'25px', border:'1.5px solid lightgrey', padding:'10px', marginRight: '10px'}}>\r\n                        <FormControl className=\"noActive\" onKeyDown={(e)=>{if(e.keyCode === 13) setSearch(e.target.value)}}/>\r\n                    </InputGroup>\r\n                    <Button className=\"otherButtons\" onClick={(e)=>{e.target.parentNode.parentNode.childNodes[0].value=\"\"; setSearch(\"\")}}>Clear Search</Button>\r\n                <Button className=\"otherButtons\" onClick={(e)=>{setSearch(e.currentTarget.parentNode.childNodes[0].value)}}>Search</Button>\r\n            </div>\r\n        </div>\r\n        <form autoComplete=\"off\" id=\"form\">\r\n            {/* <input type=\"text\" name=\"country\" placeholder=\"Country\"/>\r\n            <input type=\"text\" name=\"firstName\" placeholder=\"First Name\"/>\r\n            <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\"/>\r\n            <input type=\"text\" name=\"email\" placeholder=\"Email\"/>\r\n            <input type=\"text\" name=\"phone\" placeholder=\"Phone\"/>\r\n            <input type=\"text\" name=\"company\" placeholder=\"Company\"/>\r\n            <button onClick={clickHandler}>Add Participant</button> */}\r\n            <AddButton onClick={clickEmpty}/>\r\n        </form>\r\n        <div className=\"list\">\r\n            {dataContainer}\r\n            {/* {cardContainer} */}\r\n        </div>\r\n\r\n        {/* <div className=\"footer\" style={{display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center', backgroundColor:'white', position:'fixed', bottom:'0', width:'100%'}}>\r\n            <p>This software uses react-lazyload - see library-license.txt</p>\r\n        </div> */}\r\n        {/* <label>.xlsx file input</label>\r\n        <input type=\"file\" onChange={fileHandler}/> */}\r\n        {/* {Form.length > 0 ? <FormTable form={Form} setForm={setForm}/> : null} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ParticipantsForm","import React from 'react';\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\n//import {Button} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\n//import {Image} from 'react-bootstrap'\r\nimport DeleteButton from '../components/DeleteButton'\r\nimport { useEffect } from 'react';\r\nimport './ProgrammeCard.css'\r\nimport PdfIcon from '@material-ui/icons/PictureAsPdfOutlined'\r\nimport NoPdfIcon from '@material-ui/icons/NoSim'\r\n\r\nconst ProgrammeCard = props => {\r\n    let formObject = props.form\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        formObject = props.form\r\n    })\r\n    function changeHandler(e){\r\n        let data = props.data;\r\n        data = data.slice(0).reverse()\r\n        if(e.target.type === \"file\"){\r\n            data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n          }\r\n          else{\r\n            data[props.index][e.target.name] = e.target.value\r\n          }\r\n        data = data.slice(0).reverse()\r\n        props.editForm(data)\r\n    }\r\n    function deleteHandler(){\r\n        let data = props.data;\r\n        data = data.slice(0).reverse()\r\n        data.splice(props.index, 1)\r\n        data = data.slice(0).reverse()\r\n        props.editForm(data)\r\n    }\r\n    function fileHandler(e){\r\n        props.fileToUpload(e)\r\n    }\r\n\r\n    let PdfIconElement\r\n    if (props.form.Pdf){\r\n        PdfIconElement = <PdfIcon className=\"pdfIcon\" style={{color: '#ff0000'}}></PdfIcon>\r\n    }\r\n    else {\r\n        PdfIconElement = <NoPdfIcon className=\"pdfIcon\"></NoPdfIcon>\r\n    }\r\n\r\n    let counter = 0;\r\n    for(let i = 0; i < props.data.length; i++){\r\n        if(props.data[i].day === formObject.day){\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n            <div className=\"wrapper\">\r\n                <div className=\"bigDiv\">\r\n                    <Form>\r\n                        <Row>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Name of the Speaker</FormLabel>\r\n                                    <FormControl size=\"sm\" onChange={changeHandler} name=\"NameOfSpeaker\" value={formObject.NameOfSpeaker}></FormControl>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Title of the Speaker</FormLabel>\r\n                                    <FormControl size=\"sm\" onChange={changeHandler} name=\"TitleOfSpeaker\" value={formObject.TitleOfSpeaker}></FormControl>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Special Title of the Speaker</FormLabel>\r\n                                    <FormControl size=\"sm\" onChange={changeHandler} name=\"SpecialTitleOfSpeaker\" value={formObject.SpecialTitleOfSpeaker}></FormControl>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Company of the Speaker</FormLabel>\r\n                                    <FormControl size=\"sm\" onChange={changeHandler} name=\"CompanyOfSpeaker\" value={formObject.CompanyOfSpeaker}></FormControl>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {/* <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Day</FormLabel>\r\n                                    <FormControl size=\"sm\" type=\"number\" min=\"0\" name=\"day\" value={formObject.day} onChange={changeHandler}></FormControl>\r\n                                </FormGroup>\r\n                            </Col> */}\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Time</FormLabel>\r\n                                    <OverlayTrigger \r\n                                      placement=\"bottom\" \r\n                                      delay={{show: 250, hide: 250}}\r\n                                      overlay={<Tooltip>Example \"15:00-15:30\"</Tooltip>}\r\n                                      >\r\n                                    <FormControl size=\"sm\" name=\"Time\" onChange={changeHandler} value={formObject.Time}></FormControl>\r\n                                    </OverlayTrigger>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Location</FormLabel>\r\n                                    <FormControl size=\"sm\" name=\"Location\" onChange={changeHandler} value={formObject.Location}></FormControl>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Description</FormLabel>\r\n                                    <FormControl size=\"sm\" name=\"Description\" as=\"textarea\" rows=\"1\" value={formObject.Description} onChange={changeHandler}></FormControl>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"smallDiv\">\r\n                    {/* <FormGroup className=\"file\"> */}\r\n                                <FormLabel>{PdfIconElement}</FormLabel>\r\n                                <label htmlFor={\"hidden-\"+props.index} className=\"labelForHidden\" style={{width: \"111.25px\"}}>Choose PDF</label>\r\n                                <FormControl size=\"sm\" onChange={(e)=>{changeHandler(e); fileHandler(e)}} className=\"hidden\" name=\"Pdf\" type='file' id={'hidden-'+props.index}></FormControl>\r\n                    {/* </FormGroup> */}\r\n                </div>\r\n            </div>\r\n            {/* <Button className=\"deleteButton\" onClick={deleteHandler}>\r\n                <span className=\"deleteButtonText\">-</span>\r\n            </Button> */}\r\n            {counter > 1 ? <DeleteButton onClick={deleteHandler}/> : null}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ProgrammeCard;","import React, {useState, useEffect} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport xlsxToJson from '../components/XlsxConverter'\r\n\r\nimport ProgrammeCard from '../components/ProgrammeCard'\r\nimport AddButton from '../components/AddButton'\r\n//import DeleteButton from '../components/DeleteButton'\r\nimport { ButtonGroup, Button, Col, Row, Card, OverlayTrigger, Tooltip} from 'react-bootstrap' // eslint-disable-line\r\n//import { colors } from '@material-ui/core'\r\n//import BsForm from 'react-bootstrap/Form'\r\n/*Esim\r\n[\r\n    {\r\n        \"day\": \"Day 0\",\r\n        \"content\": [\r\n            {\r\n                Time: \"\",\r\n                Location: \"\",\r\n                Description: \"\",\r\n                NameOfSpeaker: \"\",\r\n                TitleOfSpeaker: \"\",\r\n                SpecialTitleOfSpeaker: \"\",\r\n                CompanyOfSpeaker: \"\",\r\n                Pdf: \"Testi.pdf\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"day\": \"Day 1\",\r\n        \"content\": [\r\n            {\r\n                Time: \"\",\r\n                Location: \"\",\r\n                Description: \"\",\r\n                NameOfSpeaker: \"\",\r\n                TitleOfSpeaker: \"\",\r\n                SpecialTitleOfSpeaker: \"\",\r\n                CompanyOfSpeaker: \"\",\r\n                Pdf: \"Testi.pdf\"\r\n            }\r\n        ]\r\n    }\r\n]\r\nTodo make function to convert ^^^ to vvv\r\n[\r\n    {day: \"Day 0\", jne},\r\n    {day: \"Day 0\", jne},\r\n    {day: \"Day 0\", jne},\r\n    {day: \"Day 1\", jne},\r\n    {day: \"Day 1, jne},\r\n    {day: \"Day 2\", jne},\r\n]\r\n*/\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n * @param fileToUpload - put file to list of files to upload\r\n */\r\nconst ProgrammeForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n    const [Data, setData] = useState(FormToData(Form))\r\n    const [ActiveDay, setActiveDay] = useState(\"1\") // eslint-disable-line\r\n    useEffect(() => {\r\n        props.editForm(\"programme\", Form)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [Form])\r\n\r\n    // const keys = \r\n    // [\r\n    //     \"Day\",\r\n    //     \"Time\",\r\n    //     \"Location\",\r\n    //     \"Description\",\r\n    //     \"Name of Speaker\",\r\n    //     \"Title of Speaker\",\r\n    //     \"Special Title of Speaker\",\r\n    //     \"Company\",\r\n    //     \"Pdf\"\r\n    // ]\r\n    function dataToForm(data){\r\n        let form = [];\r\n        for(let key in data){\r\n            let i;\r\n            let found = false;\r\n            for(i = 0; i < form.length; i++){\r\n                if('day' in form[i]){\r\n                    if(form[i].day === 'Day '+data[key].day){\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(found){\r\n                form[i].content.push(\r\n                    {\r\n                        Time: data[key].Time,\r\n                        Location: data[key].Location,\r\n                        Description: data[key].Description,\r\n                        NameOfSpeaker: data[key].NameOfSpeaker,\r\n                        TitleOfSpeaker: data[key].TitleOfSpeaker,\r\n                        SpecialTitleOfSpeaker: data[key].SpecialTitleOfSpeaker,\r\n                        CompanyOfSpeaker: data[key].CompanyOfSpeaker,\r\n                        Pdf: data[key].Pdf\r\n                    }\r\n                )\r\n            }\r\n            else{\r\n                form.push(\r\n                    {\r\n                        day: 'Day '+data[key].day,\r\n                        content: [\r\n                            {\r\n                                Time: data[key].Time,\r\n                                Location: data[key].Location,\r\n                                Description: data[key].Description,\r\n                                NameOfSpeaker: data[key].NameOfSpeaker,\r\n                                TitleOfSpeaker: data[key].TitleOfSpeaker,\r\n                                SpecialTitleOfSpeaker: data[key].SpecialTitleOfSpeaker,\r\n                                CompanyOfSpeaker: data[key].CompanyOfSpeaker,\r\n                                Pdf: data[key].Pdf\r\n                            }\r\n                        ]\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        let fix = false\r\n        for(let i in data){\r\n            if(ActiveDay === data[i].day){\r\n                fix = false;\r\n                break;\r\n            }\r\n            fix = true;\r\n        }\r\n        if(fix){\r\n            setActiveDay(\"1\")\r\n        }\r\n        setForm(form)\r\n        setData(FormToData(form))\r\n\r\n        //props.editForm(\"programme\", Form)\r\n    }\r\n    function FormToData(form){\r\n        let newForm = []\r\n        for(let i in form){\r\n            let day = form[i].day\r\n            day = day.replace(\"Day \", \"\")\r\n            let content = form[i].content\r\n\r\n            for(let j in content){\r\n                newForm.push(\r\n                {\r\n                    day: day,\r\n                    Time: content[j].Time,\r\n                    Location: content[j].Location,\r\n                    Description: content[j].Description,\r\n                    NameOfSpeaker: content[j].NameOfSpeaker,\r\n                    TitleOfSpeaker: content[j].TitleOfSpeaker,\r\n                    SpecialTitleOfSpeaker: content[j].SpecialTitleOfSpeaker,\r\n                    CompanyOfSpeaker: content[j].CompanyOfSpeaker,\r\n                    Pdf: content[j].Pdf\r\n                })\r\n            }\r\n        }\r\n        //console.log(form, newForm)\r\n        return newForm\r\n    }\r\n    function clickEmpty(e, day){ // eslint-disable-line\r\n        e.preventDefault();\r\n        let form = Form\r\n        let i;\r\n        let found = false;\r\n        for(i = 0; i < form.length; i++){\r\n            if('day' in form[i]){\r\n                if(form[i].day === \"Day \"+day){\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(found){\r\n            form[i].content.push(\r\n                {\r\n                    Time: \"\",\r\n                    Location: \"\",\r\n                    Description: \"\",\r\n                    NameOfSpeaker: \"\",\r\n                    TitleOfSpeaker: \"\",\r\n                    SpecialTitleOfSpeaker: \"\",\r\n                    CompanyOfSpeaker: \"\",\r\n                    Pdf: \"\"\r\n                }\r\n            )\r\n        }\r\n        else{\r\n            form.push(\r\n                {\r\n                    day: \"Day \"+day,\r\n                    content: [\r\n                        {\r\n                            Time: \"\",\r\n                            Location: \"\",\r\n                            Description: \"\",\r\n                            NameOfSpeaker: \"\",\r\n                            TitleOfSpeaker: \"\",\r\n                            SpecialTitleOfSpeaker: \"\",\r\n                            CompanyOfSpeaker: \"\",\r\n                            Pdf: \"\"\r\n                        }\r\n                    ]\r\n                }\r\n            )\r\n        }\r\n        //document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"programme\", form)\r\n        setData(FormToData(form))\r\n    }\r\n    function clickHandler(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        \r\n        let i;\r\n        let found = false;\r\n        for(i = 0; i < form.length; i++){\r\n            if('day' in form[i]){\r\n                if(form[i].day === \"Day \"+e.target.form[0].value){\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(found){\r\n            form[i].content.push(\r\n                {\r\n                    Time: e.target.form[1].value,\r\n                    Location: e.target.form[2].value,\r\n                    Description: e.target.form[3].value,\r\n                    NameOfSpeaker: e.target.form[4].value,\r\n                    TitleOfSpeaker: e.target.form[5].value,\r\n                    SpecialTitleOfSpeaker: e.target.form[6].value,\r\n                    CompanyOfSpeaker: e.target.form[7].value,\r\n                    Pdf: (e.target.form[8].value).match(/[^\\\\/]*$/)[0]\r\n                }\r\n            )\r\n        }\r\n        else{\r\n            form.push(\r\n                {\r\n                    day: \"Day \"+e.target.form[0].value,\r\n                    content: [\r\n                        {\r\n                            Time: e.target.form[1].value,\r\n                            Location: e.target.form[2].value,\r\n                            Description: e.target.form[3].value,\r\n                            NameOfSpeaker: e.target.form[4].value,\r\n                            TitleOfSpeaker: e.target.form[5].value,\r\n                            SpecialTitleOfSpeaker: e.target.form[6].value,\r\n                            CompanyOfSpeaker: e.target.form[7].value,\r\n                            Pdf: (e.target.form[8].value).match(/[^\\\\/]*$/)[0]\r\n                        }\r\n                    ]\r\n                }\r\n            )\r\n        }\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"programme\", form)\r\n        setData(FormToData(form))\r\n    }\r\n\r\n    async function fileHandler(e){\r\n        let jsonData = await xlsxToJson(e.target)\r\n        //console.log(jsonData)\r\n        let list = []\r\n        for(let i in jsonData){\r\n            if(i > 0){       \r\n                list.push(\r\n                    {\r\n                        day: jsonData[i][0],\r\n                        Time: jsonData[i][1],\r\n                        Location: jsonData[i][2],\r\n                        Description: jsonData[i][3],\r\n                        NameOfSpeaker: jsonData[i][4],\r\n                        TitleOfSpeaker: jsonData[i][5],\r\n                        SpecialTitleOfSpeaker: jsonData[i][6],\r\n                        CompanyOfSpeaker: jsonData[i][7],\r\n                        Pdf: jsonData[i][8],\r\n                    }\r\n                )\r\n            }   \r\n        }\r\n        dataToForm(list)\r\n        document.getElementById(\"fileform\").reset();\r\n    }\r\n    // https://imgur.com/a/XiuemMT\r\n    function getHighestDay(){\r\n        let data = Data;\r\n        let day = 0;\r\n        for(let i in data){\r\n            if(data[i].day > day){\r\n                day = parseInt(data[i].day);\r\n            }\r\n        }\r\n        return day;\r\n    }\r\n    function dayHandler(e){\r\n        if(e.target.name === \"plus\"){\r\n            clickEmpty(e, getHighestDay()+1)\r\n        }\r\n        else if(e.target.name === \"minus\"){\r\n            let data = Data;\r\n            let highest = getHighestDay();\r\n            let loop = true;\r\n            while(loop){\r\n                loop = false\r\n                for(let i in data){\r\n                    if(parseInt(data[i].day) === highest){\r\n                        data.splice(i,1)\r\n                        loop = true\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            dataToForm(data)\r\n        }\r\n        else if(e.target.name === \"day\"){\r\n            setActiveDay(e.target.id)\r\n        }\r\n        else{\r\n            clickEmpty(e, ActiveDay)\r\n        }\r\n    }\r\n    let dayButtons = [];\r\n    let takenDays = [];\r\n    dayButtons = Data.map((item, index)=>{\r\n        //console.log(index, item)\r\n        \r\n        if(!takenDays.includes(item.day)){\r\n            takenDays.push(item.day)\r\n            return(<Button key={index} name=\"day\" id={item.day} onClick={dayHandler} className={ActiveDay === item.day ? \"active\" : \"inactive\"} disabled={ActiveDay === item.day ? true : false}>Day {item.day}</Button>)\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    })\r\n\r\n    let dataContainer;\r\n    dataContainer = Data.slice(0).reverse().map((item, index)=>{\r\n        //console.log(item.day, ActiveDay)\r\n        if(Form.length > 0){\r\n            if(item.day === ActiveDay || ActiveDay == null){\r\n                return(<ProgrammeCard key={index} index={index} form={item} data={Data} editForm={(data) => dataToForm(data)} fileToUpload={(e)=>props.fileToUpload(e)}/>)\r\n            }\r\n            else{\r\n                return(null)\r\n            }\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    })\r\n    \r\n    return(\r\n        <>\r\n        <div style={{display:'flex',justifyContent:'center',alignContent:'center',flexDirection:'row'}}>\r\n        <form id=\"fileform\" style={{display:'flex',flex:'1',justifyContent:'flex-end',alignContent:'center'}}>\r\n            <label htmlFor=\"hidden-input\" className=\"excelButton\">Choose Excel File</label>\r\n            <input id=\"hidden-input\" type=\"file\" className=\"hidden\" onChange={fileHandler}/>\r\n        </form>\r\n        <div style={{display:'flex',flex:'1',justifyContent:'flex-start',alignContent:'center'}}>\r\n            <a className=\"excelButton\" href='/Excel/Programme.xlsx' download>Download Excel Template</a>\r\n        </div>\r\n        </div>    \r\n        <form autoComplete=\"off\" id=\"form\" style={{display:'none'}}>\r\n            <label >Day:</label>\r\n            <input type=\"number\" name=\"Date\" min=\"0\" defaultValue=\"1\"/>\r\n            <input type=\"text\" name=\"time\" placeholder=\"Time\"/>\r\n            <input type=\"text\" name=\"location\" placeholder=\"Event Location\"/>\r\n            {/* <input type=\"text\" name=\"description\" placeholder=\"Event Description\"/> */}\r\n            <textarea name=\"description\" placeholder=\"Event Description\"/>\r\n            <input  type=\"text\" name=\"speakerName\" placeholder=\"Speaker Name\"/>\r\n            <input  type=\"text\" name=\"speakerTitle\" placeholder=\"Speaker Title\"/>\r\n            <input  type=\"text\" name=\"speakerSpecialTitle\" placeholder=\"Speaker Special Title\"/>\r\n            <input  type=\"text\" name=\"speakerCompany\" placeholder=\"Speaker Company\"/>\r\n            <input  type=\"file\" name=\"test\" id=\"test\" \r\n            onChange={(e)=>{props.fileToUpload(e)}}/>\r\n            <button onClick={clickHandler}>Add Programme</button>\r\n            {/* <Button onClick={clickEmpty} style={\r\n                {\r\n                    height: '50px',\r\n                    width: '50px',\r\n                    backgroundColor: \"#32CD32\"\r\n                }}><span className=\"deleteButtonText\">+</span></Button> */}\r\n        </form>\r\n        {/* <Card style={{width:\"300px\", display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems:'center'}}>\r\n            <BsForm style={{width:'50%'}}>\r\n                <BsForm.Group>\r\n                    <BsForm.Label>Day</BsForm.Label>\r\n                    <BsForm.Control type=\"number\" name=\"Date\" min=\"0\" defaultValue=\"1\" id=\"Date\"/>\r\n                    <AddButton onClick={clickEmpty} style={{display: 'flex', justifyContent: 'center', alignItems:'center'}}/>\r\n                </BsForm.Group>\r\n            </BsForm>\r\n        </Card> */}\r\n        {/* style={{width:'300px', display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'flex-end'}} */}\r\n        <div style={{display:'flex', flexDirection:'row', justifyContent:'center', alignItems:'center'}}>\r\n            <div>\r\n                <ButtonGroup className=\"navbarButtons\">\r\n                    {dayButtons}\r\n                </ButtonGroup>\r\n                {/* <Button>Day 1</Button>\r\n                <Button>Day 2</Button>\r\n                <Button>Day 3</Button> */}\r\n            </div>\r\n            <div>\r\n                <ButtonGroup vertical style={{display:'flex', flexDirection:'column', alignItems:'center', justifyContent:'center'}}>\r\n                    <Button className=\"dayAddButton\" name=\"plus\" onClick={dayHandler} disabled={dayButtons.length >= 5 ? true : false}>+</Button>\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        delay={{show: 250, hide: 250}}\r\n                        overlay={<Tooltip>WARNING! Pressing this deletes the most recent day and all its contents!</Tooltip>}\r\n                        >\r\n                    <Button className=\"dayDeleteButton\" name=\"minus\" onClick={dayHandler}>-</Button>\r\n                    </OverlayTrigger>\r\n                </ButtonGroup>\r\n                {/* <Button name=\"test\" onClick={dayHandler}>test</Button> */}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            {Form.length > 0 ? <AddButton onClick={dayHandler}/> : null}\r\n            \r\n        </div>\r\n        {/* <ProgrammeCard/> */}\r\n        <div style={{marginTop: '20px', display: 'flex', justifyContent:'center', alignItems:'center'}}>\r\n            \r\n        </div>\r\n        {Data.length > 0 ? dataContainer : null}\r\n        {/* {Form.length > 0 ? \r\n            <FormTable \r\n                form={FormToData(Form)} \r\n                setForm={(data) => dataToForm(data)} \r\n                fileToUpload={(e)=>{props.fileToUpload(e)}}\r\n            /> : \r\n        null} */}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProgrammeForm","import React, {useEffect} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport DeleteButton from './DeleteButton';\r\nimport './SpeakerCard.css';\r\n\r\nconst SpeakerCard = props => {\r\n  let formObject = props.form\r\n  let ID = props.ID\r\n  if(formObject.ImageID && ID && !formObject.speakerImgsrc){\r\n    formObject.speakerImgsrc = `https://sahat.lamk.fi/public/${ID}/${formObject.ImageID}`\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    if(e.target.type === \"file\"){\r\n      data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n    }\r\n    else{\r\n      data[props.index][e.target.name] = e.target.value\r\n    }\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"speakerImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Name of the Speaker</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.Speaker} onChange={(e) => {changeHandler(e)}} name=\"Speaker\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Title of the Speaker</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.Title} onChange={(e) => {changeHandler(e)}} name=\"Title\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Special Title of the Speaker</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.SpecialTitle} onChange={(e) => {changeHandler(e)}} name=\"SpecialTitle\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Company of the Speaker</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.Company} onChange={(e) => {changeHandler(e)}} name=\"Company\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Description</FormLabel>\r\n                    <OverlayTrigger \r\n                      placement=\"bottom\" \r\n                      delay={{show: 250, hide: 250}}\r\n                      overlay={<Tooltip>More detailed description of the speaker</Tooltip>}\r\n                      >\r\n                    <FormControl as=\"textarea\" size=\"sm\" value={formObject.Description} onChange={(e) => {changeHandler(e)}} name=\"Description\"></FormControl>\r\n                  </OverlayTrigger>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n          <FormLabel><Image className=\"filePrev\" src={formObject.speakerImgsrc} fluid roundedCircle/></FormLabel>\r\n          <label htmlFor={'hidden-'+props.index} className=\"labelForHidden\">Choose image</label>\r\n          <FormControl size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} id={'hidden-'+props.index} className=\"hidden\" type='file' name=\"ImageID\"></FormControl>\r\n          {/* <Form.File size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} name=\"ImageID\"/> */}\r\n        </div>\r\n      </div>\r\n      {/* <Button className=\"deleteButton\" onClick={deleteFunction}>\r\n        <span className=\"deleteButtonText\">-</span>\r\n      </Button> */}\r\n      <DeleteButton onClick={deleteHandler}></DeleteButton>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SpeakerCard;","import React, {useState} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport xlsxToJson from '../components/XlsxConverter'\r\nimport SpeakerCard from '../components/SpeakerCard'\r\n//import Card from 'react-bootstrap/Card'\r\nimport AddButton from '../components/AddButton'\r\n/*\r\n{\r\n    \"Speaker\": \"Test\",\r\n    \"Title\": \"Test\",\r\n    \"SpecialTitle\": \"Test\",\r\n    \"Company\": \"Test\",\r\n    \"ImageID\": \"not implemented\" //https://sahat.lamk.fi/images/speakerImages/${imageID}\r\n}\r\n*/\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n * @param fileToUpload - put file to list of files to upload\r\n */\r\nconst SpeakersForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n    function clickHandler(e){ //deprecated\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            Speaker: e.target.form[0].value,\r\n            Title: e.target.form[1].value,\r\n            SpecialTitle: e.target.form[2].value,\r\n            Company: e.target.form[3].value,\r\n            ImageID: (e.target.form[4].value).match(/[^\\\\/]*$/)[0]\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"speakers\", Form)\r\n    }\r\n    function clickEmpty(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            Speaker: \"\",\r\n            Title: \"\",\r\n            SpecialTitle: \"\",\r\n            Company: \"\",\r\n            ImageID: \"\",\r\n            Description: \"\"\r\n        })\r\n        setForm(form)\r\n        props.editForm(\"speakers\", Form)\r\n    }\r\n    async function fileHandler(e){\r\n        let jsonData = await xlsxToJson(e.target)\r\n        let form = []\r\n        for(let i in jsonData){\r\n            //console.log(jsonData[i])\r\n            if(i > 0){\r\n                form.push(\r\n                    {\r\n                        Speaker: jsonData[i][0],\r\n                        Title: jsonData[i][1],\r\n                        SpecialTitle: jsonData[i][2],\r\n                        Company: jsonData[i][3],\r\n                        ImageID: jsonData[i][4],\r\n                        Description: jsonData[i][5],\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        setForm(form)\r\n        props.editForm(\"speakers\", Form)\r\n        document.getElementById(\"fileform\").reset();\r\n    }\r\n    let dataContainer;\r\n    function cardHandler(e){\r\n        setForm(e)\r\n        props.editForm(\"speakers\", e)\r\n    }\r\n    dataContainer = Form.slice(0).reverse().map((item, index)=>{\r\n        return(\r\n        <SpeakerCard \r\n            key={index} \r\n            index={index} \r\n            form={item} \r\n            data={Form} \r\n            editForm={cardHandler}\r\n            ID={props.EditID}  \r\n            fileToUpload={(e)=>props.fileToUpload(e)}\r\n        />)\r\n    })\r\n    return(\r\n        <>\r\n        <div style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'row'}}>\r\n        <div id=\"fileform\" style={{display:'flex', flex:'1', justifyContent:'flex-end',alignContent:'center'}}>\r\n            <label htmlFor=\"hidden-input\" className=\"excelButton\">Choose Excel File</label>\r\n            <input id=\"hidden-input\" type=\"file\" className=\"hidden\" onChange={fileHandler}/>\r\n        </div>\r\n        <div style={{display:'flex',flex:'1',justifyContent:'flex-start',alignContent:'center'}}>\r\n            <a className=\"excelButton\" href='/Excel/Speakers.xlsx' download>Download Excel Template</a>\r\n        </div>\r\n        </div>\r\n        <form autoComplete=\"off\" id=\"form\"> \r\n            <input style={{display: 'none'}} type=\"text\" name=\"speaker\" placeholder=\"Speaker\"/>\r\n            <input style={{display: 'none'}} type=\"text\" name=\"speakerTitle\" placeholder=\"Speaker Title\"/>\r\n            <input style={{display: 'none'}} type=\"text\" name=\"speakerSpecialTitle\" placeholder=\"Speaker Special Title\"/>\r\n            <input style={{display: 'none'}} type=\"text\" name=\"speakersCompany\" placeholder=\"Speakers Company\"/>\r\n            <input style={{display: 'none'}} type=\"file\" name=\"speakerImage\" id=\"test\" \r\n            onChange={(e)=>{props.fileToUpload(e)}}/>\r\n            <button style={{display: 'none'}} onClick={clickHandler}>Add Speaker</button>\r\n            <AddButton onClick={clickEmpty}/>\r\n        </form>\r\n        {dataContainer}\r\n        {/* {Form.length > 0 ? <FormTable form={Form} setForm={setForm} fileToUpload={(e)=>{props.fileToUpload(e)}}/> : null} */}\r\n        </>\r\n    )\r\n}\r\nexport default SpeakersForm","import React from 'react';\r\nimport {Card, FormGroup, FormLabel, FormControl} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport { useEffect } from 'react';\r\nimport DeleteButton from './DeleteButton';\r\nimport './SponsorCard.css';\r\n\r\n\r\nconst SponsorCard = props => {\r\n  let formObject = props.form\r\n\r\n  if(formObject.ImageID && props.ID && !formObject.sponsorImgsrc){\r\n    formObject.sponsorImgsrc = `https://sahat.lamk.fi/public/${props.ID}/${formObject.ImageID}`\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    if(e.target.type === \"file\"){\r\n      data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n    }\r\n    else{\r\n      data[props.index][e.target.name] = e.target.value\r\n    }\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"sponsorImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  return (\r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Name of the Company</FormLabel>\r\n                  <FormControl value={formObject.CompanyName} name=\"CompanyName\" onChange={(e) => changeHandler(e)} placeholder=\"Name of company\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Url of the Company</FormLabel>\r\n                  <FormControl value={formObject.CompanyUrl} name=\"CompanyUrl\" onChange={(e) => changeHandler(e)} placeholder=\"Url of company\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n          <FormLabel><Image className=\"filePrev\" src={formObject.sponsorImgsrc} fluid/></FormLabel>\r\n          <label htmlFor={'hidden-'+props.index} className=\"labelForHidden\">Choose image</label>\r\n          <FormControl className=\"hidden\" name=\"ImageID\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} type='file' id={'hidden-'+props.index}/>\r\n        </div>\r\n      </div>\r\n      <DeleteButton onClick={deleteHandler}/>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SponsorCard;","import React, {useState} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport SponsorCard from '../components/SponsorCard'\r\nimport AddButton from '../components/AddButton'\r\n/*\r\n{\r\n    \"CompanyName\": \"Test\",\r\n    \"CompanyUrl\": \"Test\",\r\n    \"ImageID\": \"Test\"\r\n}\r\n*/\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n * @param fileToUpload - put file to list of files to upload\r\n */\r\nconst SponsorsForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n    function clickHandler(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            CompanyName: e.target.form[0].value,\r\n            CompanyUrl: e.target.form[1].value,\r\n            ImageID: (e.target.form[2].value).match(/[^\\\\/]*$/)[0]\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"sponsors\", Form)\r\n    }\r\n    function clickEmpty(e){\r\n        e.preventDefault();\r\n        let form = Form;\r\n        form.push({\r\n            CompanyName: \"\",\r\n            CompanyUrl: \"\",\r\n            ImageID: \"\"\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"sponsors\", Form)\r\n    }\r\n    let dataContainer;\r\n    function cardHandler(e){\r\n        setForm(e)\r\n        props.editForm(\"sponsors\", e)\r\n    }\r\n    dataContainer = Form.slice(0).reverse().map((item, index)=>{\r\n        return(\r\n        <SponsorCard \r\n            key={index} \r\n            index={index} \r\n            form={item} \r\n            data={Form} \r\n            editForm={cardHandler}\r\n            ID={props.EditID} \r\n            fileToUpload={(e)=>props.fileToUpload(e)}\r\n        />)\r\n    })\r\n    return(\r\n        <>\r\n        <form autoComplete=\"off\" id=\"form\">\r\n            <input style={{display: 'none'}} type=\"text\" name=\"sponsorCompany\" placeholder=\"Company Name\"/>\r\n            <input style={{display: 'none'}} type=\"text\" name=\"sponsorURL\" placeholder=\"Company URL\"/>\r\n            <input style={{display: 'none'}} type=\"file\" name=\"sponsorImg\" id=\"test\" \r\n            onChange={(e)=>{props.fileToUpload(e)}}/>\r\n            <button style={{display: 'none'}} onClick={clickHandler}>Add Sponsor</button>\r\n            <AddButton onClick={clickEmpty}/>\r\n        </form>\r\n        {dataContainer}\r\n        {/* {Form.length > 0 ? <FormTable form={Form} setForm={setForm} fileToUpload={(e)=>{props.fileToUpload(e)}}/> : null} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SponsorsForm","import React, {useEffect} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport DeleteButton from './DeleteButton';\r\nimport './VenueCard.css';\r\n\r\nconst VenueCard = props => {\r\n  let formObject = props.form\r\n\r\n  if(formObject.image && props.ID && !formObject.venueImgsrc){\r\n    formObject.venueImgsrc = `https://sahat.lamk.fi/public/${props.ID}/${formObject.image}`\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    if(e.target.type === \"file\"){\r\n      data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n    }\r\n    else{\r\n      data[props.index][e.target.name] = e.target.value\r\n    }\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"venueImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    \r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Title of the Map</FormLabel>\r\n                  <OverlayTrigger \r\n                    placement=\"bottom\" \r\n                    delay={{show: 250, hide: 250}}\r\n                    overlay={<Tooltip>Short name for the map. Example: \"1. Floor\", \"2. Floor\"</Tooltip>}\r\n                    >\r\n                  <FormControl size=\"sm\" value={formObject.title} onChange={(e) => {changeHandler(e)}} name=\"title\"></FormControl>\r\n                  </OverlayTrigger>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n          <FormLabel><Image className=\"filePrev\" src={formObject.venueImgsrc} fluid/></FormLabel>\r\n          <label htmlFor={'hidden-'+props.index} className=\"labelForHidden\">Choose image</label>\r\n          <FormControl size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} id={'hidden-'+props.index} className=\"hidden\" type='file' name=\"image\"></FormControl>\r\n            {/* <Form.File size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} name=\"ImageID\"/> */}\r\n        </div>\r\n      </div>\r\n      {/* <Button className=\"deleteButton\" onClick={deleteFunction}>\r\n        <span className=\"deleteButtonText\">-</span>\r\n      </Button> */}\r\n      <DeleteButton onClick={deleteHandler}></DeleteButton>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default VenueCard;","import React, {useState} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport VenueCard from '../components/VenueCard'\r\nimport AddButton from '../components/AddButton'\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n * @param fileToUpload - put file to list of files to upload\r\n */\r\nconst VenueTabForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n\r\n    function clickHandler(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            title: e.target.form[0].value,\r\n            image: (e.target.form[1].value).match(/[^\\\\/]*$/)[0]\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"venue\", Form)\r\n    }\r\n    function clickEmpty(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            title: \"\",\r\n            image: \"\"\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"venue\", Form)\r\n    }\r\n    let dataContainer;\r\n    function cardHandler(e){\r\n        setForm(e)\r\n        props.editForm(\"venue\", e)\r\n    }\r\n    dataContainer = Form.slice(0).reverse().map((item, index)=>{\r\n        return(\r\n        <VenueCard \r\n            key={index} \r\n            index={index} \r\n            form={item} \r\n            data={Form} \r\n            editForm={cardHandler}\r\n            ID={props.EditID} \r\n            fileToUpload={(e)=>props.fileToUpload(e)}\r\n        />)\r\n    })\r\n    return(\r\n        <>\r\n        <form autoComplete=\"off\" id=\"form\">\r\n            <input style={{display: 'none'}} type=\"text\" name=\"title\" placeholder=\"Venue Title\"/>\r\n            <input style={{display: 'none'}} type=\"file\" name=\"venueImg\" id=\"test\" \r\n            onChange={(e)=>{props.fileToUpload(e)}}/>\r\n            <button style={{display: 'none'}} onClick={clickHandler}>Add Venue</button>\r\n            <AddButton onClick={clickEmpty}/>\r\n        </form>\r\n        {dataContainer}\r\n        {/* {Form.length > 0 ? <FormTable form={Form} setForm={setForm} fileToUpload={(e)=>{props.fileToUpload(e)}}/> : null} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VenueTabForm","import React, {useEffect, useState} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl, FormText, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport DeleteButton from './DeleteButton';\r\nimport './MapMarkerCard.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios'\r\n\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\n\r\nconst MapMarkerCard = props => {\r\n  let formObject = props.form\r\n  let ID = props.ID\r\n\r\n  if(formObject.image && ID && !formObject.markerImgsrc){\r\n    formObject.markerImgsrc = `https://sahat.lamk.fi/public/${ID}/${formObject.image}`\r\n    if((formObject.image).includes(\"https://\")){\r\n      formObject.markerImgsrc = formObject.image\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    //data = data.slice(0).reverse()\r\n    if(e.target.type === \"file\"){\r\n      data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n    }\r\n    else{\r\n      data[props.index][e.target.name] = e.target.value\r\n    }\r\n    //data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    //data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    //data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"markerImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  const [ErrorMsg, setErrorMsg] = useState()\r\n  async function geocodeHandler(){\r\n    let data = props.data;\r\n    setErrorMsg(\"\")\r\n    if(formObject.address){\r\n      let query = (formObject.address).replace(\" \", \"%20\")\r\n      let apiurl = `https://nominatim.openstreetmap.org/search/${query}?format=json&limit=1`\r\n      await axios.get(apiurl)\r\n      .then(function (res) {\r\n        data[props.index][\"lat\"] = res.data[0].lat;\r\n        data[props.index][\"long\"] = res.data[0].lon;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n        setErrorMsg(\"Cannot get lat and long\")\r\n      })\r\n    }\r\n    \r\n\r\n    props.editForm(data)\r\n  }\r\n  let formElement;\r\n  if (props.markerType === \"restaurants\"){\r\n    formElement =\r\n      <Row>\r\n        <Col>\r\n          <FormGroup>\r\n            <FormLabel>Description</FormLabel>\r\n            <FormControl as=\"textarea\" size=\"sm\" value={formObject.description} onChange={(e) => {changeHandler(e)}} name=\"description\"></FormControl>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <FormLabel>Category</FormLabel>\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              delay={{show: 250, hide: 250}}\r\n              overlay={<Tooltip>Type of restaurant. Example: \"Burger\", \"Pizza\", \"Chinese\" etc</Tooltip>}\r\n              >\r\n            <FormControl size=\"sm\" value={formObject.category} onChange={(e) => {changeHandler(e)}} name=\"category\"></FormControl>\r\n            </OverlayTrigger>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm={1}>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <FormLabel>Rating</FormLabel>\r\n            <OverlayTrigger \r\n              placement=\"bottom\" \r\n              delay={{show: 250, hide: 250}}\r\n              overlay={<Tooltip>Value 1-5</Tooltip>}\r\n              >\r\n            <FormControl size=\"sm\" value={formObject.rating} onChange={(e) => {changeHandler(e)}} name=\"rating\"></FormControl>\r\n            </OverlayTrigger>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <FormLabel>Web url</FormLabel>\r\n            <FormControl size=\"sm\" value={formObject.webURL} onChange={(e) => {changeHandler(e)}} name=\"webURL\"></FormControl>\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n  }\r\n  else if (props.markerType === \"hotels\"){\r\n    formElement =\r\n    <Row>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Description</FormLabel>\r\n          <FormControl as=\"textarea\" size=\"sm\" value={formObject.description} onChange={(e) => {changeHandler(e)}} name=\"description\"></FormControl>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Rating</FormLabel>\r\n          <OverlayTrigger \r\n              placement=\"bottom\" \r\n              delay={{show: 250, hide: 250}}\r\n              overlay={<Tooltip>Value 1-5</Tooltip>}\r\n              >\r\n          <FormControl size=\"sm\" value={formObject.rating} onChange={(e) => {changeHandler(e)}} name=\"rating\"></FormControl>\r\n          </OverlayTrigger>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col sm={1}>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Web url</FormLabel>\r\n          <FormControl size=\"sm\" value={formObject.webURL} onChange={(e) => {changeHandler(e)}} name=\"webURL\"></FormControl>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n      </Col>\r\n    </Row>\r\n  }\r\n  else if (props.markerType === \"others\"){\r\n    formElement = \r\n    <Row>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Description</FormLabel>\r\n          <FormControl as=\"textarea\" size=\"sm\" value={formObject.description} onChange={(e) => {changeHandler(e)}} name=\"description\"></FormControl>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Category</FormLabel>\r\n          <OverlayTrigger \r\n              placement=\"bottom\" \r\n              delay={{show: 250, hide: 250}}\r\n              overlay={<Tooltip>Type of business. Example: \"Theatre\", \"Library\", \"Shop\"</Tooltip>}\r\n              >\r\n          <FormControl size=\"sm\" value={formObject.category} onChange={(e) => {changeHandler(e)}} name=\"category\"></FormControl>\r\n          </OverlayTrigger>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col sm={1}>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Web URL</FormLabel>\r\n          <FormControl size=\"sm\" value={formObject.webURL} onChange={(e) => {changeHandler(e)}} name=\"webURL\"></FormControl>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n      </Col>\r\n    </Row>\r\n  }\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          {props.markerType === \"restaurants\" ? <p>Restaurant</p>: null}\r\n          {props.markerType === \"hotels\" ? <p>Hotel</p> : null}\r\n          {props.markerType === \"others\" ? <p>Other</p> : null}\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Name</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.name} onChange={(e) => {changeHandler(e)}} name=\"name\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Address</FormLabel>\r\n                  <OverlayTrigger \r\n                    placement=\"bottom\" \r\n                    delay={{show: 250, hide: 250}}\r\n                    overlay={<Tooltip>Street address, Postcode and City. Example: \"Mukkulankatu 19, 15210 Lahti\"</Tooltip>}\r\n                    >\r\n                  <FormControl size=\"sm\" value={formObject.address} onChange={(e) => {changeHandler(e)}} name=\"address\"></FormControl>\r\n                  </OverlayTrigger>\r\n                  <FormText className=\"text-danger\">{ErrorMsg}</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={1}>\r\n                <br></br>\r\n                <OverlayTrigger\r\n                  placement=\"bottom\"\r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Converts address to latitude and longitude</Tooltip>}\r\n                  >\r\n                <Button className=\"otherButtons\" onClick={geocodeHandler}><AddLocationIcon/></Button>\r\n                </OverlayTrigger>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Latitude</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.lat} onChange={(e) => {changeHandler(e)}} name=\"lat\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Longitude</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.long} onChange={(e) => {changeHandler(e)}} name=\"long\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          {formElement}\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n          <FormLabel><Image className=\"filePrev\" src={formObject.markerImgsrc} fluid/></FormLabel>\r\n          <label htmlFor={'hidden-'+props.index} className=\"labelForHidden\">Choose image</label>\r\n          <FormControl size=\"sm\" onChange={(e) => {changeImage(e);changeHandler(e); fileHandler(e)}} id={'hidden-'+props.index} className=\"hidden\" type='file' name=\"image\"></FormControl>\r\n          {/* <Form.File size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} name=\"ImageID\"/> */}\r\n        </div>\r\n      </div>\r\n      <label>Data © OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright</label>\r\n      <DeleteButton onClick={deleteHandler}></DeleteButton>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MapMarkerCard;","import React, {useState} from 'react'\r\n//import Dropdown from 'react-bootstrap/Dropdown'\r\n//import axios from 'axios';\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Card from 'react-bootstrap/Card'\r\nimport MapMarkerCard from './MapMarkerCard'\r\n//import BsForm from 'react-bootstrap/Form'\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\n\r\n//import Overlay from 'react-bootstrap/Overlay'\r\n//import Tooltip from 'react-bootstrap/Tooltip'\r\n/*\r\n\"mapMarkers\":\r\n{\r\n    \"restaurant\":\r\n    [\r\n        {\r\n            \"lat\": \"\",\r\n            \"lng\": \"\",\r\n            \"name\": \"\",\r\n            \"address\": \"\",\r\n            \"description\": \"\",\r\n            \"category\": \"\",\r\n            \"rating\": \"\",\r\n            \"webURL\": \"\",\r\n            \"image\": \"\"\r\n        }\r\n    ],\r\n    \"hotel\":\r\n    [\r\n        {\r\n            \"lat\": \"\",\r\n            \"lng\": \"\",\r\n            \"name\": \"\",\r\n            \"address\": \"\",\r\n            \"description\": \"\",\r\n            \"rating\": \"\",\r\n            \"webURL\": \"\",\r\n            \"image\": \"\",\r\n        }\r\n    ],\r\n    \"other\":\r\n    [\r\n        {\r\n            \"lat\": \"\",\r\n            \"lng\": \"\",\r\n            \"name\": \"\",\r\n            \"address\": \"\",\r\n            \"description\": \"\",\r\n            \"category\": \"\",\r\n            \"webURL\": \"\",\r\n            \"image\": \"\"\r\n        }\r\n    ]\r\n}\r\n*/\r\nconst MapMarkerForm = (props) =>{\r\n    const [Form, setForm] = useState(props.subForm ? props.subForm : \r\n        {\r\n            restaurants: [],\r\n            hotels: [],\r\n            others: []\r\n        })\r\n    const [Data, setData] = useState(formToData(Form))\r\n\r\n    function dataToForm(data){\r\n        let newForm = {\r\n            restaurants: [],\r\n            hotels: [],\r\n            others: []\r\n        }\r\n        for(let item in data){\r\n            let newObj = {}\r\n            let destination;\r\n            for(let key in data[item]){\r\n                if(key === \"key\"){\r\n                    destination = data[item][key]\r\n                }\r\n                else{\r\n                    newObj[key] = data[item][key]\r\n                }\r\n                \r\n            }\r\n            newForm[destination].push(newObj)\r\n        }\r\n        setForm(newForm)\r\n        props.editForm(\"mapmarkers\", newForm)\r\n    }\r\n    function formToData(form){\r\n        let data = []\r\n        //console.log(form)\r\n        for(let key in form){\r\n            for(let i in form[key]){\r\n                //console.log(key, form[key][i])\r\n                let item = form[key][i];\r\n                item[\"key\"] = key\r\n                data.push(item)\r\n            }\r\n        }\r\n\r\n        return data\r\n    }\r\n    function clickHandler(e){\r\n        console.log(e.target)\r\n        let newForm = Form;\r\n        if(e.target.name === \"restaurant\"){\r\n            newForm.restaurants.push({\r\n                lat: \"\",\r\n                long: \"\",\r\n                name: \"\",\r\n                address: \"\",\r\n                description: \"\",\r\n                category: \"\",\r\n                rating: \"\",\r\n                webURL: \"\",\r\n                image: \"\",\r\n            })\r\n        }\r\n        else if(e.target.name === \"hotel\"){\r\n            newForm.hotels.push({\r\n                lat: \"\",\r\n                long: \"\",\r\n                name: \"\",\r\n                address: \"\",\r\n                description: \"\",\r\n                rating: \"\",\r\n                webURL: \"\",\r\n                image: \"\",\r\n            })\r\n        }\r\n        else if(e.target.name === \"other\"){\r\n            newForm.others.push({\r\n                lat: \"\",\r\n                long: \"\",\r\n                name: \"\",\r\n                address: \"\",\r\n                description: \"\",\r\n                category: \"\",\r\n                webURL: \"\",\r\n                image: \"\",\r\n            })\r\n        }\r\n        else{\r\n\r\n        }\r\n        setForm(newForm)\r\n        setData(formToData(newForm))\r\n    }\r\n    \r\n    const [ActiveCat, setActiveCat] = useState(\"restaurants\")\r\n    function catHandler(e){\r\n        e.preventDefault();\r\n        if(ActiveCat !== e.target.name){\r\n            setActiveCat(e.target.name)\r\n        }\r\n        else{\r\n            setActiveCat(null)\r\n        }\r\n    }\r\n\r\n    let dataContainer = null;\r\n    if(Data){\r\n        dataContainer = Data.map((item, index)=>{\r\n            //console.log(item.key)\r\n            if(item.key === ActiveCat || ActiveCat === null){\r\n                return(\r\n                <MapMarkerCard \r\n                    key={index} \r\n                    index={index} \r\n                    form={item} \r\n                    data={Data} \r\n                    editForm={(data)=>dataToForm(data)}\r\n                    ID={props.EditID}\r\n                    markerType={item.key}  \r\n                    fileToUpload={(e)=>props.fileToUpload(e)}\r\n                />)\r\n            }\r\n            else{\r\n                return null\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {/* <Col className=\"cols\" style={{display: 'flex', justifyContent: 'center'}}>\r\n            <Dropdown style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                <Dropdown.Toggle>\r\n                    Marker Categories\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#\" onClick={(e)=>{setActiveForm(e.target.name); document.getElementById(\"form\").reset();}} name=\"restaurant\">Restaurant</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\" onClick={(e)=>{setActiveForm(e.target.name); document.getElementById(\"form\").reset();}} name=\"hotel\">Hotel</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\" onClick={(e)=>{setActiveForm(e.target.name); document.getElementById(\"form\").reset();}} name=\"other\">Other</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </Col> */}\r\n\r\n        {/* <Card style={{width: '50rem'}}>\r\n            <p>Geocoder</p>\r\n            <Nominatim/>\r\n        </Card> */}\r\n        <Row>\r\n            <Card className=\"text-center\" style={{width: '40rem', display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\r\n                <h5>Marker Category</h5>\r\n                <Row style={{marginBottom: '10px'}}>\r\n                    <ButtonGroup className=\"navbarButtons\">\r\n                        <Button name=\"restaurants\" onClick={catHandler} className={ActiveCat === \"restaurants\" ? \"active\" : \"inactive\"} disabled={ActiveCat === \"restaurants\"}>Restaurants</Button>\r\n                        <Button name=\"hotels\" onClick={catHandler} className={ActiveCat === \"hotels\" ? \"active\" : \"inactive\"} disabled={ActiveCat === \"hotels\"}>Hotels</Button>\r\n                        <Button name=\"others\" onClick={catHandler} className={ActiveCat === \"others\" ? \"active\" : \"inactive\"} disabled={ActiveCat === \"others\"}>Others</Button>\r\n                    </ButtonGroup>\r\n                </Row>\r\n                <Row>\r\n                    <ButtonGroup style={{display: 'block'}}>\r\n                        {/* <Button name=\"restaurant\" onClick={(e)=>{clickHandler(e)}}>Create Restaurant</Button>\r\n                        <Button name=\"hotel\" onClick={(e)=>{clickHandler(e)}}>Create Hotel</Button>\r\n                        <Button name=\"other\" onClick={(e)=>{clickHandler(e)}}>Create Other</Button> */}\r\n                        <Button className=\"otherButtons\" name={ActiveCat === \"restaurants\" ? \"restaurant\" : ActiveCat === \"hotels\" ? \"hotel\" : \"other\"} onClick={(e)=>{clickHandler(e)}}>Create {ActiveCat === \"restaurants\" ? \"Restaurant\" : ActiveCat === \"hotels\" ? \"Hotel\" : \"Other\"}</Button>\r\n                    </ButtonGroup>\r\n                    {/* <Dropdown style={{display: 'flex', flexWrap: 'wrap', marginTop: '10px'}}>\r\n                        <Dropdown.Toggle>\r\n                            Add Marker\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={(e)=>{clickHandler(e)}} name=\"restaurant\">Restaurant</Dropdown.Item>\r\n                            <Dropdown.Item onClick={(e)=>{clickHandler(e)}} name=\"hotel\">Hotel</Dropdown.Item>\r\n                            <Dropdown.Item onClick={(e)=>{clickHandler(e)}} name=\"other\">Other</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown> */}\r\n                </Row>\r\n            </Card>\r\n        </Row>\r\n        <Col>\r\n            {dataContainer}\r\n        </Col>\r\n        </>\r\n    )\r\n}\r\n\r\n//OpenStreetMap Geocoding\r\n// const Nominatim = (props) => {\r\n//     const [Address, setAddress] = useState()\r\n//     const [Lat, setLat] = useState()\r\n//     const [Lng, setLng] = useState()\r\n//     const [Msg, setMsg] = useState()\r\n//     const latref = useRef()\r\n//     const lngref = useRef()\r\n\r\n//     const [Show, setShow] = useState(false)\r\n//     const [Target, setTarget] = useState()\r\n//     let query = \"\";\r\n//     let apiurl = `https://nominatim.openstreetmap.org/search/${query}?format=json&limit=1`\r\n//     async function clickHandler(e){\r\n//         setMsg(null)\r\n//         e.preventDefault(); //prevents page refresh\r\n//         //document.getElementById(\"lat\").value = \"\"\r\n//         //console.log(e.target.form[0].value)\r\n//         query = Address\r\n//         if(query){\r\n//             console.log(\"query is set\")\r\n//             console.log(query)\r\n//             let modquery = query.replace(\" \",\"%20\")\r\n//             console.log(\"query modified\")\r\n//             console.log(modquery)\r\n//             apiurl = `https://nominatim.openstreetmap.org/search/${modquery}?format=json&limit=1`\r\n//             //console.log(apiurl)\r\n//             axios.get(apiurl)\r\n//             .then(function (res) {\r\n//                 //console.log(res.data[0].lat, res.data[0].lon);\r\n//                 setLat(res.data[0].lat)\r\n//                 setLng(res.data[0].lon)\r\n//                 // document.getElementById(\"lat\").value = res.data[0].lat;\r\n//                 // document.getElementById(\"lng\").value = res.data[0].lon;\r\n//                 // document.getElementById(\"address\").value = query\r\n//             })\r\n//             .catch(function (error) {\r\n//                 console.log(error);\r\n//                 setMsg(\"Cannot find lat and lng of address\")\r\n//             })\r\n//         }\r\n//         else{\r\n//             console.log(\"query is not set\")\r\n//         }\r\n//     }\r\n//     function sleep(ms) {\r\n//         return new Promise(resolve => setTimeout(resolve, ms));\r\n//     }\r\n//     async function clipboard(e){\r\n//         if(e.target.name === \"lat\"){\r\n//             latref.current.select();\r\n//             setTarget(latref)\r\n//         }\r\n//         else if(e.target.name === \"lng\"){\r\n//             lngref.current.select();\r\n//             setTarget(lngref)\r\n//         }\r\n//         else{\r\n//             return null\r\n//         }\r\n//         setShow(true)\r\n//         document.execCommand('copy');\r\n//         await sleep(5000) // tooltip flickers if inputs are rapidly pressed. Too bad!\r\n//         setShow(false)\r\n//     }\r\n//     return(\r\n//         <>\r\n//         {/* <form>\r\n//             <input type=\"text\" placeholder=\"Address\"/>\r\n//             <button onClick={clickHandler}>Get lat and lng</button>\r\n//             <label>Data © OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright</label>\r\n//             {Msg}\r\n//         </form> */}\r\n//         <Row>\r\n//             <Col>\r\n//                 <BsForm>\r\n//                     <BsForm.Group>\r\n//                         <BsForm.Label>Address</BsForm.Label>\r\n//                         <BsForm.Control type=\"text\" onChange={e => {setAddress(e.target.value)}}/>\r\n//                         <BsForm.Text className=\"text-muted\">Data © OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright</BsForm.Text>\r\n//                     </BsForm.Group>\r\n//                     <BsForm.Group>\r\n//                         <Button onClick={clickHandler}>Get lat and lng</Button>\r\n//                     </BsForm.Group>\r\n//                 </BsForm>\r\n//             </Col>\r\n//             <Col>\r\n//                 <Row>\r\n//                     <Col>\r\n//                         <BsForm.Group>\r\n//                             <BsForm.Label>Latitude</BsForm.Label>\r\n//                             <BsForm.Control ref={latref} type=\"text\" name=\"lat\" onClick={clipboard} value={Lat || ''} readOnly/>\r\n//                             {Msg ? <BsForm.Text className=\"text-danger\">{Msg}</BsForm.Text>:null}\r\n//                         </BsForm.Group>\r\n//                     </Col>\r\n//                     <Col>\r\n//                         <BsForm.Group>\r\n//                             <BsForm.Label>Longitude</BsForm.Label>\r\n//                             <BsForm.Control ref={lngref} type=\"text\" name=\"lng\" onClick={clipboard} value={Lng || ''} readOnly/>\r\n//                         </BsForm.Group>\r\n//                     </Col>\r\n//                     <Overlay target={Target} show={Show} placement=\"bottom\">\r\n//                         {(props)=>(\r\n//                             <Tooltip {...props}>\r\n//                                 Copied to clipboard!\r\n//                             </Tooltip>\r\n//                         )}\r\n//                     </Overlay>\r\n//                 </Row>\r\n//             </Col>\r\n//         </Row>\r\n//         </>\r\n//     )\r\n// }\r\nexport default MapMarkerForm","import React, {useEffect, useState} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl, FormText, OverlayTrigger, Tooltip, Button} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport './GeneralCard.css'\r\nimport axios from 'axios'\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\n\r\nconst GeneralCard = props => {\r\n  let formObject = props.FO\r\n\r\n  if(formObject.eventImage && props.ID && !formObject.generalImgsrc){\r\n    formObject.generalImgsrc = `https://sahat.lamk.fi/public/${props.ID}/${formObject.eventImage}`\r\n    if((formObject.eventImage).includes(\"https://\")){\r\n      formObject.generalImgsrc = formObject.eventImage\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    formObject = props.FO\r\n    \r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"generalImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  function errorHandler(e){\r\n    console.log(e)\r\n  }\r\n\r\n  const [ErrorMsg, setErrorMsg] = useState(\"\")\r\n  async function geocodeHandler(){\r\n    setErrorMsg(\"\")\r\n    if(props.FO && props.FO.address){\r\n      let query = (props.FO.address).toString().replace(\" \", \"%20\")\r\n      let apiurl = `https://nominatim.openstreetmap.org/search/${query}?format=json&limit=1`\r\n      await axios.get(apiurl)\r\n      .then(function (res) {\r\n        // data[props.index][\"lat\"] = res.data[0].lat;\r\n        // data[props.index][\"long\"] = res.data[0].lon;\r\n        //props.appendForm(\"lat\", res.data[0].lat)\r\n        //props.appendForm(\"long\", res.data[0].lon)\r\n        props.latlongForm(res.data[0].lat, res.data[0].lon)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n        setErrorMsg(\"Unable to find lat and long\")\r\n      })\r\n    }\r\n  }\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          <Form onChange={(e)=> props.editForm(e)}>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Event Name</FormLabel>\r\n                  <FormControl size=\"sm\" name=\"eventName\" defaultValue={formObject.eventName}></FormControl>\r\n                  <FormText>Required</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Event Password</FormLabel>\r\n                  <FormControl size=\"sm\" name=\"eventPass\" defaultValue={formObject.eventPass}></FormControl>\r\n                  <FormText>Required</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Address</FormLabel>\r\n                  <OverlayTrigger \r\n                    placement=\"bottom\" \r\n                    delay={{show: 250, hide: 250}}\r\n                    overlay={<Tooltip>Street address, Postcode and City. Example: \"Mukkulankatu 19, 15210 Lahti\"</Tooltip>}\r\n                    >\r\n                  <FormControl size=\"sm\" defaultValue={formObject.address} onChange={(e)=> props.editForm(e)} name=\"address\"></FormControl>\r\n                  </OverlayTrigger>\r\n                  <FormText className=\"text-danger\">{ErrorMsg}</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={1}>\r\n                <br></br>\r\n                <OverlayTrigger\r\n                  placement=\"bottom\"\r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Converts address to latitude and longitude</Tooltip>}\r\n                  >\r\n                <Button className=\"otherButtons\" onClick={geocodeHandler}><AddLocationIcon/></Button>\r\n                </OverlayTrigger>\r\n              </Col>\r\n              <Col sm={3}>\r\n                <FormGroup>\r\n                  <FormLabel>Latitude</FormLabel>\r\n                  <FormControl size=\"sm\" defaultValue={formObject.lat} onChange={(e)=> props.editForm(e)} name=\"lat\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={3}>\r\n                <FormGroup>\r\n                  <FormLabel>Longitude</FormLabel>\r\n                  <FormControl size=\"sm\" defaultValue={formObject.long} onChange={(e)=> props.editForm(e)} name=\"long\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Event Color Scheme</FormLabel>\r\n                  <OverlayTrigger \r\n                  placement=\"bottom\" \r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Hexadecimal Value. Example: \"#FFFFFF\"</Tooltip>}\r\n                  >\r\n                    <FormControl size=\"sm\" maxLength=\"7\" name=\"eventColor\" defaultValue={formObject.eventColor}></FormControl>\r\n                  </OverlayTrigger>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group>\r\n                  <Form.Label>Event Visiblity</Form.Label>\r\n                  <Form.Check className=\"checkbox\" type={'radio'} name=\"visibility\" label={'visible'} value=\"visible\" onChange={()=>{}} checked={props.FO.visibility == \"visible\" ? true : false}/> {/*eslint-disable-line*/}\r\n                  <Form.Check className=\"checkbox\" type={'radio'} name=\"visibility\" label={'hidden'} value=\"hidden\" onChange={()=>{}} checked={props.FO.visibility == \"hidden\" ? true : false}/> {/*eslint-disable-line*/}\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n            <FormLabel><Image className=\"filePrev\" src={formObject.generalImgsrc} fluid onError={errorHandler}/></FormLabel>\r\n              <label htmlFor={'hidden'} className=\"labelForHidden\">Choose image</label>\r\n            <FormControl size=\"sm\" onChange={(e)=>{fileHandler(e); changeImage(e); props.editForm(e);}} id={'hidden'} className=\"hidden\" type='file' name=\"eventImage\"></FormControl>\r\n        </div>\r\n      </div>\r\n      <label>Data © OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright</label>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default GeneralCard;","//Component for handling event creation\r\nimport React, {useState, useEffect} from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nimport AboutForm from '../components/AboutForm'\r\nimport ParticipantsForm from '../components/ParticipantsForm'\r\nimport ProgrammeForm from '../components/ProgrammeForm'\r\nimport SpeakersForm from '../components/SpeakersForm'\r\nimport SponsorsForm from '../components/SponsorsForm'\r\nimport VenueTabForm from '../components/VenueTabForm'\r\nimport MapMarkerForm from '../components/MapMakerForm'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport GeneralCard from './GeneralCard';\r\nimport './CreateEventForm.css';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Toast from 'react-bootstrap/Toast'\r\n\r\nimport Image from 'react-bootstrap/Image'\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport Constants from '../constant/constants'\r\n/**\r\n * @param changeContent - change screen\r\n * @param id - Event to edit based on ID\r\n */\r\n//Screen: Creates events based on FormObjects. \r\nconst CreateEventForm = (props) => { // Todo rename to CreateEventScreen\r\n    const baseURL = Constants.baseURL;\r\n\r\n    //Visible forms controller\r\n    const [ActiveForm, setActiveForm] = useState(\"GeneralForm\")\r\n    const [EditID, setEditID] = useState(props.id)\r\n    const [Files, setFiles] = useState([])\r\n    let container;\r\n    //Modal and Toast stuff\r\n    const [ToastShow, setToastShow] = useState(false)\r\n    const [ToastHeader, setToastHeader] = useState(\"\")\r\n    const [ToastBody, setToastBody] = useState(\"\")\r\n\r\n    const [ModalShow, setModalShow] = useState(false)\r\n    const [ModalText, setModalText] = useState()\r\n    //ReAuth\r\n    const [ModalAuth, setModalAuth] = useState(false)\r\n    const [Changes, setChanges] = useState(false)\r\n    //Form variables\r\n    const [FormObjects, setFormObjects] = useState({\r\n        //About/General Form\r\n        eventPass: \"\",\r\n        eventName: \"\",\r\n        visibility: \"hidden\",\r\n        address: \"\",\r\n        lat: \"\",\r\n        long: \"\",\r\n        eventColor: \"\",\r\n        eventImage: \"\", //https://sahat.lamk.fi/saveFile\r\n        eventWebUrl: \"\",\r\n        bodyText1: \"\",\r\n        bodyText2: \"\",\r\n        bodyText3: \"\",\r\n        bodyText4: \"\",\r\n        disclaimer1: \"\",\r\n        disclaimer2: \"\",\r\n        placeName: \"\",\r\n        placeAddress: \"\",\r\n        placePhone: \"\",\r\n        placeEmail: \"\",\r\n        eventTitle: \"\",\r\n        MiWebsite: \"\",\r\n        MiOrg: \"\",\r\n        MiEmail: \"\",\r\n        //other forms\r\n        participants: [],\r\n        programme: [],\r\n        speakers: [],\r\n        sponsors: [],\r\n        mapmarkers: {\r\n            restaurants: [],\r\n            hotels: [],\r\n            others: [],\r\n        },\r\n        venue: [],\r\n        //more about from stuff (deprecated)\r\n        bodyText: [],\r\n        disclaimer: [],\r\n        \r\n    })\r\n    //Input event id, get data to set formobjects\r\n    async function parseEventData(id){\r\n        if(Changes){\r\n            return null\r\n        }\r\n        let data = await getEventData(id);\r\n        if(data === null){\r\n            return null;\r\n        }\r\n        let pass = await getPassData(data ? data.metadata.eventName : null)\r\n        console.log(pass)\r\n        if(data){\r\n            setFormObjects({\r\n                //About Form\r\n                eventPass: `${pass}`,\r\n                eventName: `${data.metadata.eventName}`,\r\n                eventImage: `${data.metadata.eventImage}`, //https://sahat.lamk.fi/saveFile\r\n                eventColor: `${data.metadata.colorScheme}`,\r\n                visibility: `${data.metadata.visibility}`,\r\n                address: `${data.metadata.address}`,\r\n                lat: `${data.metadata.lat}`,\r\n                long: `${data.metadata.long}`,\r\n                eventWebUrl: `${data.about.eventWebUrl}`,\r\n                bodyText1: `${data.about.bodyText1}`,\r\n                bodyText2: `${data.about.bodyText2}`,\r\n                bodyText3: `${data.about.bodyText3}`,\r\n                bodyText4: `${data.about.bodyText4}`,\r\n                disclaimer1: `${data.about.disclaimer1}`,\r\n                disclaimer2: `${data.about.disclaimer2}`,\r\n                placeName: `${data.about.eventPlace.name}`,\r\n                placeAddress: `${data.about.eventPlace.address}`,\r\n                placePhone: `${data.about.eventPlace.phone}`,\r\n                placeEmail: `${data.about.eventPlace.email}`,\r\n                eventTitle: `${data.about.title}`,\r\n                MiWebsite: `${data.about.moreInformation.eventWebsite}`,\r\n                MiOrg: `${data.about.moreInformation.organizer}`,\r\n                MiEmail: `${data.about.moreInformation.email}`,\r\n                participants: data.participants,\r\n                programme: data.programme,\r\n                speakers: data.speakers,\r\n                sponsors: data.sponsors,\r\n                bodyText: data.about.bodyText,\r\n                disclaimer: data.about.disclaimer,\r\n                venue: data.venue,\r\n                mapmarkers: data.mapData\r\n            })\r\n        }\r\n    }\r\n    //When EditID is set and if it excists, run parseEventData\r\n    useEffect(() => {\r\n        \r\n        if(EditID){\r\n            parseEventData(EditID);\r\n        }\r\n        else{\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [EditID])\r\n\r\n\r\n    //Variables for selected navbar element highlighting\r\n\r\n    //Change forms in the screen\r\n    function selectForm(e){\r\n        setActiveForm(e.target.name)\r\n    }\r\n    if(ActiveForm === \"AboutForm\"){\r\n        container = <AboutForm \r\n            editForm={changeHandler}\r\n            appendForm={appendForm} \r\n            bodyTexts={FormObjects.bodyText} \r\n            disclaimers={FormObjects.disclaimer} \r\n            FO={FormObjects}\r\n            fileToUpload={fileToUpload}\r\n        />\r\n    }\r\n    else if(ActiveForm === \"GeneralForm\"){\r\n        container = <GeneralCard\r\n            editForm={changeHandler}\r\n            appendForm={appendForm}\r\n            FO={FormObjects}\r\n            fileToUpload={fileToUpload}\r\n            ID={EditID}\r\n            latlongForm={latlongForm}\r\n        />\r\n    }\r\n    else if(ActiveForm === \"ParticipantsForm\"){\r\n        container = <ParticipantsForm \r\n        editForm={appendForm}\r\n        subForm={FormObjects.participants}/>\r\n    }\r\n    else if(ActiveForm === \"ProgrammeForm\"){\r\n        container = <ProgrammeForm \r\n        editForm={appendForm} \r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.programme}/>\r\n    }\r\n    else if(ActiveForm === \"SpeakersForm\"){\r\n        container = <SpeakersForm \r\n        editForm={appendForm} \r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.speakers}\r\n        EditID={EditID}\r\n        />\r\n    }\r\n    else if(ActiveForm === \"SponsorsForm\"){\r\n        container = <SponsorsForm \r\n        editForm={appendForm} \r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.sponsors}\r\n        EditID={EditID}/>\r\n    }\r\n    else if(ActiveForm === \"VenueTabForm\"){\r\n        container = <VenueTabForm \r\n        editForm={appendForm} \r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.venue}\r\n        EditID={EditID}/>\r\n    }\r\n    else if(ActiveForm === \"MapMarkerForm\"){\r\n        container = <MapMarkerForm\r\n        editForm={appendForm}\r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.mapmarkers}\r\n        EditID={EditID}/>\r\n    }\r\n    else{\r\n        container = null\r\n    }\r\n    //changes formobjects, also gets rid of path from file inputs\r\n    function changeHandler(e){ //tuntuu redundantilta, vois poistaa myöhemmin emt.\r\n        //console.log(e.target)\r\n        //e.preventDefault();\r\n        if(e.target.type === \"file\"){\r\n            setFormObjects({\r\n                ...FormObjects,\r\n                [e.target.name]: [(e.target.value).match(/[^\\\\/]*$/)[0]]\r\n            })\r\n        }\r\n        else{\r\n            setFormObjects({\r\n                ...FormObjects,\r\n                [e.target.name]: [e.target.value]\r\n            })\r\n        }\r\n        setChanges(true)\r\n    }\r\n    //same as changeHandler, but target and value is more specified\r\n    function appendForm(target,value){\r\n        setFormObjects({\r\n            ...FormObjects,\r\n            [target]: value\r\n        })\r\n        setChanges(true)\r\n    }\r\n    function latlongForm(lat, long){\r\n        setFormObjects({\r\n            ...FormObjects,\r\n            lat: lat,\r\n            long: long\r\n        })\r\n        setChanges(true)\r\n    }\r\n    //Complete form (to send to back-end)\r\n    let finalForm = {\r\n        eventPass: `${FormObjects.eventPass}`,\r\n        metadata: {\r\n            eventName: `${FormObjects.eventName}`,\r\n            eventImage: `${FormObjects.eventImage}`,\r\n            visibility: `${FormObjects.visibility}`,\r\n            colorScheme: `${FormObjects.eventColor}`,\r\n            address: `${FormObjects.address}`,\r\n            lat: `${FormObjects.lat}`,\r\n            long: `${FormObjects.long}`\r\n        },\r\n        about: {\r\n            eventWebUrl: `${FormObjects.eventWebUrl}`,\r\n            eventPlace: {\r\n                name: `${FormObjects.placeName}`,\r\n                address: `${FormObjects.placeAddress}`,\r\n                phone: `${FormObjects.placePhone}`,\r\n                email: `${FormObjects.placeEmail}`\r\n            },\r\n            title: `${FormObjects.eventTitle}`,\r\n            // bodyText: FormObjects.bodyText, //implemented in mobile?\r\n            bodyText1: `${FormObjects.bodyText1}`,\r\n            bodyText2: `${FormObjects.bodyText2}`,\r\n            bodyText3: `${FormObjects.bodyText3}`,\r\n            bodyText4: `${FormObjects.bodyText4}`,\r\n            moreInformation: {\r\n                eventWebsite: `${FormObjects.MiWebsite}`,\r\n                organizer: `${FormObjects.MiOrg}`,\r\n                email: `${FormObjects.MiEmail}`\r\n            },\r\n            // disclaimer: FormObjects.disclaimer //implemented in mobile?\r\n            disclaimer1: `${FormObjects.disclaimer1}`,\r\n            disclaimer2: `${FormObjects.disclaimer2}`,\r\n        },\r\n        participants: FormObjects.participants,\r\n        programme: FormObjects.programme,\r\n        speakers: FormObjects.speakers,\r\n        sponsors: FormObjects.sponsors,\r\n        venue: FormObjects.venue,\r\n        mapData: FormObjects.mapmarkers\r\n    }\r\n    //func to create event\r\n    function createEventPost(form){\r\n        let adminToken = localStorage.getItem(\"Session\")\r\n        let route;\r\n        if(EditID){\r\n            route = \"/updateEvent\" \r\n            form.id = EditID;\r\n            setModalText(\"Creating Event\");\r\n\r\n        }else{\r\n            route = \"/createEvent\"\r\n            setModalText(\"Editing Event\");\r\n\r\n        }\r\n        setModalShow(true)\r\n        if(form.eventPass === \"\"){\r\n            setModalShow(false)\r\n            toast(\"Error\", \"Password field is empty\")\r\n            return null\r\n        }\r\n        axios.post(baseURL+route, \r\n        form,\r\n        {\r\n            headers:{\r\n                Authorization: \"Bearer \"+adminToken\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            // handle success\r\n            //console.log(\"event create success\");\r\n            //console.log(response);\r\n            let id;\r\n            \r\n            if(EditID){\r\n                id = EditID;\r\n            }\r\n            else{\r\n                setEditID(response.data._id)\r\n                id = response.data._id\r\n            }\r\n\r\n            if(Files.length > 0){\r\n                setModalText(\"Uploading files . . .\")\r\n                uploadFiles(Files, id)\r\n            }\r\n            else{\r\n                //props.changeContent(\"AdminScreen\")\r\n                setModalShow(false)\r\n                toast(\"Success\", \"Changes were saved\")\r\n            }\r\n            setChanges(false)\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            //console.log(\"event create fail\");\r\n            \r\n            if(error.response){\r\n                \r\n                setModalShow(false)\r\n                toast(\"Error\",`${error.response.data.message}`)\r\n\r\n                if(error.response.status === 401){\r\n                    setModalAuth(true)\r\n                }\r\n            }\r\n            else{\r\n                setModalShow(false)\r\n                toast(\"Error\",\"Cannot connect to the server\")\r\n            }\r\n        })\r\n    }\r\n    function getPassData(eventName){\r\n        const req = axios.get(baseURL+\"/findEventPlaintextPass\",\r\n        {\r\n            headers:{\r\n              Authorization: \"Bearer \"+localStorage.getItem(\"Session\")\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res) {\r\n            let pass = \"\"\r\n            for(let i in res.data){\r\n                if(res.data[i].eventName === eventName){\r\n                    pass = res.data[i].eventPass\r\n                    break;\r\n                }\r\n            }\r\n            return pass;\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n\r\n            if(error.response && error.response.status === 401){\r\n                setModalAuth(true)\r\n            }\r\n            return \"\"\r\n        })\r\n    }\r\n    //input event id, get eventdata\r\n    function getEventData(id){\r\n        const req = axios.post(baseURL+\"/findEventAdmin\",{\r\n            id: id\r\n        },\r\n        {\r\n            headers:{\r\n              Authorization: \"Bearer \"+localStorage.getItem(\"Session\")\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res) {\r\n            return res.data;\r\n        })\r\n        .catch(function (error) {\r\n            //console.log(error);\r\n            //getEventData(id)\r\n            if(error.response && error.response.status === 401){\r\n                setModalAuth(true)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    //function that uploads files.\r\n    function uploadFile(file, cat, id){\r\n        let fd = new FormData();\r\n        //console.log(file)\r\n        fd.append(\"id\", id)\r\n        fd.append(\"myFiles\", file)\r\n        setModalText(\"Processing: \"+file.name);\r\n        const req = axios.post(baseURL+\"/saveFile\",\r\n        fd, \r\n        {\r\n            headers: {\r\n                'Content-Type': false,\r\n                'processdata': false,\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res){\r\n            //console.log(res)\r\n            setModalText(\"Successfully sent file: \"+file.name);\r\n            return true\r\n        })\r\n        .catch(function (error){\r\n            //console.log(error);\r\n\r\n            if(error.response.status === 401){\r\n                setModalAuth(true)\r\n            }\r\n            return false\r\n        })\r\n    }\r\n\r\n    /*\r\n    {\r\n        category: kategoria,\r\n        file: tiedosto,\r\n        bound: (ei kahta eventImage paitsi muut)\r\n    }\r\n    */\r\n    async function uploadFiles(files, id){\r\n        //let i;\r\n        //console.log(\"ID on \" +id)\r\n        // for(i = 0; i < files.length; i++){\r\n        //     await uploadFile(files[i].file, \"myFiles\", id)) \r\n        // }\r\n        let retry = 0;\r\n        while(files.length > 0 && retry < 3){\r\n            if(await uploadFile(files[0].file, \"myFiles\", id)){\r\n                retry = 0\r\n                files.splice(0, 1);\r\n            }\r\n            else{\r\n                //console.log(\"Retry file\")\r\n                retry++;\r\n            }\r\n        }\r\n        if(retry >= 3){\r\n            setModalShow(false)\r\n            toast(\"Error\",\"Failed to upload a file after multiple attempts\")\r\n        }\r\n        else{\r\n            setModalShow(false)\r\n            toast(\"Success\",\"Changes were saved\")\r\n        }\r\n        //props.changeContent(\"AdminScreen\")\r\n    }\r\n    //adds file to list of files to upload\r\n    function fileToUpload(e){\r\n        let files = Files;\r\n        let file = e.target.files[0]\r\n        let category = e.target.name;\r\n        //Check if file already exists or (incase of eventImage) is already bound to input\r\n        let found = false;\r\n        let i;\r\n        for(i = 0; i < files.length; i++){\r\n            if(e.target.name === \"eventImage\" && \r\n            files[i].bound === e.target.name){\r\n                found = true;\r\n                break;\r\n            }\r\n            else if(file && files[i].file.name === file.name){\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if(found){\r\n            //console.log(\"Dup found\")\r\n            files.splice(i,1);\r\n        }\r\n        else{\r\n            //console.log(\"dup not found\")\r\n        }\r\n        files.push(\r\n            {\r\n                category: category,\r\n                file: file,\r\n                bound: e.target.name\r\n            }\r\n        );\r\n\r\n        setFiles(files)\r\n        //console.log(Files)\r\n    }\r\n\r\n    function toast(header, body){\r\n        setToastHeader(header)\r\n        setToastBody(body)\r\n        setToastShow(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"CreateEventForm\">\r\n            <Modal show={ModalShow} backdrop=\"static\" keyboard={false}>\r\n                <Modal.Header>Processing request <Spinner animation=\"border\"/></Modal.Header>\r\n                <Modal.Body>{ModalText}</Modal.Body>\r\n            </Modal>\r\n            <Modal show={ModalAuth} backdrop=\"static\" keyboard={false}>\r\n                <Modal.Header>Authentication token has expired. Please reauthenticate and try again.</Modal.Header>\r\n                <Modal.Body>\r\n                    <LoginScreen\r\n                        changeContent={()=>{}}\r\n                        visibility={setModalAuth}\r\n                        EventID={EditID}\r\n                        return={(id)=>{parseEventData(id)}}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <div>\r\n                <Row style={{marginTop:'120px'}}>\r\n                    <Col>\r\n                        {container}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <div style={{position:'fixed', top:'0', width:'100%', backgroundColor:'white', zIndex:'2'}}>\r\n                <Navbar expand=\"lg\" style={{display:'flex', paddingLeft:'50px', paddingRight:'50px', justifyContent:'center', alignItems:'center', flexDirection:'row', backgroundColor:'white'}}>\r\n                    <Button style={{flex:'1'}} className=\"otherButtons\" onClick={()=>\r\n                    {\r\n                        if(Changes){\r\n                            if(window.confirm(\"Are you sure?! Unsubmitted events are not saved!\")){\r\n                                props.changeContent(\"AdminScreen\")\r\n                            }  \r\n                        }\r\n                        else{\r\n                            props.changeContent(\"AdminScreen\")\r\n                        }\r\n                    }}>Return to Main Menu</Button>\r\n                    <div style={{display:'flex', flex:'6', alignContent: 'center', justifyContent:'center', flexDirection:'row'}}>\r\n                        <Image src=\"https://pbs.twimg.com/profile_images/572706560015470592/Jszif-0y_normal.png\" style={{marginRight:'10px'}}/>\r\n                        <Navbar.Brand><h3>{FormObjects.eventName ? `${FormObjects.eventName}`:null}</h3></Navbar.Brand>\r\n                    </div>\r\n                    <Button style={{flex:'1'}} className=\"otherButtons\" onClick={()=>createEventPost(finalForm)}>Save Changes</Button>\r\n                </Navbar>\r\n                <div style={{display: 'flex', justifyContent: 'center'}} >\r\n                    <ButtonGroup className=\"navbarButtons\" style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                        <Button name=\"GeneralForm\" onClick={selectForm} className={ActiveForm === \"GeneralForm\" ? \"active\" : \"inactive\"}>General</Button>\r\n                        <Button name=\"AboutForm\" onClick={selectForm} className={ActiveForm === \"AboutForm\" ? \"active\" : \"inactive\"}>About</Button>\r\n                        <Button name=\"ParticipantsForm\" onClick={selectForm} className={ActiveForm === \"ParticipantsForm\" ? \"active\" : \"inactive\"}>Participants</Button>\r\n                        <Button name=\"ProgrammeForm\" onClick={selectForm} className={ActiveForm === \"ProgrammeForm\" ? \"active\" : \"inactive\"}>Programme</Button>\r\n                        <Button name=\"SpeakersForm\" onClick={selectForm} className={ActiveForm === \"SpeakersForm\" ? \"active\" : \"inactive\"}>Speakers</Button>\r\n                        <Button name=\"SponsorsForm\" onClick={selectForm} className={ActiveForm === \"SponsorsForm\" ? \"active\" : \"inactive\"}>Sponsors</Button>\r\n                        <Button name=\"VenueTabForm\" onClick={selectForm} className={ActiveForm === \"VenueTabForm\" ? \"active\" : \"inactive\"}>Venue</Button>\r\n                        <Button name=\"MapMarkerForm\" onClick={selectForm} className={ActiveForm === \"MapMarkerForm\" ? \"active\" : \"inactive\"}>Map Marker</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n            </div>\r\n            \r\n            <div style={{position:\"fixed\", top:\"100px\",right:\"20px\", zIndex:'5000'}}>\r\n                <Toast onClose={()=>setToastShow(false)} show={ToastShow} delay={5000} style={{zIndex:'5'}} autohide>\r\n                    <Toast.Header className={ToastHeader === \"Success\" ? \"text-success\" : ToastHeader === \"Error\" ? \"text-danger\" : \"\"}>{ToastHeader}</Toast.Header>\r\n                    <Toast.Body>{ToastBody}</Toast.Body>\r\n                </Toast>\r\n            </div>\r\n            \r\n            {/* <div>{props.id ? <p>DebugMsg. Edit form \"{props.id}\"</p> : null}</div> */}\r\n            {/* <button name=\"AboutForm\" onClick={selectForm}>About</button>\r\n            <button name=\"ParticipantsForm\" onClick={selectForm}>Participants</button>\r\n            <button name=\"ProgrammeForm\" onClick={selectForm}>Programme</button>\r\n            <button name=\"SpeakersForm\" onClick={selectForm}>Speakers</button>\r\n            <button name=\"SponsorsForm\" onClick={selectForm}>Sponsors</button>\r\n            <button name=\"VenueTabForm\" onClick={selectForm}>VenueTab</button>\r\n            <button onClick={()=>createEventPost(finalForm)}>{props.id ? \"Edit Event\" : \"Create Event\"}</button>\r\n            <button onClick={()=>\r\n                {\r\n                    if(window.confirm(\"Are you sure?! Unsubmitted events are not saved!\")){\r\n                        props.changeContent(\"AdminScreen\")\r\n                    }  \r\n                }}>Cancel\r\n            </button> */}\r\n            \r\n            {/* <input type=\"file\" name=\"test\" encType=\"multipart/form-data\" onChange={(e)=>{\r\n                //fileToUpload(e)\r\n                uploadFile(e.target.files[0],\"test\")\r\n            }}/> */}\r\n            \r\n            <p>{Changes ? \"Are Changes\" : \"No Changes\"}</p>\r\n            <p>{JSON.stringify(finalForm, null, 2)}</p>\r\n            <p>{JSON.stringify(Files,null,2)}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default CreateEventForm\r\n\r\n/*\r\n    let formObject = {\r\n        eventPass: \"eventin passu\",\r\n            metadata: {\r\n              eventName: \"simon testi 2\",\r\n              eventImage: \"Test\"\r\n            },\r\n            about: {\r\n              eventWebUrl: \"Test\",\r\n              eventPlace: {\r\n                  name: \"Test\",\r\n                  address: \"Test\",\r\n                  phone: \"Test\",\r\n                  email: \"Test\"\r\n            },\r\n            title: \"Test\",\r\n            bodyText1: \"Test\",\r\n            bodyText2: \"Test\",\r\n            bodyText3: \"Test\",\r\n            bodyText4: \"Test\",\r\n            moreInformation: {\r\n                eventWebsite: \"Test\",\r\n                organizer: \"Test\",\r\n                email: \"Test\"\r\n            },\r\n            disclaimer1: \"Test\",\r\n            disclaimer2: \"Test\"\r\n        },\r\n        participants: [\r\n            {\r\n                Country: \"Test\",\r\n                FirstName: \"Test\",\r\n                LastName: \"Test\",\r\n                Email: \"Test\",\r\n                Phone: \"Test\",\r\n                Company: \"Test\"\r\n            }\r\n        ],\r\n        programme: [\r\n            {\r\n                \"Time\": \"Test\",\r\n                \"Location\": \"Test\",\r\n                \"Description\": \"Test\",\r\n                \"NameOfSpeaker\": \"Test\",\r\n                \"TitleOfSpeaker\": \"Test\",\r\n                \"SpecialTitleOfSpeaker\": \"Test\",\r\n                \"CompanyOfSpeaker\": \"Test\"\r\n            }\r\n        ],\r\n        speakers: [\r\n            {\r\n                \"Speaker\": \"Test\",\r\n                \"Title\": \"Test\",\r\n                \"SpecialTitle\": \"Test\",\r\n                \"Company\": \"Test\",\r\n                \"ImageID\": \"https://sahat.lamk.fi/images/speakerImages/${imageID}\"\r\n            }\r\n        ],\r\n        sponsors: [\r\n            {\r\n                \"CompanyName\": \"Test\",\r\n                \"CompanyUrl\": \"Test\",\r\n                \"ImageID\": \"Test\"\r\n            }\r\n        ]\r\n    }\r\n*/","import React, { useState, useEffect } from 'react';\r\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n// import PrivateRoute from './assets/context/PrivateRoute';\r\n// import { AuthContext } from './assets/context/Auth';\r\n// import Store from './assets/context/Store';\r\n// import { Jumbotron } from 'reactstrap';\r\n//import './App.css';\r\nimport './App.scss';\r\n// Components imports\r\n\r\n// import EventsNavi from './assets/components/eventsnavi/EventsNavi';\r\n// import EditingNavi from './assets/components/editingnavi/EditingNavi';\r\n// import InfoEdit from './assets/components/info/InfoEdit';\r\n\r\nimport LoginScreen from './assets/screens/LoginScreen'\r\nimport AdminScreen from './assets/screens/AdminScreen';\r\nimport CreateEventForm from './assets/components/CreateEventForm'\r\n\r\nconst App = () => {\r\n  const [Content, setContent] = useState(localStorage.getItem(\"Session\") ? \"AdminScreen\" : \"LoginScreen\");\r\n  const [EditID, setEditID] = useState(null)\r\n  let container;\r\n  //when EditID is set, move screen to top and render CreateScreen\r\n  useEffect(() => {\r\n    if(EditID != null){\r\n      window.scrollTo(0, 0)\r\n      setContent(\"CreateScreen\")\r\n    }\r\n  }, [EditID])\r\n  //If screen is changed to other than CreateScreen, set EditID to null\r\n  useEffect(() => {\r\n    if(Content === \"AdminScreen\" || Content === \"LoginScreen\"){\r\n      setEditID(null)\r\n    }\r\n  }, [Content])\r\n  //redundant\r\n  function setSession(input){\r\n    if(input === \"\"){\r\n      console.log(\"delete session\");\r\n      localStorage.clear();\r\n    }\r\n    else{\r\n      localStorage.setItem(\"Session\", input);\r\n    }\r\n  }\r\n  //redundant\r\n  function getSession(){\r\n    return localStorage.getItem(\"Session\");\r\n  }\r\n  function test()\r\n  {\r\n    setSession(\"token\");\r\n    setContent(\"AdminScreen\");\r\n    //props.changeSession(\"\");\r\n  }\r\n  //console.log(\"Session: \" +getSession());\r\n  //change screen based on Content\r\n  if(Content === \"LoginScreen\"){\r\n    container = \r\n    <div>\r\n      <LoginScreen changeContent={setContent} \r\n      visibility={()=>{}}/>\r\n      <button className=\"LoginScreen\" onClick={test}>Bypass</button>\r\n    </div>\r\n  }\r\n  if(Content === \"CreateScreen\"){\r\n    container =\r\n    <>\r\n      <CreateEventForm \r\n        changeContent={setContent} \r\n        id={EditID}\r\n      />\r\n    </>\r\n  }\r\n  else if(Content === \"AdminScreen\"){\r\n    container = \r\n      <AdminScreen \r\n        changeContent={setContent} \r\n        readSession={getSession} \r\n        changeSession={setSession}\r\n        changeID={setEditID}\r\n      />\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      {container}\r\n      <button style={{position:'fixed', left:'0', bottom:'0'}} onClick={()=>{localStorage.setItem(\"Session\", \"\");}}>TEST: Clear Token</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n// const [authTokens, setAuthTokens] = useState();\r\n// const setTokens = (data) => {\r\n//   localStorage.setItem(\"tokens\", JSON.stringify(data));\r\n//   setAuthTokens(data);\r\n// }\r\n\r\n    \r\n// <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\r\n//   <Router>\r\n    //     <div>\r\n    //     <Jumbotron>\r\n    //       <Route exact path=\"/\" component={Login} />\r\n    //         <Switch>\r\n    //           <Store>\r\n    //             <PrivateRoute path=\"/eventsnavi\" component={EventsNavi} />\r\n    //             <PrivateRoute path=\"/editingnavi\" component={EditingNavi} />\r\n    //           </Store>\r\n    //         </Switch>\r\n    //     </Jumbotron>\r\n    //     </div>\r\n    //   </Router>\r\n    // </AuthContext.Provider>","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nrender(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}