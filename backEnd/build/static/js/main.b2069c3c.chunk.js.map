{"version":3,"sources":["assets/screens/LoginScreen.js","assets/components/Event.js","assets/components/AddButton.jsx","assets/screens/AdminScreen.js","assets/components/AboutCard.jsx","assets/components/AboutForm.js","assets/components/XlsxConverter.js","assets/components/DeleteButton.jsx","assets/components/ParticipantsCard.jsx","assets/components/ParticipantsForm.js","assets/components/ProgrammeCard.js","assets/components/ProgrammeForm.js","assets/components/SpeakerCard.jsx","assets/components/SpeakersForm.js","assets/components/SponsorCard.jsx","assets/components/SponsorsForm.js","assets/components/VenueCard.jsx","assets/components/VenueTabForm.js","assets/components/MapMarkerCard.jsx","assets/components/MapMakerForm.js","assets/components/GeneralCard.jsx","assets/components/CreateEventForm.js","App.js","serviceWorker.js","index.js"],"names":["LoginScreen","props","useState","form","setForm","localStorage","setItem","Details","setDetails","canLogin","updateField","e","target","name","value","Container","Row","Col","style","display","flexDirection","justifyContent","alignItems","Card","className","autoComplete","Group","Label","Control","type","onChange","Text","Button","onClick","a","async","preventDefault","axios","post","baseURL","un","pw","then","response","visibility","data","token","changeContent","catch","error","toString","includes","Event","imgsrc","clickHandler","window","confirm","delet","id","console","log","edit","img","width","backgroundColor","Img","variant","src","border","color","Body","Title","Link","href","DeleteButton","AdminScreen","LoginVisibility","setLoginVisibility","EventList","setEventList","EventObject","setEventObject","Search","findMetadata","req","get","headers","Authorization","readSession","res","findEvent","eventId","deleteEvent","pageLoad","useEffect","listObjects","slice","reverse","map","item","index","metadata","eventName","key","_id","colorScheme","nid","changeID","eventImage","scrollTo","AboutModal","setAboutModal","Modal","show","onHide","Header","closeButton","Footer","position","left","Image","right","changeSession","alignContent","result","length","alignSelf","justifySelf","cont","sess","AboutCard","FormLabel","FormGroup","FormControl","as","size","defaultValue","bodyText1","bodyText2","bodyText3","bodyText4","placeName","placeAddress","placeEmail","OverlayTrigger","placement","delay","hide","overlay","Tooltip","placePhone","MiWebsite","MiOrg","MiEmail","disclaimer1","disclaimer2","AboutForm","editForm","FO","xlsxToJson","f","Promise","file","files","reader","FileReader","onload","xlsxBin","xlsx","read","wsName","SheetNames","ws","Sheets","jsonData","utils","sheet_to_json","header","check","i","splice","readAsBinaryString","SponsorCard","formObject","changeHandler","ImageID","ID","FirstName","LastName","Email","Phone","Company","Country","ParticipantsForm","subForm","Form","dataContainer","setSearch","cardHandler","forceCheck","height","fileToUpload","htmlFor","push","document","getElementById","reset","download","marginRight","marginLeft","flexWrap","InputGroup","onKeyDown","keyCode","currentTarget","parentNode","childNodes","ProgrammeCard","PdfIconElement","match","Pdf","counter","day","NameOfSpeaker","TitleOfSpeaker","SpecialTitleOfSpeaker","CompanyOfSpeaker","Time","Location","rows","Description","fileHandler","ProgrammeForm","FormToData","Data","setData","ActiveDay","setActiveDay","dataToForm","found","content","fix","newForm","replace","j","clickEmpty","getHighestDay","parseInt","dayHandler","highest","loop","dayButtons","takenDays","disabled","list","min","placeholder","ButtonGroup","vertical","marginTop","SpeakerCard","speakerImgsrc","Speaker","SpecialTitle","fluid","roundedCircle","URL","createObjectURL","changeImage","SpeakersForm","EditID","sponsorImgsrc","CompanyName","CompanyUrl","SponsorsForm","VenueCard","image","venueImgsrc","title","VenueTabForm","MapMarkerCard","markerImgsrc","formElement","ErrorMsg","setErrorMsg","markerType","description","category","sm","rating","webURL","address","FormText","query","apiurl","lat","lon","long","MapMarkerForm","restaurants","hotels","others","formToData","ActiveCat","setActiveCat","catHandler","newObj","destination","marginBottom","GeneralCard","generalImgsrc","eventPass","latlongForm","maxLength","eventColor","Check","label","checked","onError","CreateEventForm","container","ActiveForm","setActiveForm","setEditID","Files","setFiles","ToastShow","setToastShow","ToastHeader","setToastHeader","ToastBody","setToastBody","ModalShow","setModalShow","ModalText","setModalText","ModalAuth","setModalAuth","eventWebUrl","eventTitle","participants","programme","speakers","sponsors","mapmarkers","venue","bodyText","disclaimer","FormObjects","setFormObjects","selectForm","appendForm","getEventData","about","eventPlace","phone","email","moreInformation","eventWebsite","organizer","mapData","parseEventData","bodyTexts","disclaimers","finalForm","createEventPost","route","adminToken","getItem","retry","uploadFile","toast","uploadFiles","status","message","cat","fd","FormData","append","bound","body","backdrop","keyboard","Spinner","animation","top","Navbar","expand","paddingLeft","paddingRight","flex","Brand","Toast","onClose","zIndex","autohide","JSON","stringify","App","Content","setContent","setSession","input","clear","Boolean","location","hostname","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2069c3c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport axios from 'axios';\r\n/**\r\n * @param changeContent - changes screen\r\n * @param visibility    - changes visibility in AdminScreen\r\n */\r\nconst LoginScreen = (props) => {\r\n    const [form, setForm] = useState({});\r\n    localStorage.setItem(\"Form\", form);\r\n    const [Details, setDetails] = useState(\"\")\r\n    const baseURL = 'https://sahat.lamk.fi';\r\n    //let session = localStorage.getItem(\"Session\");\r\n    let canLogin = true;\r\n\r\n    // if(session !== null){\r\n    //     //console.log(\"Session in progress, initiate automatic login\");\r\n    //     props.changeContent(\"AdminScreen\");\r\n    // }\r\n    // else{\r\n    //     //console.log(\"normal login\");\r\n    // }\r\n    const updateField = e => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    async function clickHandler(e)\r\n    {\r\n        if(canLogin){\r\n            e.preventDefault();\r\n            if('un' in form && 'pw' in form){\r\n                canLogin = false;\r\n                setDetails(\"Processing ...\"); //\r\n                //username and password set\r\n                await axios.post(baseURL+'/adminLogin',{\r\n                    \"username\": form.un, // SahaAdmin1\r\n                    \"password\": form.pw // SahaPäälikkö1\r\n                })\r\n                .then(function (response) {\r\n                    // handle success\r\n                    canLogin = true;\r\n                    setDetails(\"Success\");\r\n                    //console.log(\"admin login success\");\r\n                    //console.log(response);\r\n                    //console.log(\"admin token:\");\r\n                    //console.log(response.data);\r\n                    props.visibility(false);\r\n                    //props.changeSession(response.data.token);\r\n                    localStorage.setItem(\"Session\", response.data.token);\r\n                    props.changeContent(\"AdminScreen\");\r\n                })\r\n                .catch(function (error) {\r\n                    // handle error\r\n                    canLogin = true;\r\n                    //props.visibility(false);\r\n                    //console.log(\"admin login fail\");\r\n                    //console.log(error);\r\n                    if(error.toString().includes(\"401\")){\r\n                        //console.log(\"Login incorrect\");\r\n                        setDetails(\"Incorrect username and/or password\");\r\n                    }\r\n                })\r\n                canLogin = true;\r\n            }\r\n            else{\r\n                //either username or password fields are empty\r\n                setDetails(\"Please input username and password\");\r\n            }\r\n        }\r\n    }\r\n    // function test()\r\n    // {\r\n    //     props.changeSession(\"token\");\r\n    //     props.changeContent(\"AdminScreen\");\r\n    //     //props.changeSession(\"\");\r\n    // }\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col style={{display: 'flex', flexDirection: 'column', justifyContent:'center', alignItems: 'center'}}>\r\n                    <Card>\r\n                        <Form className=\"LoginScreen\" autoComplete=\"off\">\r\n                            <Form.Group>\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"un\" onChange={updateField}/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" name=\"pw\" onChange={updateField}/>\r\n                                <Form.Text className=\"text-danger\">{Details}</Form.Text>\r\n                            </Form.Group>\r\n                            <Button onClick={clickHandler}>Login</Button>              \r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React from 'react'\r\n\r\nimport Card from 'react-bootstrap/Card'\r\n/**\r\n * \r\n * @param id - eventin ID\r\n * @param name - eventin nimi\r\n * @param delet - evokes deleteEvent\r\n * @param img - image name\r\n */\r\nconst Event = (props) => {\r\n    let baseURL = \"https://sahat.lamk.fi\"\r\n    let imgsrc;\r\n\r\n    if(props.img.includes(\"https\")){\r\n        imgsrc = props.img\r\n    }\r\n    else{\r\n        imgsrc = baseURL+`/public/${props.id}/${props.img}`\r\n    }\r\n    //console.log(props.name, imgsrc)\r\n    async function clickHandler(e){\r\n\r\n        if(e.target.name === \"delete\"){\r\n            if(window.confirm(`Are you sure you want to delete event \"${props.name}\"?`)){\r\n                props.delet(props.id)\r\n                console.log(\"Deleted event\")\r\n            }            \r\n        }\r\n        else if(e.target.name === \"edit\"){\r\n            //console.log(\"Event.js\")\r\n            props.edit(props.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: '18rem', backgroundColor:`${props.visibility === \"visible\" ? \"white\" : \"#e0e0e0\"}` }}>\r\n            {props.img ? <Card.Img className=\"rounded mb-0\" variant=\"top\" src={imgsrc} style={{border:`5px solid ${props.color}`}}/> : null}\r\n            <Card.Body>\r\n                <Card.Title>{props.name}</Card.Title>\r\n                {/* <Card.Subtitle>ID: {props.id}</Card.Subtitle> */}\r\n                <Card.Link href=\"#\" name=\"edit\" className=\"text-secondary\" onClick={clickHandler}>Edit</Card.Link>\r\n                <Card.Link href=\"#\" name=\"delete\" className=\"text-danger\" onClick={clickHandler}>Delete</Card.Link>\r\n            </Card.Body>\r\n            {/* <button name=\"edit\" onClick={clickHandler}>Edit</button><br/>\r\n            <button name=\"delete\" onClick={clickHandler}>Delete</button> */}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Event\r\n","import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport './AddButton.css';\r\n\r\nconst DeleteButton = props => {\r\n  return (\r\n      <Button className=\"addButton\" id={props.id} name={props.name} onClick={props.onClick} style={props.style}>\r\n        <div className=\"addButtonTextContainer\">\r\n          <p className=\"addButtonText\" id={props.id} name={props.name}>+</p>\r\n        </div>\r\n      </Button>\r\n  )\r\n}\r\n\r\nexport default DeleteButton;","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios';\r\n\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport Event from '../components/Event'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n//import Navbar from 'react-bootstrap/Navbar'\r\n//import Nav from 'react-bootstrap/Nav'\r\n\r\nimport Image from 'react-bootstrap/Image'\r\n//import FormControl from 'react-bootstrap/FormControl'\r\n//import Form from 'react-bootstrap/Form'\r\n\r\nimport AddButton from '../components/AddButton'\r\nimport { Modal } from 'react-bootstrap';\r\n/**\r\n * @param changeContent - changes screen\r\n * @param changeSession - changes session (as localstorage)\r\n * @param getSession    - gets current session (from localstorage)\r\n */\r\nconst AdminScreen = (props) => {\r\n    const [LoginVisibility, setLoginVisibility] = useState(false);\r\n    const baseURL = 'https://sahat.lamk.fi';\r\n    const [EventList, setEventList] = useState([]);\r\n    const [EventObject, setEventObject] = useState([])\r\n    const [Search, setSearch] = useState(\"\") // eslint-disable-line\r\n    let eventList;\r\n    if(props.readSession() === null){\r\n        console.log(\"Never should have come here.\");\r\n        props.changeContent(\"LoginScreen\");\r\n    }\r\n\r\n    async function clickHandler(e){\r\n        //console.log(e.target.id);\r\n\r\n        if(e.target.id === \"0\"){\r\n            setEventList(await findMetadata())\r\n        }\r\n        else if(e.target.id === \"1\"){\r\n            setLoginVisibility(true);\r\n        }\r\n        else if(e.target.id === \"2\"){\r\n            console.log(props.readSession());\r\n            props.changeContent(\"AdminScreen\");\r\n        }\r\n        else if(e.target.id === \"3\"){\r\n            console.log(\"Session is \" + props.readSession())\r\n            await axios.post(baseURL+\"/findEvent\",{\r\n                id: \"5e8dfbce0482b55473e7988b\"\r\n              },\r\n              {\r\n                headers:{\r\n                  Authorization: \"Bearer \"+props.readSession()\r\n                }\r\n                \r\n              })\r\n            .then(function (res) {\r\n                // handle success\r\n                console.log(res.data);\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n        }\r\n        else if(e.target.id === \"5\"){\r\n            const data = findMetadata();\r\n            data.then(function(result){\r\n                console.log(result);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            })\r\n        }\r\n        else if(e.target.id === \"6\"){\r\n            const data = findEvent(\"5e8dfbce0482b55473e7988b\");\r\n            data.then(function(result){\r\n                console.log(result);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            })\r\n        }\r\n        else if(e.target.id === \"7\"){\r\n            console.log(\"adminscreen button\")\r\n            await props.changeID(null)\r\n            await props.changeContent(\"CreateScreen\")\r\n        }\r\n        else if (e.target.id === \"8\"){\r\n            console.log(await findEvent(\"5ed4dfe73b77001e6faae67b\"))\r\n        }\r\n    }\r\n\r\n    async function findMetadata() {\r\n        const req = axios.get(baseURL+\"/findMetadata\", {\r\n            headers:{\r\n              Authorization: \"Bearer \"+props.readSession()\r\n            }\r\n        })\r\n        return req\r\n            .then(function (res) {\r\n            eventList = (res.data);\r\n            return eventList;\r\n            })\r\n            .catch(function (error) {\r\n            console.log(error);\r\n            return []\r\n            })\r\n    }\r\n    \r\n    const findEvent = function(eventId) {\r\n        const req = axios.post(baseURL+\"/findEvent\",{\r\n            id: eventId\r\n        },\r\n        {\r\n            headers:{\r\n              Authorization: \"Bearer \"+props.readSession()\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res) {\r\n            return res.data;\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //Siirretään update formiin kun sellainen tehdään\r\n    // const updateEvent = function(form) {\r\n\r\n    //     axios.post(baseURL+\"/updateEvent\",{\r\n    //         form\r\n    //       },\r\n    //       {\r\n    //         headers:{\r\n    //           Authorization: \"Bearer \"+props.readSession()\r\n    //         }\r\n    //       })\r\n    //     .then(function (res) {\r\n    //         return res.data;\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.log(error);\r\n    //     })\r\n    // }\r\n\r\n    const deleteEvent = function(eventId) {\r\n        const req = axios.post(baseURL+\"/deleteEvent\",{\r\n            id: eventId\r\n        },\r\n        {\r\n            headers:{\r\n              Authorization: \"Bearer \"+props.readSession()\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res) {\r\n            pageLoad()\r\n            return res.data;\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //EventList creation\r\n    useEffect(() => { //filter metadata based on Search state\r\n        let listObjects = EventList.slice(0).reverse().map((item, index)=>{\r\n            //console.log(item.metadata.eventName)\r\n            if(item.metadata.eventName.includes(Search)){\r\n\r\n                // return <DropdownButton key={index} id=\"dropdown-basic-button\" title={item.metadata.eventName} variant=\"outline-success\">\r\n                //     <Event name={item.metadata.eventName} id={item._id} delet={deleteEvent} edit={(nid)=>{props.changeID(nid); console.log(\"Screen\")}}/>\r\n                // </DropdownButton>\r\n                //console.log(item.metadata.eventImage)\r\n                return <div key={index}>\r\n                        <Event name={item.metadata.eventName} \r\n                            id={item._id}\r\n                            color={item.metadata.colorScheme}\r\n                            visibility={item.metadata.visibility}\r\n                            delet={deleteEvent}\r\n                            edit={(nid)=>{props.changeID(nid)}}\r\n                            img={item.metadata.eventImage}/>\r\n                </div> \r\n            }\r\n            else{\r\n                return null\r\n            }\r\n        })\r\n        setEventObject(listObjects)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [EventList])\r\n\r\n    // async function test(){\r\n    //     setEventList(await findMetadata())\r\n    // }\r\n    async function pageLoad(){\r\n        //console.log(\"Page load\")\r\n        setEventList(await findMetadata())\r\n    }\r\n    useEffect(() => {\r\n        pageLoad()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [Search])\r\n    useEffect(() => {\r\n        //console.log(\"Admin Screen loaded\")\r\n        pageLoad()\r\n        window.scrollTo(0, 0)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const [AboutModal, setAboutModal] = useState(false) // eslint-disable-line\r\n\r\n    return (\r\n        <>\r\n        <Modal show={AboutModal} onHide={()=>{setAboutModal(false)}}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>About this software</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>Made by Simo Wesa, Pauli Sairanen and Mikael Petrow \r\n                    at LAB University of Applied Sciences, \r\n                    in cooperation with Finnish Sawmills Association.</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={()=>{setAboutModal(false)}} variant=\"primary\">Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        <div style={{display:'flex', flexDirection:'row', justifyContent:'center', alignItems:'center'}}>\r\n            <Button onClick={()=>{setAboutModal(true)}} style={{position:'absolute',left:'30px'}} variant=\"outline-success\">About</Button>\r\n            <Image src=\"https://sahateollisuus.com/wp-content/uploads/2019/03/st_www_logoetu.jpg\" width='30%'/>\r\n            <Button style={{position:'absolute',right:'30px'}} variant=\"outline-success\" onClick={()=>{\r\n                props.changeSession(\"\");\r\n                props.changeContent(\"LoginScreen\");\r\n            }}>Logout</Button>\r\n        </div>\r\n\r\n        {/* <div id=\"Toolbar\">\r\n            <div id=\"Toolbar-tools\">\r\n                <button className=\"ToolButton\" id=\"1\" onClick={clickHandler}>Reauth test</button>\r\n                <button className=\"ToolButton\" id=\"2\" onClick={clickHandler}>Test 2</button>\r\n                <button className=\"ToolButton\" id=\"3\" onClick={clickHandler}>Test 3</button>\r\n                <button className=\"ToolButton\" id=\"4\" onClick={clickHandler}>Test 4</button>\r\n                <button className=\"ToolButton\" id=\"5\" onClick={clickHandler}>Test 5</button>\r\n                <button className=\"ToolButton\" id=\"6\" onClick={clickHandler}>Test 6</button>\r\n                <button className=\"ToolButton\" id=\"8\" onClick={clickHandler}>Test 8</button>\r\n            </div>\r\n        </div> */}\r\n        <div style={{display: 'flex', flexDirection:'column', justifyContent:'center', alignContent: 'center'}}>\r\n            <AddButton id=\"7\" onClick={(e) => clickHandler(e)}/>\r\n            {EventObject.length > 0 ? EventObject : <p style={{alignSelf:'center', justifySelf:'center'}}>Cannot connect to the server</p>}\r\n        </div>\r\n        {LoginVisibility ? \r\n            <div id=\"ReAuth\">\r\n                <p id=\"ReAuthText\">Authecation token invalid.</p>\r\n                <LoginScreen \r\n                changeContent={(cont) => {props.changeContent(cont)}}\r\n                readSession={() => {props.readSession()}} \r\n                changeSession={(sess) => {props.changeSession(sess)}}\r\n                visibility={setLoginVisibility}/>\r\n            </div> : null}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport './AboutCard.css';\r\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap'\r\n\r\nconst AboutCard = props => {\r\n  let form = props.form\r\n  \r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    form = props.form\r\n  })\r\n  // function changeHandler(e){\r\n  //   let data = props.data;\r\n  //   data = data.slice(0).reverse()\r\n  //   data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n  //   data = data.slice(0).reverse()\r\n  //   props.editForm(data)\r\n  // }\r\n\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    <Form onChange={(e)=> props.onChange(e)}>\r\n      <Card>\r\n        <div className=\"bigDiv\">\r\n          <FormLabel>Welcome Text</FormLabel>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Chapter 1</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"bodyText1\" defaultValue={form.bodyText1}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Chapter 2</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"bodyText2\" defaultValue={form.bodyText2}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Chapter 3</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"bodyText3\" defaultValue={form.bodyText3}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Chapter 4</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"bodyText4\" defaultValue={form.bodyText4}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <div className=\"bigDiv\">\r\n          <FormLabel>Venue Information</FormLabel>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Name of the Venue</FormLabel>\r\n                <FormControl size=\"sm\" name=\"placeName\" defaultValue={form.placeName}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Address of the Venue</FormLabel>\r\n                <FormControl size=\"sm\" name=\"placeAddress\" defaultValue={form.placeAddress}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Email of the Venue</FormLabel>\r\n                <FormControl size=\"sm\" name=\"placeEmail\" defaultValue={form.placeEmail}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Phone of the Venue</FormLabel>\r\n                <OverlayTrigger \r\n                placement=\"bottom\" \r\n                delay={{show: 250, hide: 250}}\r\n                overlay={<Tooltip>Include area code. Example: \"+358 12345678\"</Tooltip>}\r\n                >\r\n                <FormControl size=\"sm\" name=\"placePhone\" defaultValue={form.placePhone}></FormControl>\r\n                </OverlayTrigger>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <div className=\"bigDiv\">\r\n          <FormLabel>More Information</FormLabel>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Event Website</FormLabel>\r\n                <FormControl size=\"sm\" name=\"MiWebsite\" defaultValue={form.MiWebsite}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Event Organizer</FormLabel>\r\n                <FormControl size=\"sm\" name=\"MiOrg\" defaultValue={form.MiOrg}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Email of the Organizer</FormLabel>\r\n                <FormControl size=\"sm\" name=\"MiEmail\" defaultValue={form.MiEmail}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <div className=\"bigDiv\">\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Disclaimers</FormLabel>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"disclaimer1\" defaultValue={form.disclaimer1}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormControl as=\"textarea\" size=\"sm\" name=\"disclaimer2\" defaultValue={form.disclaimer2}></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default AboutCard;","import React from 'react'\r\n// import Card from 'react-bootstrap/Card'\r\n//import BsForm from 'react-bootstrap/Form'\r\n// import Col from 'react-bootstrap/Col'\r\n// import Button from 'react-bootstrap/Button'\r\nimport AboutCard from '../components/AboutCard'\r\n/**\r\n * @param editForm - evoke changehandler\r\n * @param appendForm - evoke appendForm\r\n * @param bodytexts - bodytexts from formobjects\r\n * @param disclaimers - disclaimers from formobjects\r\n * @param FO - formobjects\r\n * @param fileToUpload - evoke fileToUpload\r\n */\r\nconst AboutForm = (props) => {\r\n    // const [Form, setForm] = useState(props.bodyTexts ? props.bodyTexts : [])\r\n    // const [Form2, setForm2] = useState(props.disclaimers ? props.disclaimers : [])\r\n    // const [Fields, setFields] = useState(createFields)\r\n    // const [Fields2, setFields2] = useState(createFields2)\r\n\r\n    //renders bodytexts\r\n    // function createFields(){\r\n    //     if(Form){\r\n    //         let list = Form.map((items,index)=>{\r\n    //             return (\r\n    //             <div key={index} id={'ta'+index}>\r\n    //                 <BsForm.Control as=\"textarea\" rows=\"3\" defaultValue={items} name={index} onChange={changeHandler}/>\r\n    //                 {/* <textarea defaultValue={items} name={index} onChange={changeHandler}/> */}\r\n    //                 {/* <button id={'rem'+index} name={index} onClick={remHandler}>-</button> //disabled until I can figure this out */}\r\n    //             </div>\r\n    //             )\r\n    //         })\r\n    //         return list;\r\n    //     }\r\n    // }\r\n    // function changeHandler(e){\r\n    //     //console.log(Form)\r\n    //     let temp = Form;\r\n    //     temp[e.target.name] = e.target.value;\r\n    //     setForm(temp)\r\n    // }\r\n    // function remHandler(e){\r\n        \r\n    // }\r\n    // function clickHandler(e){\r\n    //     let temp = Form;\r\n    //     temp.push(\"\")\r\n    //     setFields(createFields)\r\n    // }\r\n    //Redundant code below, \r\n    //changes disclaimers\r\n    // function createFields2(){\r\n    //     if(Form2){\r\n    //         let list = Form2.map((items,index)=>{\r\n    //             return (\r\n    //             <div key={index} id={'dis'+index}>\r\n    //                 <BsForm.Control as=\"textarea\" rows=\"3\" defaultValue={items} name={index} onChange={changeHandler2}/>\r\n    //                 {/* <textarea defaultValue={items} name={index} onChange={changeHandler2}/> */}\r\n    //                 {/* <button id={'rem'+index} name={index} onClick={remHandler}>-</button> //disabled until I can figure this out */}\r\n    //             </div>\r\n    //             )\r\n    //         })\r\n    //         return list;\r\n    //     }\r\n    // }\r\n    // function changeHandler2(e){\r\n    //     //console.log(Form2)\r\n    //     let temp = Form2;\r\n    //     temp[e.target.name] = e.target.value;\r\n    //     setForm2(temp)\r\n    // }\r\n    // function remHandler2(e){\r\n        \r\n    // }\r\n    // function clickHandler2(e){\r\n    //     let temp = Form2;\r\n    //     temp.push(\"\")\r\n    //     setFields2(createFields2)\r\n    // }\r\n    return(\r\n        // <div>\r\n        // <form onChange={props.editForm} autoComplete=\"off\" id=\"abtform\">\r\n        //     <input type=\"text\" name=\"eventPass\" placeholder=\"Event Password\" defaultValue={props.FO.eventPass}/>\r\n        //     <input type=\"text\" name=\"eventName\" placeholder=\"Event Name\" defaultValue={props.FO.eventName}/>\r\n        //     <input type=\"text\" name=\"visibility\" placeholder=\"Event Status(visible/hidden)\" defaultValue={props.FO.visibility}/>\r\n        //     <input type=\"text\" name=\"eventWebUrl\" placeholder=\"Event URL\" defaultValue={props.FO.eventWebUrl}/>\r\n        //     <input type=\"text\" name=\"placeName\" placeholder=\"Place Name\" defaultValue={props.FO.placeName}/>\r\n        //     <input type=\"text\" name=\"placeAddress\" placeholder=\"Place Address\" defaultValue={props.FO.placeAddress}/>\r\n        //     <input type=\"text\" name=\"placePhone\" placeholder=\"Place Phone\" defaultValue={props.FO.placePhone}/>\r\n        //     <input type=\"text\" name=\"placeEmail\" placeholder=\"Place Email\" defaultValue={props.FO.placeEmail}/>\r\n        //     <input type=\"text\" name=\"eventTitle\" placeholder=\"Event Title\" defaultValue={props.FO.eventTitle}/>\r\n        //     <input type=\"text\" name=\"MiWebsite\" placeholder=\"More info Website\" defaultValue={props.FO.MiWebsite}/>\r\n        //     <input type=\"text\" name=\"MiOrg\" placeholder=\"More info Organizer\" defaultValue={props.FO.MiOrg}/>\r\n        //     <input type=\"text\" name=\"MiEmail\" placeholder=\"More info Email\" defaultValue={props.FO.MiEmail}/>\r\n        //     <label>Event Image</label>\r\n        //     <input type=\"file\" id=\"test\" name=\"test\" onChange={(e)=>{\r\n        //         //props.appendForm(\"eventImage\", `https://sahat.lamk.fi/images/metadataImages/${e.target.files[0].name}`)\r\n        //         props.fileToUpload(e)\r\n        //     }}/>\r\n        // </form>\r\n        // {Fields}\r\n        // <button onClick={clickHandler}>Add BodyText</button>\r\n        // {Fields2}\r\n        // <button onClick={clickHandler2}>Add Disclaimer</button>\r\n        // </div>\r\n\r\n        // <Card>\r\n        //     <BsForm onChange={props.editForm} style={{padding: '30px'}}>\r\n        //         <BsForm.Row>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Event Password</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"eventPass\" defaultValue={props.FO.eventPass} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Event Name</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"eventName\" defaultValue={props.FO.eventName} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Title</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"eventTitle\" defaultValue={props.FO.eventTitle} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 {/* <BsForm.Label>Event visibility(visible/hidden)</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"visibility\" defaultValue={props.FO.visibility} /> */}\r\n        //                 <BsForm.Label>Event visiblity</BsForm.Label>\r\n        //                 <BsForm.Check type={'radio'} name=\"visibility\" label={'visible'} value=\"visible\" defaultChecked={props.FO.visibility == \"visible\" ? true : false}/> {/*eslint-disable-line*/}\r\n        //                 <BsForm.Check type={'radio'} name=\"visibility\" label={'hidden'} value=\"hidden\" defaultChecked={props.FO.visibility == \"hidden\" ? true : false}/> {/*eslint-disable-line*/}\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Event WebURL</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"eventWebUrl\" defaultValue={props.FO.eventWebUrl} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Event Image</BsForm.Label>\r\n        //                 <BsForm.Control type=\"file\" id=\"test\" name=\"eventImage\" onChange={(e)=>{\r\n        //                     //props.appendForm(\"eventImage\", `https://sahat.lamk.fi/images/metadataImages/${e.target.files[0].name}`)\r\n        //                     props.fileToUpload(e)\r\n        //                 }} />\r\n        //                 <BsForm.Label>{props.FO.eventImage ? \"Selected image: \"+ props.FO.eventImage : null}</BsForm.Label>\r\n\r\n        //             </BsForm.Group>\r\n        //         </BsForm.Row>\r\n\r\n\r\n        //         <BsForm.Row>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Name</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"placeName\" defaultValue={props.FO.placeName} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Address</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"placeAddress\" defaultValue={props.FO.placeAddress} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Phone</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"placePhone\" defaultValue={props.FO.placePhone} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Place Email</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"placeEmail\" defaultValue={props.FO.placeEmail} />\r\n        //             </BsForm.Group>\r\n        //         </BsForm.Row>\r\n        //         <BsForm.Row>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>More Info Website</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"MiWebsite\" defaultValue={props.FO.MiWebsite} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>More Info Organizer</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"MiOrg\" defaultValue={props.FO.MiOrg} />\r\n        //             </BsForm.Group>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>More Info Email</BsForm.Label>\r\n        //                 <BsForm.Control type=\"text\" name=\"MiEmail\" defaultValue={props.FO.MiEmail} />\r\n        //             </BsForm.Group>\r\n        //         </BsForm.Row>\r\n\r\n        //         <BsForm.Row>\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>BodyText</BsForm.Label>\r\n        //                 {Fields}\r\n        //                 <Button onClick={clickHandler}>Add Bodytext</Button>\r\n        //             </BsForm.Group>\r\n\r\n        //             <BsForm.Group as={Col}>\r\n        //                 <BsForm.Label>Disclaimer</BsForm.Label>\r\n        //                 {Fields2}\r\n        //                 <Button onClick={clickHandler2}>Add Disclaimer</Button>\r\n        //             </BsForm.Group>\r\n        //         </BsForm.Row>\r\n        //     </BsForm>\r\n        // </Card>\r\n\r\n        <AboutCard onChange={(e)=>{props.editForm(e)}} form={props.FO}/>\r\n    )\r\n}\r\n\r\nexport default AboutForm","import xlsx from 'xlsx'\r\n/**\r\n * @param f - e.target\r\n */\r\nexport default function xlsxToJson(f){\r\n    return new Promise((res)=>{\r\n        //console.log(f.files[0])\r\n        let file = f.files[0]\r\n        if(file && file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"){\r\n            let reader = new FileReader();\r\n            reader.onload = function(e){\r\n                let data = e.target.result;\r\n                let xlsxBin = xlsx.read(data, {type:'binary'});\r\n                const wsName = xlsxBin.SheetNames[0]\r\n                const ws = xlsxBin.Sheets[wsName];\r\n\r\n                const jsonData = xlsx.utils.sheet_to_json(ws,{header:1});\r\n                console.log(jsonData)\r\n                let check = true\r\n                while(check && jsonData.length > 0){\r\n                    for(let i in jsonData){\r\n                        if(!jsonData[i].length > 0){\r\n                            jsonData.splice(i,1)\r\n                            check = true;\r\n                            break;\r\n                        }\r\n                        else{\r\n                            check = false;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                res(jsonData)\r\n            };\r\n            reader.readAsBinaryString(file)\r\n        }\r\n        else{\r\n            console.log(\"invalid file input\")\r\n           res(null)\r\n        }\r\n    })\r\n    \r\n}","import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport './DeleteButton.css';\r\n\r\nconst DeleteButton = props => {\r\n  return (\r\n      <Button id={props.id} name={props.name} className=\"deleteButton\" onClick={props.onClick} style={props.style}>\r\n        <div className=\"deleteButtonTextContainer\">\r\n          <p id={props.id} name={props.name}>-</p>\r\n        </div>\r\n      </Button>\r\n  )\r\n}\r\n\r\nexport default DeleteButton;","import React from 'react';\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport { useEffect } from 'react';\r\nimport DeleteButton from './DeleteButton';\r\nimport './ParticipantsCard.css';\r\n\r\nconst SponsorCard = props => {\r\n\r\n  let formObject = props.form\r\n\r\n  if(formObject.ImageID && props.ID){\r\n    formObject.imgsrc = `https://sahat.lamk.fi/public/${props.ID}/${formObject.ImageID}`\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data[props.index][e.target.name] = e.target.value;\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  return (\r\n    <Card>\r\n      <div className=\"bigDiv\">\r\n        <h6>{props.index}</h6>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>First Name</FormLabel>\r\n                <FormControl size=\"sm\" value={formObject.FirstName} onChange={(e) => {changeHandler(e)}} name=\"FirstName\"></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Last Name</FormLabel>\r\n                <FormControl size=\"sm\" value={formObject.LastName} onChange={(e) => {changeHandler(e)}} name=\"LastName\"></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Email</FormLabel>\r\n                <FormControl size=\"sm\" value={formObject.Email} onChange={(e) => {changeHandler(e)}} name=\"Email\"></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Phone</FormLabel>\r\n                <OverlayTrigger \r\n                  placement=\"bottom\" \r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Include area code. Example: \"+358 12345678\"</Tooltip>}\r\n                  >\r\n                  <FormControl size=\"sm\" value={formObject.Phone} onChange={(e) => {changeHandler(e)}} name=\"Phone\"></FormControl>\r\n                </OverlayTrigger>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Company</FormLabel>\r\n                <FormControl size=\"sm\" value={formObject.Company} onChange={(e) => {changeHandler(e)}} name=\"Company\"></FormControl>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <FormLabel>Country ISO Code</FormLabel>\r\n                <OverlayTrigger \r\n                  placement=\"bottom\" \r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Example: \"FI\", \"SE\", \"FR\"</Tooltip>}\r\n                  >\r\n                  <FormControl size=\"sm\" value={formObject.Country} onChange={(e) => {changeHandler(e)}} name=\"Country\"></FormControl>\r\n                </OverlayTrigger>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <DeleteButton onClick={deleteHandler}/>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SponsorCard;","import React, {useState, useEffect} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport xlsxToJson from '../components/XlsxConverter'\r\n//import Card from 'react-bootstrap/Card'\r\nimport AddButton from '../components/AddButton'\r\nimport ParticipantsCard from '../components/ParticipantsCard'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n//import { ButtonGroup } from 'react-bootstrap'\r\n\r\n//import FormTable from '../components/FormTable'\r\nimport LazyLoad from 'react-lazyload';\r\nimport { forceCheck } from 'react-lazyload';\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\n//import FormTable from '../components/FormTable'\r\n/*\r\nparticipants: [\r\n    {\r\n        Country: \"Test\",\r\n        FirstName: \"Test\",\r\n        LastName: \"Test\",\r\n        Email: \"Test\",\r\n        Phone: \"Test\",\r\n        Company: \"Test\"\r\n    }\r\n],\r\n*/\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n */\r\nconst ParticipantsForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n    \r\n    // function clickHandler(e){\r\n    //     e.preventDefault(); //prevents page refresh\r\n    //     let form = Form;\r\n    //     form.push({\r\n    //         Country: e.target.form[0].value,\r\n    //         FirstName: e.target.form[1].value,\r\n    //         LastName: e.target.form[2].value,\r\n    //         Email: e.target.form[3].value,\r\n    //         Phone: e.target.form[4].value,\r\n    //         Company: e.target.form[5].value\r\n    //     })\r\n    //     document.getElementById(\"form\").reset();\r\n    //     setForm(form)\r\n    //     props.editForm(\"participants\", Form)\r\n    // }\r\n    function clickEmpty(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            Country: \"\",\r\n            FirstName: \"\",\r\n            LastName: \"\",\r\n            Email: \"\",\r\n            Phone: \"\",\r\n            Company: \"\"\r\n        })\r\n        setForm(form)\r\n        props.editForm(\"participants\", Form)\r\n    }\r\n    async function fileHandler(e){\r\n        e.preventDefault();\r\n        let jsonData = await xlsxToJson(e.target)\r\n        console.log(jsonData)\r\n        let form = []\r\n        for(let i in jsonData){\r\n            console.log(jsonData[i])\r\n            if(i > 0){\r\n                form.push(\r\n                    {\r\n                        Country: jsonData[i][0],\r\n                        FirstName: jsonData[i][1],\r\n                        LastName: jsonData[i][2],\r\n                        Email: jsonData[i][3],\r\n                        Phone: jsonData[i][4],\r\n                        Company: jsonData[i][5]\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        setForm(form)\r\n        props.editForm(\"participants\", Form)\r\n        document.getElementById(\"fileform\").reset();\r\n    }\r\n    const [Search, setSearch] = useState(\"\")\r\n    useEffect(() => {\r\n        if(Search !== \"\"){\r\n            forceCheck();\r\n        }\r\n    }, [Search])\r\n    let dataContainer;\r\n    function cardHandler(e){\r\n        // if(parseInt(Page) === Math.ceil(e.length/CardsPerPage) && Page !== \"0\"){\r\n        //     setPage((parseInt(Page)-1).toString())\r\n        // }\r\n        setForm(e)\r\n        props.editForm(\"participants\", e)\r\n    }\r\n    dataContainer = Form.slice(0).reverse().map((item, index)=>{\r\n        if((item.Company).includes(Search) || \r\n            (item.Country).includes(Search) || \r\n            (item.Email).includes(Search) || \r\n            (item.FirstName).includes(Search) || \r\n            (item.LastName).includes(Search) || \r\n            (item.Phone).includes(Search)||\r\n            Search === \"\"){\r\n            return(\r\n                <LazyLoad key={index} height={200}>\r\n                    <ParticipantsCard \r\n                        key={index} \r\n                        index={index} \r\n                        form={item} \r\n                        data={Form} \r\n                        editForm={cardHandler}\r\n                        fileToUpload={(e)=>props.fileToUpload(e)}\r\n                    />\r\n                </LazyLoad>\r\n            )\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    })\r\n    // const [Page, setPage] = useState(\"0\")\r\n    // const [CardsPerPage, setCardsPerPage] = useState(20)\r\n    // let totalPages = Math.ceil(dataContainer.length/CardsPerPage)\r\n\r\n    // let pageButtons = []\r\n    // if(totalPages > 1){\r\n    //     for(let i = 0; i < totalPages; i++){\r\n    //         pageButtons.push(\r\n    //             <Button key={i} name={i} onClick={(e)=>{setPage(e.target.name)}} disabled={Page === i.toString() ? true : false }>Page {i}</Button>\r\n    //         )\r\n    //     }\r\n    // }\r\n    // let cardContainer = dataContainer.splice(CardsPerPage*Page, CardsPerPage)\r\n\r\n    return(\r\n        <>\r\n        <form id=\"fileform\" style={{display:'flex',justifyContent:'center',alignContent:'center'}}>\r\n            <label htmlFor=\"hidden-input\" className=\"labelForHidden\">Choose Excel File</label>\r\n            <input id=\"hidden-input\" type=\"file\" className=\"hidden\" onChange={fileHandler}/>\r\n        </form>\r\n        <div style={{display:'flex',justifyContent:'center',alignContent:'center'}}>\r\n            <a href='/Excel/Participants.xlsx' download>Click to download base Excel Form</a>\r\n        </div>\r\n        <div style={\r\n            {\r\n                marginRight:'20px', marginLeft:'20px', display:'flex',justifyContent:'center', \r\n                alignItems:'center', flexDirection:'column', flexWrap:'wrap'\r\n            }}>\r\n            {/* <label>Cards per Page: </label>\r\n            <input type=\"number\" min=\"1\" defaultValue={CardsPerPage} onKeyDown={(e)=>{if(e.keyCode === 13 && e.target.value > 0){setCardsPerPage(e.target.value)}}}/>\r\n            {totalPages > 1 ? <h5>Current Page: {Page}</h5> : null}\r\n            <ButtonGroup style={{display:'flex', flexWrap:'wrap'}}>\r\n                {pageButtons}\r\n            </ButtonGroup> */}\r\n            <InputGroup style={{width:'50%'}}>\r\n                <FormControl style={{marginRight:'10px'}} onKeyDown={(e)=>{if(e.keyCode === 13) setSearch(e.target.value)}}/>\r\n                <Button className=\"otherButtons\" onClick={(e)=>{setSearch(e.currentTarget.parentNode.childNodes[0].value)}}>Search</Button>\r\n            </InputGroup>\r\n        </div>\r\n        <form autoComplete=\"off\" id=\"form\">\r\n            {/* <input type=\"text\" name=\"country\" placeholder=\"Country\"/>\r\n            <input type=\"text\" name=\"firstName\" placeholder=\"First Name\"/>\r\n            <input type=\"text\" name=\"lastName\" placeholder=\"Last Name\"/>\r\n            <input type=\"text\" name=\"email\" placeholder=\"Email\"/>\r\n            <input type=\"text\" name=\"phone\" placeholder=\"Phone\"/>\r\n            <input type=\"text\" name=\"company\" placeholder=\"Company\"/>\r\n            <button onClick={clickHandler}>Add Participant</button> */}\r\n            <AddButton onClick={clickEmpty}/>\r\n        </form>\r\n        <div className=\"list\">\r\n            {dataContainer}\r\n            {/* {cardContainer} */}\r\n        </div>\r\n\r\n        {/* <div className=\"footer\" style={{display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center', backgroundColor:'white', position:'fixed', bottom:'0', width:'100%'}}>\r\n            <p>This software uses react-lazyload - see library-license.txt</p>\r\n        </div> */}\r\n        {/* <label>.xlsx file input</label>\r\n        <input type=\"file\" onChange={fileHandler}/> */}\r\n        {/* {Form.length > 0 ? <FormTable form={Form} setForm={setForm}/> : null} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ParticipantsForm","import React from 'react';\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\n//import {Button} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\n//import {Image} from 'react-bootstrap'\r\nimport DeleteButton from '../components/DeleteButton'\r\nimport { useEffect } from 'react';\r\nimport './ProgrammeCard.css'\r\nimport PdfIcon from '@material-ui/icons/PictureAsPdfOutlined'\r\nimport NoPdfIcon from '@material-ui/icons/NoSim'\r\n\r\nconst ProgrammeCard = props => {\r\n    let formObject = props.form\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        formObject = props.form\r\n    })\r\n    function changeHandler(e){\r\n        let data = props.data;\r\n        data = data.slice(0).reverse()\r\n        if(e.target.type === \"file\"){\r\n            data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n          }\r\n          else{\r\n            data[props.index][e.target.name] = e.target.value\r\n          }\r\n        data = data.slice(0).reverse()\r\n        props.editForm(data)\r\n    }\r\n    function deleteHandler(){\r\n        let data = props.data;\r\n        data = data.slice(0).reverse()\r\n        data.splice(props.index, 1)\r\n        data = data.slice(0).reverse()\r\n        props.editForm(data)\r\n    }\r\n    function fileHandler(e){\r\n        props.fileToUpload(e)\r\n    }\r\n\r\n    let PdfIconElement\r\n    if (props.form.Pdf){\r\n        PdfIconElement = <PdfIcon className=\"pdfIcon\"></PdfIcon>\r\n    }\r\n    else {\r\n        PdfIconElement = <NoPdfIcon className=\"pdfIcon\"></NoPdfIcon>\r\n    }\r\n\r\n    let counter = 0;\r\n    for(let i = 0; i < props.data.length; i++){\r\n        if(props.data[i].day === formObject.day){\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n            <div className=\"wrapper\">\r\n                <div className=\"bigDiv\">\r\n                    <Form>\r\n                        <Row>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Name of the Speaker</FormLabel>\r\n                                    <FormControl size=\"sm\" onChange={changeHandler} name=\"NameOfSpeaker\" defaultValue={formObject.NameOfSpeaker}></FormControl>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Title of the Speaker</FormLabel>\r\n                                    <FormControl size=\"sm\" onChange={changeHandler} name=\"TitleOfSpeaker\" defaultValue={formObject.TitleOfSpeaker}></FormControl>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Special Title of the Speaker</FormLabel>\r\n                                    <FormControl size=\"sm\" onChange={changeHandler} name=\"SpecialTitleOfSpeaker\" defaultValue={formObject.SpecialTitleOfSpeaker}></FormControl>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Company of the Speaker</FormLabel>\r\n                                    <FormControl size=\"sm\" onChange={changeHandler} name=\"CompanyOfSpeaker\" defaultValue={formObject.CompanyOfSpeaker}></FormControl>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {/* <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Day</FormLabel>\r\n                                    <FormControl size=\"sm\" type=\"number\" min=\"0\" name=\"day\" value={formObject.day} onChange={changeHandler}></FormControl>\r\n                                </FormGroup>\r\n                            </Col> */}\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Time</FormLabel>\r\n                                    <OverlayTrigger \r\n                                      placement=\"bottom\" \r\n                                      delay={{show: 250, hide: 250}}\r\n                                      overlay={<Tooltip>Example \"15:00-15:30\"</Tooltip>}\r\n                                      >\r\n                                    <FormControl size=\"sm\" name=\"Time\" onChange={changeHandler} defaultValue={formObject.Time}></FormControl>\r\n                                    </OverlayTrigger>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Location</FormLabel>\r\n                                    <FormControl size=\"sm\" name=\"Location\" onChange={changeHandler} defaultValue={formObject.Location}></FormControl>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <FormLabel>Description</FormLabel>\r\n                                    <FormControl size=\"sm\" name=\"Description\" as=\"textarea\" rows=\"1\" defaultValue={formObject.Description} onChange={changeHandler}></FormControl>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"smallDiv\">\r\n                    {/* <FormGroup className=\"file\"> */}\r\n                                <FormLabel>{PdfIconElement}</FormLabel>\r\n                                <label htmlFor={\"hidden-\"+props.index} className=\"labelForHidden\" style={{width: \"111.25px\"}}>Choose PDF</label>\r\n                                <FormControl size=\"sm\" onChange={(e)=>{changeHandler(e); fileHandler(e)}} className=\"hidden\" name=\"Pdf\" type='file' id={'hidden-'+props.index}></FormControl>\r\n                    {/* </FormGroup> */}\r\n                </div>\r\n            </div>\r\n            {/* <Button className=\"deleteButton\" onClick={deleteHandler}>\r\n                <span className=\"deleteButtonText\">-</span>\r\n            </Button> */}\r\n            {counter > 1 ? <DeleteButton onClick={deleteHandler}/> : null}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ProgrammeCard;","import React, {useState, useEffect} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport xlsxToJson from '../components/XlsxConverter'\r\n\r\nimport ProgrammeCard from '../components/ProgrammeCard'\r\nimport AddButton from '../components/AddButton'\r\n//import DeleteButton from '../components/DeleteButton'\r\nimport { ButtonGroup, Button, Col, Row, Card, OverlayTrigger, Tooltip} from 'react-bootstrap' // eslint-disable-line\r\n//import { colors } from '@material-ui/core'\r\n//import BsForm from 'react-bootstrap/Form'\r\n/*Esim\r\n[\r\n    {\r\n        \"day\": \"Day 0\",\r\n        \"content\": [\r\n            {\r\n                Time: \"\",\r\n                Location: \"\",\r\n                Description: \"\",\r\n                NameOfSpeaker: \"\",\r\n                TitleOfSpeaker: \"\",\r\n                SpecialTitleOfSpeaker: \"\",\r\n                CompanyOfSpeaker: \"\",\r\n                Pdf: \"Testi.pdf\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"day\": \"Day 1\",\r\n        \"content\": [\r\n            {\r\n                Time: \"\",\r\n                Location: \"\",\r\n                Description: \"\",\r\n                NameOfSpeaker: \"\",\r\n                TitleOfSpeaker: \"\",\r\n                SpecialTitleOfSpeaker: \"\",\r\n                CompanyOfSpeaker: \"\",\r\n                Pdf: \"Testi.pdf\"\r\n            }\r\n        ]\r\n    }\r\n]\r\nTodo make function to convert ^^^ to vvv\r\n[\r\n    {day: \"Day 0\", jne},\r\n    {day: \"Day 0\", jne},\r\n    {day: \"Day 0\", jne},\r\n    {day: \"Day 1\", jne},\r\n    {day: \"Day 1, jne},\r\n    {day: \"Day 2\", jne},\r\n]\r\n*/\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n * @param fileToUpload - put file to list of files to upload\r\n */\r\nconst ProgrammeForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n    const [Data, setData] = useState(FormToData(Form))\r\n    const [ActiveDay, setActiveDay] = useState(\"1\") // eslint-disable-line\r\n    useEffect(() => {\r\n        props.editForm(\"programme\", Form)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [Form])\r\n\r\n    // const keys = \r\n    // [\r\n    //     \"Day\",\r\n    //     \"Time\",\r\n    //     \"Location\",\r\n    //     \"Description\",\r\n    //     \"Name of Speaker\",\r\n    //     \"Title of Speaker\",\r\n    //     \"Special Title of Speaker\",\r\n    //     \"Company\",\r\n    //     \"Pdf\"\r\n    // ]\r\n    function dataToForm(data){\r\n        let form = [];\r\n        for(let key in data){\r\n            let i;\r\n            let found = false;\r\n            for(i = 0; i < form.length; i++){\r\n                if('day' in form[i]){\r\n                    if(form[i].day === 'Day '+data[key].day){\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(found){\r\n                form[i].content.push(\r\n                    {\r\n                        Time: data[key].Time,\r\n                        Location: data[key].Location,\r\n                        Description: data[key].Description,\r\n                        NameOfSpeaker: data[key].NameOfSpeaker,\r\n                        TitleOfSpeaker: data[key].TitleOfSpeaker,\r\n                        SpecialTitleOfSpeaker: data[key].SpecialTitleOfSpeaker,\r\n                        CompanyOfSpeaker: data[key].CompanyOfSpeaker,\r\n                        Pdf: data[key].Pdf\r\n                    }\r\n                )\r\n            }\r\n            else{\r\n                form.push(\r\n                    {\r\n                        day: 'Day '+data[key].day,\r\n                        content: [\r\n                            {\r\n                                Time: data[key].Time,\r\n                                Location: data[key].Location,\r\n                                Description: data[key].Description,\r\n                                NameOfSpeaker: data[key].NameOfSpeaker,\r\n                                TitleOfSpeaker: data[key].TitleOfSpeaker,\r\n                                SpecialTitleOfSpeaker: data[key].SpecialTitleOfSpeaker,\r\n                                CompanyOfSpeaker: data[key].CompanyOfSpeaker,\r\n                                Pdf: data[key].Pdf\r\n                            }\r\n                        ]\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        let fix = false\r\n        for(let i in data){\r\n            if(ActiveDay === data[i].day){\r\n                fix = false;\r\n                break;\r\n            }\r\n            fix = true;\r\n        }\r\n        if(fix){\r\n            setActiveDay(\"1\")\r\n        }\r\n        setForm(form)\r\n        setData(FormToData(form))\r\n\r\n        //props.editForm(\"programme\", Form)\r\n    }\r\n    function FormToData(form){\r\n        let newForm = []\r\n        for(let i in form){\r\n            let day = form[i].day\r\n            day = day.replace(\"Day \", \"\")\r\n            let content = form[i].content\r\n\r\n            for(let j in content){\r\n                newForm.push(\r\n                {\r\n                    day: day,\r\n                    Time: content[j].Time,\r\n                    Location: content[j].Location,\r\n                    Description: content[j].Description,\r\n                    NameOfSpeaker: content[j].NameOfSpeaker,\r\n                    TitleOfSpeaker: content[j].TitleOfSpeaker,\r\n                    SpecialTitleOfSpeaker: content[j].SpecialTitleOfSpeaker,\r\n                    CompanyOfSpeaker: content[j].CompanyOfSpeaker,\r\n                    Pdf: content[j].Pdf\r\n                })\r\n            }\r\n        }\r\n        //console.log(form, newForm)\r\n        return newForm\r\n    }\r\n    function clickEmpty(e, day){ // eslint-disable-line\r\n        e.preventDefault();\r\n        let form = Form\r\n        let i;\r\n        let found = false;\r\n        for(i = 0; i < form.length; i++){\r\n            if('day' in form[i]){\r\n                if(form[i].day === \"Day \"+day){\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(found){\r\n            form[i].content.push(\r\n                {\r\n                    Time: \"\",\r\n                    Location: \"\",\r\n                    Description: \"\",\r\n                    NameOfSpeaker: \"\",\r\n                    TitleOfSpeaker: \"\",\r\n                    SpecialTitleOfSpeaker: \"\",\r\n                    CompanyOfSpeaker: \"\",\r\n                    Pdf: \"\"\r\n                }\r\n            )\r\n        }\r\n        else{\r\n            form.push(\r\n                {\r\n                    day: \"Day \"+day,\r\n                    content: [\r\n                        {\r\n                            Time: \"\",\r\n                            Location: \"\",\r\n                            Description: \"\",\r\n                            NameOfSpeaker: \"\",\r\n                            TitleOfSpeaker: \"\",\r\n                            SpecialTitleOfSpeaker: \"\",\r\n                            CompanyOfSpeaker: \"\",\r\n                            Pdf: \"\"\r\n                        }\r\n                    ]\r\n                }\r\n            )\r\n        }\r\n        //document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"programme\", form)\r\n        setData(FormToData(form))\r\n    }\r\n    function clickHandler(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        \r\n        let i;\r\n        let found = false;\r\n        for(i = 0; i < form.length; i++){\r\n            if('day' in form[i]){\r\n                if(form[i].day === \"Day \"+e.target.form[0].value){\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(found){\r\n            form[i].content.push(\r\n                {\r\n                    Time: e.target.form[1].value,\r\n                    Location: e.target.form[2].value,\r\n                    Description: e.target.form[3].value,\r\n                    NameOfSpeaker: e.target.form[4].value,\r\n                    TitleOfSpeaker: e.target.form[5].value,\r\n                    SpecialTitleOfSpeaker: e.target.form[6].value,\r\n                    CompanyOfSpeaker: e.target.form[7].value,\r\n                    Pdf: (e.target.form[8].value).match(/[^\\\\/]*$/)[0]\r\n                }\r\n            )\r\n        }\r\n        else{\r\n            form.push(\r\n                {\r\n                    day: \"Day \"+e.target.form[0].value,\r\n                    content: [\r\n                        {\r\n                            Time: e.target.form[1].value,\r\n                            Location: e.target.form[2].value,\r\n                            Description: e.target.form[3].value,\r\n                            NameOfSpeaker: e.target.form[4].value,\r\n                            TitleOfSpeaker: e.target.form[5].value,\r\n                            SpecialTitleOfSpeaker: e.target.form[6].value,\r\n                            CompanyOfSpeaker: e.target.form[7].value,\r\n                            Pdf: (e.target.form[8].value).match(/[^\\\\/]*$/)[0]\r\n                        }\r\n                    ]\r\n                }\r\n            )\r\n        }\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"programme\", form)\r\n        setData(FormToData(form))\r\n    }\r\n\r\n    async function fileHandler(e){\r\n        let jsonData = await xlsxToJson(e.target)\r\n        //console.log(jsonData)\r\n        let list = []\r\n        for(let i in jsonData){\r\n            if(i > 0){       \r\n                list.push(\r\n                    {\r\n                        day: jsonData[i][0],\r\n                        Time: jsonData[i][1],\r\n                        Location: jsonData[i][2],\r\n                        Description: jsonData[i][3],\r\n                        NameOfSpeaker: jsonData[i][4],\r\n                        TitleOfSpeaker: jsonData[i][5],\r\n                        SpecialTitleOfSpeaker: jsonData[i][6],\r\n                        CompanyOfSpeaker: jsonData[i][7],\r\n                        Pdf: jsonData[i][8],\r\n                    }\r\n                )\r\n            }   \r\n        }\r\n        dataToForm(list)\r\n        document.getElementById(\"fileform\").reset();\r\n    }\r\n    // https://imgur.com/a/XiuemMT\r\n    function getHighestDay(){\r\n        let data = Data;\r\n        let day = 0;\r\n        for(let i in data){\r\n            if(data[i].day > day){\r\n                day = parseInt(data[i].day);\r\n            }\r\n        }\r\n        return day;\r\n    }\r\n    function dayHandler(e){\r\n        if(e.target.name === \"plus\"){\r\n            clickEmpty(e, getHighestDay()+1)\r\n        }\r\n        else if(e.target.name === \"minus\"){\r\n            let data = Data;\r\n            let highest = getHighestDay();\r\n            let loop = true;\r\n            while(loop){\r\n                loop = false\r\n                for(let i in data){\r\n                    if(parseInt(data[i].day) === highest){\r\n                        data.splice(i,1)\r\n                        loop = true\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            dataToForm(data)\r\n        }\r\n        else if(e.target.name === \"day\"){\r\n            setActiveDay(e.target.id)\r\n        }\r\n        else{\r\n            clickEmpty(e, ActiveDay)\r\n        }\r\n    }\r\n    let dayButtons = [];\r\n    let takenDays = [];\r\n    dayButtons = Data.map((item, index)=>{\r\n        //console.log(index, item)\r\n        \r\n        if(!takenDays.includes(item.day)){\r\n            takenDays.push(item.day)\r\n            return(<Button key={index} name=\"day\" id={item.day} onClick={dayHandler} className={ActiveDay === item.day ? \"active\" : \"inactive\"} disabled={ActiveDay === item.day ? true : false}>Day {item.day}</Button>)\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    })\r\n\r\n    let dataContainer;\r\n    dataContainer = Data.slice(0).reverse().map((item, index)=>{\r\n        //console.log(item.day, ActiveDay)\r\n        if(Form.length > 0){\r\n            if(item.day === ActiveDay || ActiveDay == null){\r\n                return(<ProgrammeCard key={index} index={index} form={item} data={Data} editForm={(data) => dataToForm(data)} fileToUpload={(e)=>props.fileToUpload(e)}/>)\r\n            }\r\n            else{\r\n                return(null)\r\n            }\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    })\r\n    \r\n    return(\r\n        <>\r\n        <form id=\"fileform\" style={{display:'flex',justifyContent:'center',alignContent:'center'}}>\r\n            <label htmlFor=\"hidden-input\" className=\"labelForHidden\">Choose Excel File</label>\r\n            <input id=\"hidden-input\" type=\"file\" className=\"hidden\" onChange={fileHandler}/>\r\n        </form>\r\n        <div style={{display:'flex',justifyContent:'center',alignContent:'center'}}>\r\n            <a href='/Excel/Programme.xlsx' download>Click to download base Excel Form</a>\r\n        </div>        \r\n        <form autoComplete=\"off\" id=\"form\" style={{display:'none'}}>\r\n            <label >Day:</label>\r\n            <input type=\"number\" name=\"Date\" min=\"0\" defaultValue=\"1\"/>\r\n            <input type=\"text\" name=\"time\" placeholder=\"Time\"/>\r\n            <input type=\"text\" name=\"location\" placeholder=\"Event Location\"/>\r\n            {/* <input type=\"text\" name=\"description\" placeholder=\"Event Description\"/> */}\r\n            <textarea name=\"description\" placeholder=\"Event Description\"/>\r\n            <input  type=\"text\" name=\"speakerName\" placeholder=\"Speaker Name\"/>\r\n            <input  type=\"text\" name=\"speakerTitle\" placeholder=\"Speaker Title\"/>\r\n            <input  type=\"text\" name=\"speakerSpecialTitle\" placeholder=\"Speaker Special Title\"/>\r\n            <input  type=\"text\" name=\"speakerCompany\" placeholder=\"Speaker Company\"/>\r\n            <input  type=\"file\" name=\"test\" id=\"test\" \r\n            onChange={(e)=>{props.fileToUpload(e)}}/>\r\n            <button onClick={clickHandler}>Add Programme</button>\r\n            {/* <Button onClick={clickEmpty} style={\r\n                {\r\n                    height: '50px',\r\n                    width: '50px',\r\n                    backgroundColor: \"#32CD32\"\r\n                }}><span className=\"deleteButtonText\">+</span></Button> */}\r\n        </form>\r\n        {/* <Card style={{width:\"300px\", display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems:'center'}}>\r\n            <BsForm style={{width:'50%'}}>\r\n                <BsForm.Group>\r\n                    <BsForm.Label>Day</BsForm.Label>\r\n                    <BsForm.Control type=\"number\" name=\"Date\" min=\"0\" defaultValue=\"1\" id=\"Date\"/>\r\n                    <AddButton onClick={clickEmpty} style={{display: 'flex', justifyContent: 'center', alignItems:'center'}}/>\r\n                </BsForm.Group>\r\n            </BsForm>\r\n        </Card> */}\r\n        {/* style={{width:'300px', display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'flex-end'}} */}\r\n        <div style={{display:'flex', flexDirection:'row', justifyContent:'center', alignItems:'center'}}>\r\n            <div>\r\n                <ButtonGroup className=\"navbarButtons\">\r\n                    {dayButtons}\r\n                </ButtonGroup>\r\n                {/* <Button>Day 1</Button>\r\n                <Button>Day 2</Button>\r\n                <Button>Day 3</Button> */}\r\n            </div>\r\n            <div>\r\n                <ButtonGroup vertical style={{display:'flex', flexDirection:'column', alignItems:'center', justifyContent:'center'}}>\r\n                    <Button className=\"dayAddButton\" name=\"plus\" onClick={dayHandler}>+</Button>\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        delay={{show: 250, hide: 250}}\r\n                        overlay={<Tooltip>WARNING! Pressing this deletes the most recent day and all its contents!</Tooltip>}\r\n                        >\r\n                    <Button className=\"dayDeleteButton\" name=\"minus\" onClick={dayHandler}>-</Button>\r\n                    </OverlayTrigger>\r\n                </ButtonGroup>\r\n                {/* <Button name=\"test\" onClick={dayHandler}>test</Button> */}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            {Form.length > 0 ? <AddButton onClick={dayHandler}/> : null}\r\n            \r\n        </div>\r\n        {/* <ProgrammeCard/> */}\r\n        <div style={{marginTop: '20px', display: 'flex', justifyContent:'center', alignItems:'center'}}>\r\n            \r\n        </div>\r\n        {Data.length > 0 ? dataContainer : null}\r\n        {/* {Form.length > 0 ? \r\n            <FormTable \r\n                form={FormToData(Form)} \r\n                setForm={(data) => dataToForm(data)} \r\n                fileToUpload={(e)=>{props.fileToUpload(e)}}\r\n            /> : \r\n        null} */}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProgrammeForm","import React, {useEffect} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport DeleteButton from './DeleteButton';\r\nimport './SpeakerCard.css';\r\n\r\nconst SpeakerCard = props => {\r\n  let formObject = props.form\r\n  let ID = props.ID\r\n  if(formObject.ImageID && ID && !formObject.speakerImgsrc){\r\n    formObject.speakerImgsrc = `https://sahat.lamk.fi/public/${ID}/${formObject.ImageID}`\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    if(e.target.type === \"file\"){\r\n      data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n    }\r\n    else{\r\n      data[props.index][e.target.name] = e.target.value\r\n    }\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"speakerImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Name of the Speaker</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.Speaker} onChange={(e) => {changeHandler(e)}} name=\"Speaker\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Title of the Speaker</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.Title} onChange={(e) => {changeHandler(e)}} name=\"Title\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Special Title of the Speaker</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.SpecialTitle} onChange={(e) => {changeHandler(e)}} name=\"SpecialTitle\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Company of the Speaker</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.Company} onChange={(e) => {changeHandler(e)}} name=\"Company\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Description</FormLabel>\r\n                    <OverlayTrigger \r\n                      placement=\"bottom\" \r\n                      delay={{show: 250, hide: 250}}\r\n                      overlay={<Tooltip>More detailed description of the speaker</Tooltip>}\r\n                      >\r\n                    <FormControl as=\"textarea\" size=\"sm\" value={formObject.Description} onChange={(e) => {changeHandler(e)}} name=\"Description\"></FormControl>\r\n                  </OverlayTrigger>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n          <FormLabel><Image className=\"filePrev\" src={formObject.speakerImgsrc} fluid roundedCircle/></FormLabel>\r\n          <label htmlFor={'hidden-'+props.index} className=\"labelForHidden\">Choose image</label>\r\n          <FormControl size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} id={'hidden-'+props.index} className=\"hidden\" type='file' name=\"ImageID\"></FormControl>\r\n          {/* <Form.File size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} name=\"ImageID\"/> */}\r\n        </div>\r\n      </div>\r\n      {/* <Button className=\"deleteButton\" onClick={deleteFunction}>\r\n        <span className=\"deleteButtonText\">-</span>\r\n      </Button> */}\r\n      <DeleteButton onClick={deleteHandler}></DeleteButton>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SpeakerCard;","import React, {useState} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport xlsxToJson from '../components/XlsxConverter'\r\nimport SpeakerCard from '../components/SpeakerCard'\r\n//import Card from 'react-bootstrap/Card'\r\nimport AddButton from '../components/AddButton'\r\n/*\r\n{\r\n    \"Speaker\": \"Test\",\r\n    \"Title\": \"Test\",\r\n    \"SpecialTitle\": \"Test\",\r\n    \"Company\": \"Test\",\r\n    \"ImageID\": \"not implemented\" //https://sahat.lamk.fi/images/speakerImages/${imageID}\r\n}\r\n*/\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n * @param fileToUpload - put file to list of files to upload\r\n */\r\nconst SpeakersForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n    function clickHandler(e){ //deprecated\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            Speaker: e.target.form[0].value,\r\n            Title: e.target.form[1].value,\r\n            SpecialTitle: e.target.form[2].value,\r\n            Company: e.target.form[3].value,\r\n            ImageID: (e.target.form[4].value).match(/[^\\\\/]*$/)[0]\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"speakers\", Form)\r\n    }\r\n    function clickEmpty(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            Speaker: \"\",\r\n            Title: \"\",\r\n            SpecialTitle: \"\",\r\n            Company: \"\",\r\n            ImageID: \"\",\r\n            Description: \"\"\r\n        })\r\n        setForm(form)\r\n        props.editForm(\"speakers\", Form)\r\n    }\r\n    async function fileHandler(e){\r\n        let jsonData = await xlsxToJson(e.target)\r\n        let form = []\r\n        for(let i in jsonData){\r\n            //console.log(jsonData[i])\r\n            if(i > 0){\r\n                form.push(\r\n                    {\r\n                        Speaker: jsonData[i][0],\r\n                        Title: jsonData[i][1],\r\n                        SpecialTitle: jsonData[i][2],\r\n                        Company: jsonData[i][3],\r\n                        ImageID: jsonData[i][4],\r\n                        Description: jsonData[i][5],\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        setForm(form)\r\n        props.editForm(\"speakers\", Form)\r\n        document.getElementById(\"fileform\").reset();\r\n    }\r\n    let dataContainer;\r\n    function cardHandler(e){\r\n        setForm(e)\r\n        props.editForm(\"speakers\", e)\r\n    }\r\n    dataContainer = Form.slice(0).reverse().map((item, index)=>{\r\n        return(\r\n        <SpeakerCard \r\n            key={index} \r\n            index={index} \r\n            form={item} \r\n            data={Form} \r\n            editForm={cardHandler}\r\n            ID={props.EditID}  \r\n            fileToUpload={(e)=>props.fileToUpload(e)}\r\n        />)\r\n    })\r\n    return(\r\n        <>\r\n        <form id=\"fileform\" style={{display:'flex',justifyContent:'center',alignContent:'center'}}>\r\n            <label htmlFor=\"hidden-input\" className=\"labelForHidden\">Choose Excel File</label>\r\n            <input id=\"hidden-input\" type=\"file\" className=\"hidden\" onChange={fileHandler}/>\r\n        </form>\r\n        <div style={{display:'flex',justifyContent:'center',alignContent:'center'}}>\r\n            <a href='/Excel/Speakers.xlsx' download>Click to download base Excel Form</a>\r\n        </div>\r\n        <form autoComplete=\"off\" id=\"form\"> \r\n            <input style={{display: 'none'}} type=\"text\" name=\"speaker\" placeholder=\"Speaker\"/>\r\n            <input style={{display: 'none'}} type=\"text\" name=\"speakerTitle\" placeholder=\"Speaker Title\"/>\r\n            <input style={{display: 'none'}} type=\"text\" name=\"speakerSpecialTitle\" placeholder=\"Speaker Special Title\"/>\r\n            <input style={{display: 'none'}} type=\"text\" name=\"speakersCompany\" placeholder=\"Speakers Company\"/>\r\n            <input style={{display: 'none'}} type=\"file\" name=\"speakerImage\" id=\"test\" \r\n            onChange={(e)=>{props.fileToUpload(e)}}/>\r\n            <button style={{display: 'none'}} onClick={clickHandler}>Add Speaker</button>\r\n            <AddButton onClick={clickEmpty}/>\r\n        </form>\r\n        {dataContainer}\r\n        {/* {Form.length > 0 ? <FormTable form={Form} setForm={setForm} fileToUpload={(e)=>{props.fileToUpload(e)}}/> : null} */}\r\n        </>\r\n    )\r\n}\r\nexport default SpeakersForm","import React from 'react';\r\nimport {Card, FormGroup, FormLabel, FormControl} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport { useEffect } from 'react';\r\nimport DeleteButton from './DeleteButton';\r\nimport './SponsorCard.css';\r\n\r\n\r\nconst SponsorCard = props => {\r\n  let formObject = props.form\r\n\r\n  if(formObject.ImageID && props.ID && !formObject.sponsorImgsrc){\r\n    formObject.sponsorImgsrc = `https://sahat.lamk.fi/public/${props.ID}/${formObject.ImageID}`\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    if(e.target.type === \"file\"){\r\n      data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n    }\r\n    else{\r\n      data[props.index][e.target.name] = e.target.value\r\n    }\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"sponsorImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  return (\r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Name of the Company</FormLabel>\r\n                  <FormControl value={formObject.CompanyName} name=\"CompanyName\" onChange={(e) => changeHandler(e)} placeholder=\"Name of company\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Url of the Company</FormLabel>\r\n                  <FormControl value={formObject.CompanyUrl} name=\"CompanyUrl\" onChange={(e) => changeHandler(e)} placeholder=\"Url of company\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n          <FormLabel><Image className=\"filePrev\" src={formObject.sponsorImgsrc} fluid/></FormLabel>\r\n          <label htmlFor={'hidden-'+props.index} className=\"labelForHidden\">Choose image</label>\r\n          <FormControl className=\"hidden\" name=\"ImageID\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} type='file' id={'hidden-'+props.index}/>\r\n        </div>\r\n      </div>\r\n      <DeleteButton onClick={deleteHandler}/>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SponsorCard;","import React, {useState} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport SponsorCard from '../components/SponsorCard'\r\nimport AddButton from '../components/AddButton'\r\n/*\r\n{\r\n    \"CompanyName\": \"Test\",\r\n    \"CompanyUrl\": \"Test\",\r\n    \"ImageID\": \"Test\"\r\n}\r\n*/\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n * @param fileToUpload - put file to list of files to upload\r\n */\r\nconst SponsorsForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n    function clickHandler(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            CompanyName: e.target.form[0].value,\r\n            CompanyUrl: e.target.form[1].value,\r\n            ImageID: (e.target.form[2].value).match(/[^\\\\/]*$/)[0]\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"sponsors\", Form)\r\n    }\r\n    function clickEmpty(e){\r\n        e.preventDefault();\r\n        let form = Form;\r\n        form.push({\r\n            CompanyName: \"\",\r\n            CompanyUrl: \"\",\r\n            ImageID: \"\"\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"sponsors\", Form)\r\n    }\r\n    let dataContainer;\r\n    function cardHandler(e){\r\n        setForm(e)\r\n        props.editForm(\"sponsors\", e)\r\n    }\r\n    dataContainer = Form.slice(0).reverse().map((item, index)=>{\r\n        return(\r\n        <SponsorCard \r\n            key={index} \r\n            index={index} \r\n            form={item} \r\n            data={Form} \r\n            editForm={cardHandler}\r\n            ID={props.EditID} \r\n            fileToUpload={(e)=>props.fileToUpload(e)}\r\n        />)\r\n    })\r\n    return(\r\n        <>\r\n        <form autoComplete=\"off\" id=\"form\">\r\n            <input style={{display: 'none'}} type=\"text\" name=\"sponsorCompany\" placeholder=\"Company Name\"/>\r\n            <input style={{display: 'none'}} type=\"text\" name=\"sponsorURL\" placeholder=\"Company URL\"/>\r\n            <input style={{display: 'none'}} type=\"file\" name=\"sponsorImg\" id=\"test\" \r\n            onChange={(e)=>{props.fileToUpload(e)}}/>\r\n            <button style={{display: 'none'}} onClick={clickHandler}>Add Sponsor</button>\r\n            <AddButton onClick={clickEmpty}/>\r\n        </form>\r\n        {dataContainer}\r\n        {/* {Form.length > 0 ? <FormTable form={Form} setForm={setForm} fileToUpload={(e)=>{props.fileToUpload(e)}}/> : null} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SponsorsForm","import React, {useEffect} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport DeleteButton from './DeleteButton';\r\nimport './VenueCard.css';\r\n\r\nconst VenueCard = props => {\r\n  let formObject = props.form\r\n\r\n  if(formObject.image && props.ID && !formObject.venueImgsrc){\r\n    formObject.venueImgsrc = `https://sahat.lamk.fi/public/${props.ID}/${formObject.image}`\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    if(e.target.type === \"file\"){\r\n      data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n    }\r\n    else{\r\n      data[props.index][e.target.name] = e.target.value\r\n    }\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"venueImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    \r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Title of the Map</FormLabel>\r\n                  <OverlayTrigger \r\n                    placement=\"bottom\" \r\n                    delay={{show: 250, hide: 250}}\r\n                    overlay={<Tooltip>Short name for the map. Example: \"1. Floor\", \"2. Floor\"</Tooltip>}\r\n                    >\r\n                  <FormControl size=\"sm\" value={formObject.title} onChange={(e) => {changeHandler(e)}} name=\"title\"></FormControl>\r\n                  </OverlayTrigger>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n          <FormLabel><Image className=\"filePrev\" src={formObject.venueImgsrc} fluid/></FormLabel>\r\n          <label htmlFor={'hidden-'+props.index} className=\"labelForHidden\">Choose image</label>\r\n          <FormControl size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} id={'hidden-'+props.index} className=\"hidden\" type='file' name=\"image\"></FormControl>\r\n            {/* <Form.File size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} name=\"ImageID\"/> */}\r\n        </div>\r\n      </div>\r\n      {/* <Button className=\"deleteButton\" onClick={deleteFunction}>\r\n        <span className=\"deleteButtonText\">-</span>\r\n      </Button> */}\r\n      <DeleteButton onClick={deleteHandler}></DeleteButton>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default VenueCard;","import React, {useState} from 'react'\r\n//import FormTable from '../components/FormTable'\r\nimport VenueCard from '../components/VenueCard'\r\nimport AddButton from '../components/AddButton'\r\n/**\r\n * @param editForm - evoke appendForm\r\n * @param subForm - get formObject data to Form\r\n * @param fileToUpload - put file to list of files to upload\r\n */\r\nconst VenueTabForm = (props) => {\r\n    const [Form, setForm] = useState(props.subForm)\r\n\r\n    function clickHandler(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            title: e.target.form[0].value,\r\n            image: (e.target.form[1].value).match(/[^\\\\/]*$/)[0]\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"venue\", Form)\r\n    }\r\n    function clickEmpty(e){\r\n        e.preventDefault(); //prevents page refresh\r\n        let form = Form;\r\n        form.push({\r\n            title: \"\",\r\n            image: \"\"\r\n        })\r\n        document.getElementById(\"form\").reset();\r\n        setForm(form)\r\n        props.editForm(\"venue\", Form)\r\n    }\r\n    let dataContainer;\r\n    function cardHandler(e){\r\n        setForm(e)\r\n        props.editForm(\"venue\", e)\r\n    }\r\n    dataContainer = Form.slice(0).reverse().map((item, index)=>{\r\n        return(\r\n        <VenueCard \r\n            key={index} \r\n            index={index} \r\n            form={item} \r\n            data={Form} \r\n            editForm={cardHandler}\r\n            ID={props.EditID} \r\n            fileToUpload={(e)=>props.fileToUpload(e)}\r\n        />)\r\n    })\r\n    return(\r\n        <>\r\n        <form autoComplete=\"off\" id=\"form\">\r\n            <input style={{display: 'none'}} type=\"text\" name=\"title\" placeholder=\"Venue Title\"/>\r\n            <input style={{display: 'none'}} type=\"file\" name=\"venueImg\" id=\"test\" \r\n            onChange={(e)=>{props.fileToUpload(e)}}/>\r\n            <button style={{display: 'none'}} onClick={clickHandler}>Add Venue</button>\r\n            <AddButton onClick={clickEmpty}/>\r\n        </form>\r\n        {dataContainer}\r\n        {/* {Form.length > 0 ? <FormTable form={Form} setForm={setForm} fileToUpload={(e)=>{props.fileToUpload(e)}}/> : null} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VenueTabForm","import React, {useEffect, useState} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl, FormText, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport DeleteButton from './DeleteButton';\r\nimport './MapMarkerCard.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios'\r\n\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\n\r\nconst MapMarkerCard = props => {\r\n  let formObject = props.form\r\n  let ID = props.ID\r\n\r\n  if(formObject.image && ID && !formObject.markerImgsrc){\r\n    formObject.markerImgsrc = `https://sahat.lamk.fi/public/${ID}/${formObject.image}`\r\n    if((formObject.image).includes(\"https://\")){\r\n      formObject.markerImgsrc = formObject.image\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function changeHandler(e){\r\n    let data = props.data;\r\n    //data = data.slice(0).reverse()\r\n    if(e.target.type === \"file\"){\r\n      data[props.index][e.target.name] = e.target.value.match(/[^\\\\/]*$/)[0]\r\n    }\r\n    else{\r\n      data[props.index][e.target.name] = e.target.value\r\n    }\r\n    //data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function deleteHandler(){\r\n    let data = props.data;\r\n    //data = data.slice(0).reverse()\r\n    data.splice(props.index, 1)\r\n    //data = data.slice(0).reverse()\r\n    props.editForm(data)\r\n  }\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"markerImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  const [ErrorMsg, setErrorMsg] = useState()\r\n  async function geocodeHandler(){\r\n    let data = props.data;\r\n    setErrorMsg(\"\")\r\n    if(formObject.address){\r\n      let query = (formObject.address).replace(\" \", \"%20\")\r\n      let apiurl = `https://nominatim.openstreetmap.org/search/${query}?format=json&limit=1`\r\n      await axios.get(apiurl)\r\n      .then(function (res) {\r\n        data[props.index][\"lat\"] = res.data[0].lat;\r\n        data[props.index][\"long\"] = res.data[0].lon;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n        setErrorMsg(\"Cannot get lat and long\")\r\n      })\r\n    }\r\n    \r\n\r\n    props.editForm(data)\r\n  }\r\n  let formElement;\r\n  if (props.markerType === \"restaurants\"){\r\n    formElement =\r\n      <Row>\r\n        <Col>\r\n          <FormGroup>\r\n            <FormLabel>Description</FormLabel>\r\n            <FormControl as=\"textarea\" size=\"sm\" value={formObject.description} onChange={(e) => {changeHandler(e)}} name=\"description\"></FormControl>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <FormLabel>Category</FormLabel>\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              delay={{show: 250, hide: 250}}\r\n              overlay={<Tooltip>Type of restaurant. Example: \"Burger\", \"Pizza\", \"Chinese\" etc</Tooltip>}\r\n              >\r\n            <FormControl size=\"sm\" value={formObject.category} onChange={(e) => {changeHandler(e)}} name=\"category\"></FormControl>\r\n            </OverlayTrigger>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm={1}>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <FormLabel>Rating</FormLabel>\r\n            <OverlayTrigger \r\n              placement=\"bottom\" \r\n              delay={{show: 250, hide: 250}}\r\n              overlay={<Tooltip>Value 1-5</Tooltip>}\r\n              >\r\n            <FormControl size=\"sm\" value={formObject.rating} onChange={(e) => {changeHandler(e)}} name=\"rating\"></FormControl>\r\n            </OverlayTrigger>\r\n          </FormGroup>\r\n        </Col>\r\n        <Col>\r\n          <FormGroup>\r\n            <FormLabel>Web url</FormLabel>\r\n            <FormControl size=\"sm\" value={formObject.webURL} onChange={(e) => {changeHandler(e)}} name=\"webURL\"></FormControl>\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n  }\r\n  else if (props.markerType === \"hotels\"){\r\n    formElement =\r\n    <Row>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Description</FormLabel>\r\n          <FormControl as=\"textarea\" size=\"sm\" value={formObject.description} onChange={(e) => {changeHandler(e)}} name=\"description\"></FormControl>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Rating</FormLabel>\r\n          <OverlayTrigger \r\n              placement=\"bottom\" \r\n              delay={{show: 250, hide: 250}}\r\n              overlay={<Tooltip>Value 1-5</Tooltip>}\r\n              >\r\n          <FormControl size=\"sm\" value={formObject.rating} onChange={(e) => {changeHandler(e)}} name=\"rating\"></FormControl>\r\n          </OverlayTrigger>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col sm={1}>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Web url</FormLabel>\r\n          <FormControl size=\"sm\" value={formObject.webURL} onChange={(e) => {changeHandler(e)}} name=\"webURL\"></FormControl>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n      </Col>\r\n    </Row>\r\n  }\r\n  else if (props.markerType === \"others\"){\r\n    formElement = \r\n    <Row>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Description</FormLabel>\r\n          <FormControl as=\"textarea\" size=\"sm\" value={formObject.description} onChange={(e) => {changeHandler(e)}} name=\"description\"></FormControl>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Category</FormLabel>\r\n          <OverlayTrigger \r\n              placement=\"bottom\" \r\n              delay={{show: 250, hide: 250}}\r\n              overlay={<Tooltip>Type of business. Example: \"Theatre\", \"Library\", \"Shop\"</Tooltip>}\r\n              >\r\n          <FormControl size=\"sm\" value={formObject.category} onChange={(e) => {changeHandler(e)}} name=\"category\"></FormControl>\r\n          </OverlayTrigger>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col sm={1}>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <FormLabel>Web URL</FormLabel>\r\n          <FormControl size=\"sm\" value={formObject.webURL} onChange={(e) => {changeHandler(e)}} name=\"webURL\"></FormControl>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n      </Col>\r\n    </Row>\r\n  }\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          {props.markerType === \"restaurants\" ? <p>Restaurant</p>: null}\r\n          {props.markerType === \"hotels\" ? <p>Hotel</p> : null}\r\n          {props.markerType === \"others\" ? <p>Other</p> : null}\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Name</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.name} onChange={(e) => {changeHandler(e)}} name=\"name\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Address</FormLabel>\r\n                  <OverlayTrigger \r\n                    placement=\"bottom\" \r\n                    delay={{show: 250, hide: 250}}\r\n                    overlay={<Tooltip>Street address, Postcode and City. Example: \"Mukkulankatu 19, 15210 Lahti\"</Tooltip>}\r\n                    >\r\n                  <FormControl size=\"sm\" value={formObject.address} onChange={(e) => {changeHandler(e)}} name=\"address\"></FormControl>\r\n                  </OverlayTrigger>\r\n                  <FormText className=\"text-danger\">{ErrorMsg}</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={1}>\r\n                <br></br>\r\n                <OverlayTrigger\r\n                  placement=\"bottom\"\r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Converts address to latitude and longitude</Tooltip>}\r\n                  >\r\n                <Button className=\"otherButtons\" onClick={geocodeHandler}><AddLocationIcon/></Button>\r\n                </OverlayTrigger>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Latitude</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.lat} onChange={(e) => {changeHandler(e)}} name=\"lat\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Longitude</FormLabel>\r\n                  <FormControl size=\"sm\" value={formObject.long} onChange={(e) => {changeHandler(e)}} name=\"long\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          {formElement}\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n          <FormLabel><Image className=\"filePrev\" src={formObject.markerImgsrc} fluid/></FormLabel>\r\n          <label htmlFor={'hidden-'+props.index} className=\"labelForHidden\">Choose image</label>\r\n          <FormControl size=\"sm\" onChange={(e) => {changeImage(e);changeHandler(e); fileHandler(e)}} id={'hidden-'+props.index} className=\"hidden\" type='file' name=\"image\"></FormControl>\r\n          {/* <Form.File size=\"sm\" onChange={(e) => {changeHandler(e); fileHandler(e); changeImage(e)}} name=\"ImageID\"/> */}\r\n        </div>\r\n      </div>\r\n      <label>Data © OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright</label>\r\n      <DeleteButton onClick={deleteHandler}></DeleteButton>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MapMarkerCard;","import React, {useState} from 'react'\r\n//import Dropdown from 'react-bootstrap/Dropdown'\r\n//import axios from 'axios';\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Card from 'react-bootstrap/Card'\r\nimport MapMarkerCard from './MapMarkerCard'\r\n//import BsForm from 'react-bootstrap/Form'\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\n\r\n//import Overlay from 'react-bootstrap/Overlay'\r\n//import Tooltip from 'react-bootstrap/Tooltip'\r\n/*\r\n\"mapMarkers\":\r\n{\r\n    \"restaurant\":\r\n    [\r\n        {\r\n            \"lat\": \"\",\r\n            \"lng\": \"\",\r\n            \"name\": \"\",\r\n            \"address\": \"\",\r\n            \"description\": \"\",\r\n            \"category\": \"\",\r\n            \"rating\": \"\",\r\n            \"webURL\": \"\",\r\n            \"image\": \"\"\r\n        }\r\n    ],\r\n    \"hotel\":\r\n    [\r\n        {\r\n            \"lat\": \"\",\r\n            \"lng\": \"\",\r\n            \"name\": \"\",\r\n            \"address\": \"\",\r\n            \"description\": \"\",\r\n            \"rating\": \"\",\r\n            \"webURL\": \"\",\r\n            \"image\": \"\",\r\n        }\r\n    ],\r\n    \"other\":\r\n    [\r\n        {\r\n            \"lat\": \"\",\r\n            \"lng\": \"\",\r\n            \"name\": \"\",\r\n            \"address\": \"\",\r\n            \"description\": \"\",\r\n            \"category\": \"\",\r\n            \"webURL\": \"\",\r\n            \"image\": \"\"\r\n        }\r\n    ]\r\n}\r\n*/\r\nconst MapMarkerForm = (props) =>{\r\n    const [Form, setForm] = useState(props.subForm ? props.subForm : \r\n        {\r\n            restaurants: [],\r\n            hotels: [],\r\n            others: []\r\n        })\r\n    const [Data, setData] = useState(formToData(Form))\r\n\r\n    function dataToForm(data){\r\n        let newForm = {\r\n            restaurants: [],\r\n            hotels: [],\r\n            others: []\r\n        }\r\n        for(let item in data){\r\n            let newObj = {}\r\n            let destination;\r\n            for(let key in data[item]){\r\n                if(key === \"key\"){\r\n                    destination = data[item][key]\r\n                }\r\n                else{\r\n                    newObj[key] = data[item][key]\r\n                }\r\n                \r\n            }\r\n            newForm[destination].push(newObj)\r\n        }\r\n        setForm(newForm)\r\n        props.editForm(\"mapmarkers\", newForm)\r\n    }\r\n    function formToData(form){\r\n        let data = []\r\n        //console.log(form)\r\n        for(let key in form){\r\n            for(let i in form[key]){\r\n                //console.log(key, form[key][i])\r\n                let item = form[key][i];\r\n                item[\"key\"] = key\r\n                data.push(item)\r\n            }\r\n        }\r\n\r\n        return data\r\n    }\r\n    function clickHandler(e){\r\n        console.log(e.target)\r\n        let newForm = Form;\r\n        if(e.target.name === \"restaurant\"){\r\n            newForm.restaurants.push({\r\n                lat: \"\",\r\n                long: \"\",\r\n                name: \"\",\r\n                address: \"\",\r\n                description: \"\",\r\n                category: \"\",\r\n                rating: \"\",\r\n                webURL: \"\",\r\n                image: \"\",\r\n            })\r\n        }\r\n        else if(e.target.name === \"hotel\"){\r\n            newForm.hotels.push({\r\n                lat: \"\",\r\n                long: \"\",\r\n                name: \"\",\r\n                address: \"\",\r\n                description: \"\",\r\n                rating: \"\",\r\n                webURL: \"\",\r\n                image: \"\",\r\n            })\r\n        }\r\n        else if(e.target.name === \"other\"){\r\n            newForm.others.push({\r\n                lat: \"\",\r\n                long: \"\",\r\n                name: \"\",\r\n                address: \"\",\r\n                description: \"\",\r\n                category: \"\",\r\n                webURL: \"\",\r\n                image: \"\",\r\n            })\r\n        }\r\n        else{\r\n\r\n        }\r\n        setForm(newForm)\r\n        setData(formToData(newForm))\r\n    }\r\n    \r\n    const [ActiveCat, setActiveCat] = useState(\"restaurants\")\r\n    function catHandler(e){\r\n        e.preventDefault();\r\n        if(ActiveCat !== e.target.name){\r\n            setActiveCat(e.target.name)\r\n        }\r\n        else{\r\n            setActiveCat(null)\r\n        }\r\n    }\r\n\r\n    let dataContainer = null;\r\n    if(Data){\r\n        dataContainer = Data.map((item, index)=>{\r\n            //console.log(item.key)\r\n            if(item.key === ActiveCat || ActiveCat === null){\r\n                return(\r\n                <MapMarkerCard \r\n                    key={index} \r\n                    index={index} \r\n                    form={item} \r\n                    data={Data} \r\n                    editForm={(data)=>dataToForm(data)}\r\n                    ID={props.EditID}\r\n                    markerType={item.key}  \r\n                    fileToUpload={(e)=>props.fileToUpload(e)}\r\n                />)\r\n            }\r\n            else{\r\n                return null\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {/* <Col className=\"cols\" style={{display: 'flex', justifyContent: 'center'}}>\r\n            <Dropdown style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                <Dropdown.Toggle>\r\n                    Marker Categories\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#\" onClick={(e)=>{setActiveForm(e.target.name); document.getElementById(\"form\").reset();}} name=\"restaurant\">Restaurant</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\" onClick={(e)=>{setActiveForm(e.target.name); document.getElementById(\"form\").reset();}} name=\"hotel\">Hotel</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\" onClick={(e)=>{setActiveForm(e.target.name); document.getElementById(\"form\").reset();}} name=\"other\">Other</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </Col> */}\r\n\r\n        {/* <Card style={{width: '50rem'}}>\r\n            <p>Geocoder</p>\r\n            <Nominatim/>\r\n        </Card> */}\r\n        <Row>\r\n            <Card className=\"text-center\" style={{width: '40rem', display:'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\r\n                <h5>Marker Category</h5>\r\n                <Row style={{marginBottom: '10px'}}>\r\n                    <ButtonGroup className=\"navbarButtons\">\r\n                        <Button name=\"restaurants\" onClick={catHandler} className={ActiveCat === \"restaurants\" ? \"active\" : \"inactive\"} disabled={ActiveCat === \"restaurants\"}>Restaurants</Button>\r\n                        <Button name=\"hotels\" onClick={catHandler} className={ActiveCat === \"hotels\" ? \"active\" : \"inactive\"} disabled={ActiveCat === \"hotels\"}>Hotels</Button>\r\n                        <Button name=\"others\" onClick={catHandler} className={ActiveCat === \"others\" ? \"active\" : \"inactive\"} disabled={ActiveCat === \"others\"}>Others</Button>\r\n                    </ButtonGroup>\r\n                </Row>\r\n                <Row>\r\n                    <ButtonGroup style={{display: 'block'}}>\r\n                        {/* <Button name=\"restaurant\" onClick={(e)=>{clickHandler(e)}}>Create Restaurant</Button>\r\n                        <Button name=\"hotel\" onClick={(e)=>{clickHandler(e)}}>Create Hotel</Button>\r\n                        <Button name=\"other\" onClick={(e)=>{clickHandler(e)}}>Create Other</Button> */}\r\n                        <Button className=\"otherButtons\" name={ActiveCat === \"restaurants\" ? \"restaurant\" : ActiveCat === \"hotels\" ? \"hotel\" : \"other\"} onClick={(e)=>{clickHandler(e)}}>Create {ActiveCat === \"restaurants\" ? \"Restaurant\" : ActiveCat === \"hotels\" ? \"Hotel\" : \"Other\"}</Button>\r\n                    </ButtonGroup>\r\n                    {/* <Dropdown style={{display: 'flex', flexWrap: 'wrap', marginTop: '10px'}}>\r\n                        <Dropdown.Toggle>\r\n                            Add Marker\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={(e)=>{clickHandler(e)}} name=\"restaurant\">Restaurant</Dropdown.Item>\r\n                            <Dropdown.Item onClick={(e)=>{clickHandler(e)}} name=\"hotel\">Hotel</Dropdown.Item>\r\n                            <Dropdown.Item onClick={(e)=>{clickHandler(e)}} name=\"other\">Other</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown> */}\r\n                </Row>\r\n            </Card>\r\n        </Row>\r\n        <Col>\r\n            {dataContainer}\r\n        </Col>\r\n        </>\r\n    )\r\n}\r\n\r\n//OpenStreetMap Geocoding\r\n// const Nominatim = (props) => {\r\n//     const [Address, setAddress] = useState()\r\n//     const [Lat, setLat] = useState()\r\n//     const [Lng, setLng] = useState()\r\n//     const [Msg, setMsg] = useState()\r\n//     const latref = useRef()\r\n//     const lngref = useRef()\r\n\r\n//     const [Show, setShow] = useState(false)\r\n//     const [Target, setTarget] = useState()\r\n//     let query = \"\";\r\n//     let apiurl = `https://nominatim.openstreetmap.org/search/${query}?format=json&limit=1`\r\n//     async function clickHandler(e){\r\n//         setMsg(null)\r\n//         e.preventDefault(); //prevents page refresh\r\n//         //document.getElementById(\"lat\").value = \"\"\r\n//         //console.log(e.target.form[0].value)\r\n//         query = Address\r\n//         if(query){\r\n//             console.log(\"query is set\")\r\n//             console.log(query)\r\n//             let modquery = query.replace(\" \",\"%20\")\r\n//             console.log(\"query modified\")\r\n//             console.log(modquery)\r\n//             apiurl = `https://nominatim.openstreetmap.org/search/${modquery}?format=json&limit=1`\r\n//             //console.log(apiurl)\r\n//             axios.get(apiurl)\r\n//             .then(function (res) {\r\n//                 //console.log(res.data[0].lat, res.data[0].lon);\r\n//                 setLat(res.data[0].lat)\r\n//                 setLng(res.data[0].lon)\r\n//                 // document.getElementById(\"lat\").value = res.data[0].lat;\r\n//                 // document.getElementById(\"lng\").value = res.data[0].lon;\r\n//                 // document.getElementById(\"address\").value = query\r\n//             })\r\n//             .catch(function (error) {\r\n//                 console.log(error);\r\n//                 setMsg(\"Cannot find lat and lng of address\")\r\n//             })\r\n//         }\r\n//         else{\r\n//             console.log(\"query is not set\")\r\n//         }\r\n//     }\r\n//     function sleep(ms) {\r\n//         return new Promise(resolve => setTimeout(resolve, ms));\r\n//     }\r\n//     async function clipboard(e){\r\n//         if(e.target.name === \"lat\"){\r\n//             latref.current.select();\r\n//             setTarget(latref)\r\n//         }\r\n//         else if(e.target.name === \"lng\"){\r\n//             lngref.current.select();\r\n//             setTarget(lngref)\r\n//         }\r\n//         else{\r\n//             return null\r\n//         }\r\n//         setShow(true)\r\n//         document.execCommand('copy');\r\n//         await sleep(5000) // tooltip flickers if inputs are rapidly pressed. Too bad!\r\n//         setShow(false)\r\n//     }\r\n//     return(\r\n//         <>\r\n//         {/* <form>\r\n//             <input type=\"text\" placeholder=\"Address\"/>\r\n//             <button onClick={clickHandler}>Get lat and lng</button>\r\n//             <label>Data © OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright</label>\r\n//             {Msg}\r\n//         </form> */}\r\n//         <Row>\r\n//             <Col>\r\n//                 <BsForm>\r\n//                     <BsForm.Group>\r\n//                         <BsForm.Label>Address</BsForm.Label>\r\n//                         <BsForm.Control type=\"text\" onChange={e => {setAddress(e.target.value)}}/>\r\n//                         <BsForm.Text className=\"text-muted\">Data © OpenStreetMap contributors, ODbL 1.0. https://osm.org/copyright</BsForm.Text>\r\n//                     </BsForm.Group>\r\n//                     <BsForm.Group>\r\n//                         <Button onClick={clickHandler}>Get lat and lng</Button>\r\n//                     </BsForm.Group>\r\n//                 </BsForm>\r\n//             </Col>\r\n//             <Col>\r\n//                 <Row>\r\n//                     <Col>\r\n//                         <BsForm.Group>\r\n//                             <BsForm.Label>Latitude</BsForm.Label>\r\n//                             <BsForm.Control ref={latref} type=\"text\" name=\"lat\" onClick={clipboard} value={Lat || ''} readOnly/>\r\n//                             {Msg ? <BsForm.Text className=\"text-danger\">{Msg}</BsForm.Text>:null}\r\n//                         </BsForm.Group>\r\n//                     </Col>\r\n//                     <Col>\r\n//                         <BsForm.Group>\r\n//                             <BsForm.Label>Longitude</BsForm.Label>\r\n//                             <BsForm.Control ref={lngref} type=\"text\" name=\"lng\" onClick={clipboard} value={Lng || ''} readOnly/>\r\n//                         </BsForm.Group>\r\n//                     </Col>\r\n//                     <Overlay target={Target} show={Show} placement=\"bottom\">\r\n//                         {(props)=>(\r\n//                             <Tooltip {...props}>\r\n//                                 Copied to clipboard!\r\n//                             </Tooltip>\r\n//                         )}\r\n//                     </Overlay>\r\n//                 </Row>\r\n//             </Col>\r\n//         </Row>\r\n//         </>\r\n//     )\r\n// }\r\nexport default MapMarkerForm","import React, {useEffect, useState} from 'react'\r\nimport {Card, FormGroup, FormLabel, FormControl, FormText, OverlayTrigger, Tooltip, Button} from 'react-bootstrap'\r\nimport {Form} from 'react-bootstrap'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Image} from 'react-bootstrap'\r\nimport './GeneralCard.css'\r\nimport axios from 'axios'\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\n\r\nconst GeneralCard = props => {\r\n  let formObject = props.FO\r\n\r\n  if(formObject.eventImage && props.ID && !formObject.generalImgsrc){\r\n    formObject.generalImgsrc = `https://sahat.lamk.fi/public/${props.ID}/${formObject.eventImage}`\r\n    if((formObject.eventImage).includes(\"https://\")){\r\n      formObject.generalImgsrc = formObject.eventImage\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    //console.log(ImgSrc)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    formObject = props.form\r\n  })\r\n  function fileHandler(e){\r\n    props.fileToUpload(e)\r\n  }\r\n  function changeImage(e) {\r\n    formObject = props.FO\r\n    \r\n    if (e.target.files && e.target.files[0]) {\r\n      //setImgSrc(URL.createObjectURL(e.target.files[0]))\r\n      formObject[\"generalImgsrc\"] = URL.createObjectURL(e.target.files[0])\r\n    }\r\n  }\r\n  function errorHandler(e){\r\n    console.log(e)\r\n  }\r\n\r\n  const [ErrorMsg, setErrorMsg] = useState(\"\")\r\n  async function geocodeHandler(){\r\n    setErrorMsg(\"\")\r\n    if(props.FO && props.FO.address){\r\n      let query = (props.FO.address).toString().replace(\" \", \"%20\")\r\n      let apiurl = `https://nominatim.openstreetmap.org/search/${query}?format=json&limit=1`\r\n      await axios.get(apiurl)\r\n      .then(function (res) {\r\n        // data[props.index][\"lat\"] = res.data[0].lat;\r\n        // data[props.index][\"long\"] = res.data[0].lon;\r\n        //props.appendForm(\"lat\", res.data[0].lat)\r\n        //props.appendForm(\"long\", res.data[0].lon)\r\n        props.latlongForm(res.data[0].lat, res.data[0].lon)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n        setErrorMsg(\"Unable to find lat and long\")\r\n      })\r\n    }\r\n  }\r\n  //Kuvat https://sahat.lamk.fi/public/{EventID}/{FileName}\r\n  return (\r\n    <Card>\r\n      <div className=\"wrapper\">\r\n        <div className=\"bigDiv\">\r\n          <Form onChange={(e)=> props.editForm(e)}>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Event Name</FormLabel>\r\n                  <FormControl size=\"sm\" name=\"eventName\" defaultValue={formObject.eventName}></FormControl>\r\n                  <FormText>Required</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Event Password</FormLabel>\r\n                  <FormControl size=\"sm\" name=\"eventPass\" defaultValue={formObject.eventPass}></FormControl>\r\n                  <FormText>Required</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Address</FormLabel>\r\n                  <OverlayTrigger \r\n                    placement=\"bottom\" \r\n                    delay={{show: 250, hide: 250}}\r\n                    overlay={<Tooltip>Street address, Postcode and City. Example: \"Mukkulankatu 19, 15210 Lahti\"</Tooltip>}\r\n                    >\r\n                  <FormControl size=\"sm\" defaultValue={formObject.address} onChange={(e)=> props.editForm(e)} name=\"address\"></FormControl>\r\n                  </OverlayTrigger>\r\n                  <FormText className=\"text-danger\">{ErrorMsg}</FormText>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={1}>\r\n                <br></br>\r\n                <OverlayTrigger\r\n                  placement=\"bottom\"\r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Converts address to latitude and longitude</Tooltip>}\r\n                  >\r\n                <Button className=\"otherButtons\" onClick={geocodeHandler}><AddLocationIcon/></Button>\r\n                </OverlayTrigger>\r\n              </Col>\r\n              <Col sm={3}>\r\n                <FormGroup>\r\n                  <FormLabel>Latitude</FormLabel>\r\n                  <FormControl size=\"sm\" defaultValue={formObject.lat} onChange={(e)=> props.editForm(e)} name=\"lat\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm={3}>\r\n                <FormGroup>\r\n                  <FormLabel>Longitude</FormLabel>\r\n                  <FormControl size=\"sm\" defaultValue={formObject.long} onChange={(e)=> props.editForm(e)} name=\"long\"></FormControl>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <FormLabel>Event Color Scheme</FormLabel>\r\n                  <OverlayTrigger \r\n                  placement=\"bottom\" \r\n                  delay={{show: 250, hide: 250}}\r\n                  overlay={<Tooltip>Hexadecimal Value. Example: \"#FFFFFF\"</Tooltip>}\r\n                  >\r\n                    <FormControl size=\"sm\" maxLength=\"7\" name=\"eventColor\" defaultValue={formObject.eventColor}></FormControl>\r\n                  </OverlayTrigger>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group>\r\n                  <Form.Label>Event Visiblity</Form.Label>\r\n                  <Form.Check className=\"checkbox\" type={'radio'} name=\"visibility\" label={'visible'} value=\"visible\" onChange={()=>{}} checked={props.FO.visibility == \"visible\" ? true : false}/> {/*eslint-disable-line*/}\r\n                  <Form.Check className=\"checkbox\" type={'radio'} name=\"visibility\" label={'hidden'} value=\"hidden\" onChange={()=>{}} checked={props.FO.visibility == \"hidden\" ? true : false}/> {/*eslint-disable-line*/}\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        <div className=\"smallDiv\">\r\n            <FormLabel><Image className=\"filePrev\" src={formObject.generalImgsrc} fluid onError={errorHandler}/></FormLabel>\r\n              <label htmlFor={'hidden'} className=\"labelForHidden\">Choose image</label>\r\n            <FormControl size=\"sm\" onChange={(e)=>{fileHandler(e); changeImage(e); props.editForm(e);}} id={'hidden'} className=\"hidden\" type='file' name=\"eventImage\"></FormControl>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default GeneralCard;","//Component for handling event creation\r\nimport React, {useState, useEffect} from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nimport AboutForm from '../components/AboutForm'\r\nimport ParticipantsForm from '../components/ParticipantsForm'\r\nimport ProgrammeForm from '../components/ProgrammeForm'\r\nimport SpeakersForm from '../components/SpeakersForm'\r\nimport SponsorsForm from '../components/SponsorsForm'\r\nimport VenueTabForm from '../components/VenueTabForm'\r\nimport MapMarkerForm from '../components/MapMakerForm'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport GeneralCard from './GeneralCard';\r\nimport './CreateEventForm.css';\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Toast from 'react-bootstrap/Toast'\r\n\r\nimport Image from 'react-bootstrap/Image'\r\nimport LoginScreen from '../screens/LoginScreen';\r\n\r\n/**\r\n * @param changeContent - change screen\r\n * @param id - Event to edit based on ID\r\n */\r\n//Screen: Creates events based on FormObjects. \r\nconst CreateEventForm = (props) => { // Todo rename to CreateEventScreen\r\n    const baseURL = 'https://sahat.lamk.fi';\r\n\r\n    //Visible forms controller\r\n    const [ActiveForm, setActiveForm] = useState(\"GeneralForm\")\r\n    const [EditID, setEditID] = useState(props.id)\r\n    const [Files, setFiles] = useState([])\r\n    let container;\r\n    //Modal and Toast stuff\r\n    const [ToastShow, setToastShow] = useState(false)\r\n    const [ToastHeader, setToastHeader] = useState(\"\")\r\n    const [ToastBody, setToastBody] = useState(\"\")\r\n\r\n    const [ModalShow, setModalShow] = useState(false)\r\n    const [ModalText, setModalText] = useState()\r\n    //ReAuth modal\r\n    const [ModalAuth, setModalAuth] = useState(false)\r\n    //Form variables\r\n    const [FormObjects, setFormObjects] = useState({\r\n        //About/General Form\r\n        eventPass: \"\",\r\n        eventName: \"\",\r\n        visibility: \"hidden\",\r\n        address: \"\",\r\n        lat: \"\",\r\n        long: \"\",\r\n        eventColor: \"\",\r\n        eventImage: \"\", //https://sahat.lamk.fi/saveFile\r\n        eventWebUrl: \"\",\r\n        bodyText1: \"\",\r\n        bodyText2: \"\",\r\n        bodyText3: \"\",\r\n        bodyText4: \"\",\r\n        disclaimer1: \"\",\r\n        disclaimer2: \"\",\r\n        placeName: \"\",\r\n        placeAddress: \"\",\r\n        placePhone: \"\",\r\n        placeEmail: \"\",\r\n        eventTitle: \"\",\r\n        MiWebsite: \"\",\r\n        MiOrg: \"\",\r\n        MiEmail: \"\",\r\n        //other forms\r\n        participants: [],\r\n        programme: [],\r\n        speakers: [],\r\n        sponsors: [],\r\n        mapmarkers: {\r\n            restaurants: [],\r\n            hotels: [],\r\n            others: [],\r\n        },\r\n        venue: [],\r\n        //more about from stuff (deprecated)\r\n        bodyText: [],\r\n        disclaimer: [],\r\n        \r\n    })\r\n    //Input event id, get data to set formobjects\r\n    async function parseEventData(id){\r\n        let data = await getEventData(id);\r\n        if(data){\r\n            setFormObjects({\r\n                //About Form\r\n                eventPass: \"\",\r\n                eventName: `${data.metadata.eventName}`,\r\n                eventImage: `${data.metadata.eventImage}`, //https://sahat.lamk.fi/saveFile\r\n                eventColor: `${data.metadata.colorScheme}`,\r\n                visibility: `${data.metadata.visibility}`,\r\n                address: `${data.metadata.address}`,\r\n                lat: `${data.metadata.lat}`,\r\n                long: `${data.metadata.long}`,\r\n                eventWebUrl: `${data.about.eventWebUrl}`,\r\n                bodyText1: `${data.about.bodyText1}`,\r\n                bodyText2: `${data.about.bodyText2}`,\r\n                bodyText3: `${data.about.bodyText3}`,\r\n                bodyText4: `${data.about.bodyText4}`,\r\n                disclaimer1: `${data.about.disclaimer1}`,\r\n                disclaimer2: `${data.about.disclaimer2}`,\r\n                placeName: `${data.about.eventPlace.name}`,\r\n                placeAddress: `${data.about.eventPlace.address}`,\r\n                placePhone: `${data.about.eventPlace.phone}`,\r\n                placeEmail: `${data.about.eventPlace.email}`,\r\n                eventTitle: `${data.about.title}`,\r\n                MiWebsite: `${data.about.moreInformation.eventWebsite}`,\r\n                MiOrg: `${data.about.moreInformation.organizer}`,\r\n                MiEmail: `${data.about.moreInformation.email}`,\r\n                participants: data.participants,\r\n                programme: data.programme,\r\n                speakers: data.speakers,\r\n                sponsors: data.sponsors,\r\n                bodyText: data.about.bodyText,\r\n                disclaimer: data.about.disclaimer,\r\n                venue: data.venue,\r\n                mapmarkers: data.mapData\r\n            })\r\n        }\r\n    }\r\n    //When EditID is set and if it excists, run parseEventData\r\n    useEffect(() => {\r\n        \r\n        if(EditID){\r\n            parseEventData(EditID);\r\n        }\r\n        else{\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [EditID])\r\n\r\n\r\n    //Variables for selected navbar element highlighting\r\n\r\n    //Change forms in the screen\r\n    function selectForm(e){\r\n        setActiveForm(e.target.name)\r\n    }\r\n    if(ActiveForm === \"AboutForm\"){\r\n        container = <AboutForm \r\n            editForm={changeHandler}\r\n            appendForm={appendForm} \r\n            bodyTexts={FormObjects.bodyText} \r\n            disclaimers={FormObjects.disclaimer} \r\n            FO={FormObjects}\r\n            fileToUpload={fileToUpload}\r\n        />\r\n    }\r\n    else if(ActiveForm === \"GeneralForm\"){\r\n        container = <GeneralCard\r\n            editForm={changeHandler}\r\n            appendForm={appendForm}\r\n            FO={FormObjects}\r\n            fileToUpload={fileToUpload}\r\n            ID={EditID}\r\n            latlongForm={latlongForm}\r\n        />\r\n    }\r\n    else if(ActiveForm === \"ParticipantsForm\"){\r\n        container = <ParticipantsForm \r\n        editForm={appendForm}\r\n        subForm={FormObjects.participants}/>\r\n    }\r\n    else if(ActiveForm === \"ProgrammeForm\"){\r\n        container = <ProgrammeForm \r\n        editForm={appendForm} \r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.programme}/>\r\n    }\r\n    else if(ActiveForm === \"SpeakersForm\"){\r\n        container = <SpeakersForm \r\n        editForm={appendForm} \r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.speakers}\r\n        EditID={EditID}\r\n        />\r\n    }\r\n    else if(ActiveForm === \"SponsorsForm\"){\r\n        container = <SponsorsForm \r\n        editForm={appendForm} \r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.sponsors}\r\n        EditID={EditID}/>\r\n    }\r\n    else if(ActiveForm === \"VenueTabForm\"){\r\n        container = <VenueTabForm \r\n        editForm={appendForm} \r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.venue}\r\n        EditID={EditID}/>\r\n    }\r\n    else if(ActiveForm === \"MapMarkerForm\"){\r\n        container = <MapMarkerForm\r\n        editForm={appendForm}\r\n        fileToUpload={fileToUpload}\r\n        subForm={FormObjects.mapmarkers}\r\n        EditID={EditID}/>\r\n    }\r\n    else{\r\n        container = null\r\n    }\r\n    //changes formobjects, also gets rid of path from file inputs\r\n    function changeHandler(e){ //tuntuu redundantilta, vois poistaa myöhemmin emt.\r\n        //console.log(e.target)\r\n        //e.preventDefault();\r\n        if(e.target.type === \"file\"){\r\n            setFormObjects({\r\n                ...FormObjects,\r\n                [e.target.name]: [(e.target.value).match(/[^\\\\/]*$/)[0]]\r\n            })\r\n        }\r\n        else{\r\n            setFormObjects({\r\n                ...FormObjects,\r\n                [e.target.name]: [e.target.value]\r\n            })\r\n        }\r\n    }\r\n    //same as changeHandler, but target and value is more specified\r\n    function appendForm(target,value){\r\n        setFormObjects({\r\n            ...FormObjects,\r\n            [target]: value\r\n        })\r\n    }\r\n    function latlongForm(lat, long){\r\n        setFormObjects({\r\n            ...FormObjects,\r\n            lat: lat,\r\n            long: long\r\n        })\r\n    }\r\n    //Complete form (to send to back-end)\r\n    let finalForm = {\r\n        eventPass: `${FormObjects.eventPass}`,\r\n        metadata: {\r\n            eventName: `${FormObjects.eventName}`,\r\n            eventImage: `${FormObjects.eventImage}`,\r\n            visibility: `${FormObjects.visibility}`,\r\n            colorScheme: `${FormObjects.eventColor}`,\r\n            address: `${FormObjects.address}`,\r\n            lat: `${FormObjects.lat}`,\r\n            long: `${FormObjects.long}`\r\n        },\r\n        about: {\r\n            eventWebUrl: `${FormObjects.eventWebUrl}`,\r\n            eventPlace: {\r\n                name: `${FormObjects.placeName}`,\r\n                address: `${FormObjects.placeAddress}`,\r\n                phone: `${FormObjects.placePhone}`,\r\n                email: `${FormObjects.placeEmail}`\r\n            },\r\n            title: `${FormObjects.eventTitle}`,\r\n            // bodyText: FormObjects.bodyText, //implemented in mobile?\r\n            bodyText1: `${FormObjects.bodyText1}`,\r\n            bodyText2: `${FormObjects.bodyText2}`,\r\n            bodyText3: `${FormObjects.bodyText3}`,\r\n            bodyText4: `${FormObjects.bodyText4}`,\r\n            moreInformation: {\r\n                eventWebsite: `${FormObjects.MiWebsite}`,\r\n                organizer: `${FormObjects.MiOrg}`,\r\n                email: `${FormObjects.MiEmail}`\r\n            },\r\n            // disclaimer: FormObjects.disclaimer //implemented in mobile?\r\n            disclaimer1: `${FormObjects.disclaimer1}`,\r\n            disclaimer2: `${FormObjects.disclaimer2}`,\r\n        },\r\n        participants: FormObjects.participants,\r\n        programme: FormObjects.programme,\r\n        speakers: FormObjects.speakers,\r\n        sponsors: FormObjects.sponsors,\r\n        venue: FormObjects.venue,\r\n        mapData: FormObjects.mapmarkers\r\n    }\r\n    //func to create event\r\n    function createEventPost(form){\r\n        let adminToken = localStorage.getItem(\"Session\")\r\n        let route;\r\n        if(EditID){\r\n            route = \"/updateEvent\" \r\n            form.id = EditID;\r\n            setModalText(\"Creating Event\");\r\n\r\n        }else{\r\n            route = \"/createEvent\"\r\n            setModalText(\"Editing Event\");\r\n\r\n        }\r\n        setModalShow(true)\r\n        axios.post(baseURL+route, \r\n        form,\r\n        {\r\n            headers:{\r\n                Authorization: \"Bearer \"+adminToken\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            // handle success\r\n            console.log(\"event create success\");\r\n            console.log(response);\r\n            let id;\r\n            \r\n            if(EditID){\r\n                id = EditID;\r\n            }\r\n            else{\r\n                setEditID(response.data._id)\r\n                id = response.data._id\r\n            }\r\n\r\n            if(Files.length > 0){\r\n                setModalText(\"Uploading files . . .\")\r\n                uploadFiles(Files, id)\r\n            }\r\n            else{\r\n                //props.changeContent(\"AdminScreen\")\r\n                setModalShow(false)\r\n                toast(\"Success\", \"Changes were saved\")\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(\"event create fail\");\r\n            console.log(error);\r\n            if(error.response){\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n                \r\n                setModalShow(false)\r\n                toast(\"Error\",`${error.response.data.message}`)\r\n\r\n                if(error.response.status === 404){\r\n                    setModalAuth(true)\r\n                }\r\n            }\r\n            else{\r\n                setModalShow(false)\r\n                toast(\"Error\",\"Cannot connect to the server\")\r\n            }\r\n        })\r\n    }\r\n    //input event id, get eventdata\r\n    function getEventData(id){\r\n        const req = axios.post(baseURL+\"/findEvent\",{\r\n            id: id\r\n        },\r\n        {\r\n            headers:{\r\n              Authorization: \"Bearer \"+localStorage.getItem(\"Session\")\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res) {\r\n            return res.data;\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n\r\n            if(error.response.status === 404){\r\n                setModalAuth(true)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    //function that uploads files.\r\n    function uploadFile(file, cat, id){\r\n        let fd = new FormData();\r\n        //console.log(file)\r\n        fd.append(\"id\", id)\r\n        fd.append(\"myFiles\", file)\r\n        const req = axios.post(baseURL+\"/saveFile\",\r\n        fd, \r\n        {\r\n            headers: {\r\n                'Content-Type': false,\r\n                'processdata': false,\r\n            }\r\n        })\r\n        return req\r\n        .then(function (res){\r\n            console.log(res)\r\n            setModalText(\"Processing \"+file.name);\r\n            return true\r\n        })\r\n        .catch(function (error){\r\n            console.log(error);\r\n\r\n            if(error.response.status === 404){\r\n                setModalAuth(true)\r\n            }\r\n            return false\r\n        })\r\n    }\r\n\r\n    /*\r\n    {\r\n        category: kategoria,\r\n        file: tiedosto,\r\n        bound: (ei kahta eventImage paitsi muut)\r\n    }\r\n    */\r\n    async function uploadFiles(files, id){\r\n        //let i;\r\n        //console.log(\"ID on \" +id)\r\n        // for(i = 0; i < files.length; i++){\r\n        //     await uploadFile(files[i].file, \"myFiles\", id)) \r\n        // }\r\n        let retry = 0;\r\n        while(files.length > 0 && retry < 3){\r\n            if(await uploadFile(files[0].file, \"myFiles\", id)){\r\n                retry = 0\r\n                files.splice(0, 1);\r\n            }\r\n            else{\r\n                console.log(\"Retry file\")\r\n                retry++;\r\n            }\r\n        }\r\n        if(retry >= 3){\r\n            setModalShow(false)\r\n            toast(\"Error\",\"Failed to upload a file after multiple attempts\")\r\n        }\r\n        else{\r\n            setModalShow(false)\r\n            toast(\"Success\",\"Changes were saved\")\r\n        }\r\n        //props.changeContent(\"AdminScreen\")\r\n    }\r\n    //adds file to list of files to upload\r\n    function fileToUpload(e){\r\n        let files = Files;\r\n        let file = e.target.files[0]\r\n        let category = e.target.name;\r\n        //Check if file already exists or (incase of eventImage) is already bound to input\r\n        let found = false;\r\n        let i;\r\n        for(i = 0; i < files.length; i++){\r\n            if(e.target.name === \"eventImage\" && \r\n            files[i].bound === e.target.name){\r\n                found = true;\r\n                break;\r\n            }\r\n            else if(file && files[i].file.name === file.name){\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if(found){\r\n            //console.log(\"Dup found\")\r\n            files.splice(i,1);\r\n        }\r\n        else{\r\n            //console.log(\"dup not found\")\r\n        }\r\n        files.push(\r\n            {\r\n                category: category,\r\n                file: file,\r\n                bound: e.target.name\r\n            }\r\n        );\r\n\r\n        setFiles(files)\r\n        //console.log(Files)\r\n    }\r\n\r\n    function toast(header, body){\r\n        setToastHeader(header)\r\n        setToastBody(body)\r\n        setToastShow(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"CreateEventForm\">\r\n            <Modal show={ModalShow} backdrop=\"static\" keyboard={false}>\r\n                <Modal.Header>Processing request <Spinner animation=\"border\"/></Modal.Header>\r\n                <Modal.Body>{ModalText}</Modal.Body>\r\n            </Modal>\r\n            <Modal show={ModalAuth} backdrop=\"static\" keyboard={false}>\r\n                <Modal.Header>Authentication token has expired. Please reauthenticate.</Modal.Header>\r\n                <Modal.Body>\r\n                    <LoginScreen\r\n                        changeContent={()=>{}}\r\n                        visibility={setModalAuth}/>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <div>\r\n                <Row style={{marginTop:'120px'}}>\r\n                    <Col>\r\n                        {container}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <div style={{position:'fixed', top:'0', width:'100%', backgroundColor:'white'}}>\r\n                <Navbar expand=\"lg\" style={{display:'flex', paddingLeft:'50px', paddingRight:'50px', justifyContent:'center', alignItems:'center', flexDirection:'row', backgroundColor:'white'}}>\r\n                    <Button style={{flex:'1'}} className=\"otherButtons\" onClick={()=>\r\n                    {\r\n                        if(window.confirm(\"Are you sure?! Unsubmitted events are not saved!\")){\r\n                            props.changeContent(\"AdminScreen\")\r\n                        }  \r\n                    }}>Return to Main Menu</Button>\r\n                    <div style={{display:'flex', flex:'6', alignContent: 'center', justifyContent:'center', flexDirection:'row'}}>\r\n                        <Image src=\"https://pbs.twimg.com/profile_images/572706560015470592/Jszif-0y_normal.png\" style={{marginRight:'10px'}}/>\r\n                        <Navbar.Brand><h3>{FormObjects.eventName ? `${FormObjects.eventName}`:null}</h3></Navbar.Brand>\r\n                    </div>\r\n                    <Button style={{flex:'1'}} className=\"otherButtons\" onClick={()=>createEventPost(finalForm)}>Save Changes</Button>\r\n                </Navbar>\r\n                <div style={{display: 'flex', justifyContent: 'center'}} >\r\n                    <ButtonGroup className=\"navbarButtons\" style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                        <Button name=\"GeneralForm\" onClick={selectForm} className={ActiveForm === \"GeneralForm\" ? \"active\" : \"inactive\"}>General</Button>\r\n                        <Button name=\"AboutForm\" onClick={selectForm} className={ActiveForm === \"AboutForm\" ? \"active\" : \"inactive\"}>About</Button>\r\n                        <Button name=\"ParticipantsForm\" onClick={selectForm} className={ActiveForm === \"ParticipantsForm\" ? \"active\" : \"inactive\"}>Participants</Button>\r\n                        <Button name=\"ProgrammeForm\" onClick={selectForm} className={ActiveForm === \"ProgrammeForm\" ? \"active\" : \"inactive\"}>Programme</Button>\r\n                        <Button name=\"SpeakersForm\" onClick={selectForm} className={ActiveForm === \"SpeakersForm\" ? \"active\" : \"inactive\"}>Speakers</Button>\r\n                        <Button name=\"SponsorsForm\" onClick={selectForm} className={ActiveForm === \"SponsorsForm\" ? \"active\" : \"inactive\"}>Sponsors</Button>\r\n                        <Button name=\"VenueTabForm\" onClick={selectForm} className={ActiveForm === \"VenueTabForm\" ? \"active\" : \"inactive\"}>Venue</Button>\r\n                        <Button name=\"MapMarkerForm\" onClick={selectForm} className={ActiveForm === \"MapMarkerForm\" ? \"active\" : \"inactive\"}>Map Marker</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n            </div>\r\n            \r\n            <div style={{position:\"fixed\", top:\"100px\",right:\"20px\"}}>\r\n                <Toast onClose={()=>setToastShow(false)} show={ToastShow} delay={3000} style={{zIndex:'5'}} autohide>\r\n                    <Toast.Header className={ToastHeader === \"Success\" ? \"text-success\" : ToastHeader === \"Error\" ? \"text-danger\" : \"\"}>{ToastHeader}</Toast.Header>\r\n                    <Toast.Body>{ToastBody}</Toast.Body>\r\n                </Toast>\r\n            </div>\r\n            \r\n            {/* <div>{props.id ? <p>DebugMsg. Edit form \"{props.id}\"</p> : null}</div> */}\r\n            {/* <button name=\"AboutForm\" onClick={selectForm}>About</button>\r\n            <button name=\"ParticipantsForm\" onClick={selectForm}>Participants</button>\r\n            <button name=\"ProgrammeForm\" onClick={selectForm}>Programme</button>\r\n            <button name=\"SpeakersForm\" onClick={selectForm}>Speakers</button>\r\n            <button name=\"SponsorsForm\" onClick={selectForm}>Sponsors</button>\r\n            <button name=\"VenueTabForm\" onClick={selectForm}>VenueTab</button>\r\n            <button onClick={()=>createEventPost(finalForm)}>{props.id ? \"Edit Event\" : \"Create Event\"}</button>\r\n            <button onClick={()=>\r\n                {\r\n                    if(window.confirm(\"Are you sure?! Unsubmitted events are not saved!\")){\r\n                        props.changeContent(\"AdminScreen\")\r\n                    }  \r\n                }}>Cancel\r\n            </button> */}\r\n            \r\n            {/* <input type=\"file\" name=\"test\" encType=\"multipart/form-data\" onChange={(e)=>{\r\n                //fileToUpload(e)\r\n                uploadFile(e.target.files[0],\"test\")\r\n            }}/> */}\r\n            <p>{JSON.stringify(finalForm, null, 2)}</p>\r\n            <p>{JSON.stringify(Files,null,2)}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default CreateEventForm\r\n\r\n/*\r\n    let formObject = {\r\n        eventPass: \"eventin passu\",\r\n            metadata: {\r\n              eventName: \"simon testi 2\",\r\n              eventImage: \"Test\"\r\n            },\r\n            about: {\r\n              eventWebUrl: \"Test\",\r\n              eventPlace: {\r\n                  name: \"Test\",\r\n                  address: \"Test\",\r\n                  phone: \"Test\",\r\n                  email: \"Test\"\r\n            },\r\n            title: \"Test\",\r\n            bodyText1: \"Test\",\r\n            bodyText2: \"Test\",\r\n            bodyText3: \"Test\",\r\n            bodyText4: \"Test\",\r\n            moreInformation: {\r\n                eventWebsite: \"Test\",\r\n                organizer: \"Test\",\r\n                email: \"Test\"\r\n            },\r\n            disclaimer1: \"Test\",\r\n            disclaimer2: \"Test\"\r\n        },\r\n        participants: [\r\n            {\r\n                Country: \"Test\",\r\n                FirstName: \"Test\",\r\n                LastName: \"Test\",\r\n                Email: \"Test\",\r\n                Phone: \"Test\",\r\n                Company: \"Test\"\r\n            }\r\n        ],\r\n        programme: [\r\n            {\r\n                \"Time\": \"Test\",\r\n                \"Location\": \"Test\",\r\n                \"Description\": \"Test\",\r\n                \"NameOfSpeaker\": \"Test\",\r\n                \"TitleOfSpeaker\": \"Test\",\r\n                \"SpecialTitleOfSpeaker\": \"Test\",\r\n                \"CompanyOfSpeaker\": \"Test\"\r\n            }\r\n        ],\r\n        speakers: [\r\n            {\r\n                \"Speaker\": \"Test\",\r\n                \"Title\": \"Test\",\r\n                \"SpecialTitle\": \"Test\",\r\n                \"Company\": \"Test\",\r\n                \"ImageID\": \"https://sahat.lamk.fi/images/speakerImages/${imageID}\"\r\n            }\r\n        ],\r\n        sponsors: [\r\n            {\r\n                \"CompanyName\": \"Test\",\r\n                \"CompanyUrl\": \"Test\",\r\n                \"ImageID\": \"Test\"\r\n            }\r\n        ]\r\n    }\r\n*/","import React, { useState, useEffect } from 'react';\r\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n// import PrivateRoute from './assets/context/PrivateRoute';\r\n// import { AuthContext } from './assets/context/Auth';\r\n// import Store from './assets/context/Store';\r\n// import { Jumbotron } from 'reactstrap';\r\n//import './App.css';\r\nimport './App.scss';\r\n// Components imports\r\n\r\n// import EventsNavi from './assets/components/eventsnavi/EventsNavi';\r\n// import EditingNavi from './assets/components/editingnavi/EditingNavi';\r\n// import InfoEdit from './assets/components/info/InfoEdit';\r\n\r\nimport LoginScreen from './assets/screens/LoginScreen'\r\nimport AdminScreen from './assets/screens/AdminScreen';\r\nimport CreateEventForm from './assets/components/CreateEventForm'\r\n\r\nconst App = () => {\r\n  const [Content, setContent] = useState(localStorage.getItem(\"Session\") ? \"AdminScreen\" : \"LoginScreen\");\r\n  const [EditID, setEditID] = useState(null)\r\n  let container;\r\n  //when EditID is set, move screen to top and render CreateScreen\r\n  useEffect(() => {\r\n    if(EditID != null){\r\n      window.scrollTo(0, 0)\r\n      setContent(\"CreateScreen\")\r\n    }\r\n  }, [EditID])\r\n  //If screen is changed to other than CreateScreen, set EditID to null\r\n  useEffect(() => {\r\n    if(Content === \"AdminScreen\" || Content === \"LoginScreen\"){\r\n      setEditID(null)\r\n    }\r\n  }, [Content])\r\n  //redundant\r\n  function setSession(input){\r\n    if(input === \"\"){\r\n      console.log(\"delete session\");\r\n      localStorage.clear();\r\n    }\r\n    else{\r\n      localStorage.setItem(\"Session\", input);\r\n    }\r\n  }\r\n  //redundant\r\n  function getSession(){\r\n    return localStorage.getItem(\"Session\");\r\n  }\r\n  function test()\r\n  {\r\n    setSession(\"token\");\r\n    setContent(\"AdminScreen\");\r\n    //props.changeSession(\"\");\r\n  }\r\n  //console.log(\"Session: \" +getSession());\r\n  //change screen based on Content\r\n  if(Content === \"LoginScreen\"){\r\n    container = \r\n    <div>\r\n      <LoginScreen changeContent={setContent} \r\n      visibility={()=>{}}/>\r\n      <button className=\"LoginScreen\" onClick={test}>Bypass</button>\r\n    </div>\r\n  }\r\n  if(Content === \"CreateScreen\"){\r\n    container =\r\n    <>\r\n      <CreateEventForm \r\n        changeContent={setContent} \r\n        id={EditID}\r\n      />\r\n    </>\r\n  }\r\n  else if(Content === \"AdminScreen\"){\r\n    container = \r\n      <AdminScreen \r\n        changeContent={setContent} \r\n        readSession={getSession} \r\n        changeSession={setSession}\r\n        changeID={setEditID}\r\n      />\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      {container}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n// const [authTokens, setAuthTokens] = useState();\r\n// const setTokens = (data) => {\r\n//   localStorage.setItem(\"tokens\", JSON.stringify(data));\r\n//   setAuthTokens(data);\r\n// }\r\n\r\n    \r\n// <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\r\n//   <Router>\r\n    //     <div>\r\n    //     <Jumbotron>\r\n    //       <Route exact path=\"/\" component={Login} />\r\n    //         <Switch>\r\n    //           <Store>\r\n    //             <PrivateRoute path=\"/eventsnavi\" component={EventsNavi} />\r\n    //             <PrivateRoute path=\"/editingnavi\" component={EditingNavi} />\r\n    //           </Store>\r\n    //         </Switch>\r\n    //     </Jumbotron>\r\n    //     </div>\r\n    //   </Router>\r\n    // </AuthContext.Provider>","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nrender(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}